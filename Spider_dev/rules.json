{
    "concert_singer": {
        "0": {
            "condition": "When answering about \"how many singers\"",
            "operation": " make sure to count records from the \"singer\" table instead of the \"songs\" table."
        },
        "1": {
            "condition": "When answering about \"how many singers\", When counting entities",
            "operation": " use the canonical key for counting records from the specified table (\"singer\")."
        },
        "2": {
            "condition": "When the question asks for \"singers\"",
            "operation": " use the exact table name \"singer\" instead of \"singers\"."
        },
        "3": {
            "condition": "When the question asks for \"singers\", When counting all records in a table",
            "operation": " use lowercase \"count(*)\" function and do not apply any WHERE filters to include all rows regardless of null values."
        },
        "4": {
            "condition": "When the question asks about singers",
            "operation": " use the exact table name \"singer\" instead of \"singers\"."
        },
        "5": {
            "condition": "When the question asks about singers, When ordering by age from oldest to youngest",
            "operation": " sort by \"age\" in descending order (DESC) instead of ascending order (ASC)."
        },
        "6": {
            "condition": "When the question asks about singers",
            "operation": " use the exact table name \"singer\" instead of \"singers\"."
        },
        "7": {
            "condition": "When ordering by age in descending order",
            "operation": " sort by \"age\" column in descending direction (highest to lowest)."
        },
        "8": {
            "condition": "When the question asks about singers, When ordering by age in descending order, When selecting output columns",
            "operation": " include \"name\", \"country\", and \"age\" in that exact order."
        },
        "9": {
            "condition": "When answering about \"average, minimum, and maximum age of all singers from France\"",
            "operation": " make sure the output order: AVG(age), MIN(age), MAX(age)."
        },
        "10": {
            "condition": "When the question mentions \"singers\"",
            "operation": " \"singers\" actually means \"singer\" in schema."
        },
        "11": {
            "condition": "When the question mentions \"from France\"",
            "operation": " use the exact literal value 'France' for the country filter."
        },
        "12": {
            "condition": "When answering about \"average, minimum, and maximum age of all singers from France\", When the question mentions \"singers\", When the question mentions \"from France\", When computing aggregates on age",
            "operation": " use the exact column name \"age\" from the singer table."
        },
        "13": {
            "condition": "When answering about \"average, minimum, and maximum age for all French singers\"",
            "operation": " make sure the output order: AVG(age), MIN(age), MAX(age)."
        },
        "14": {
            "condition": "When the question mentions \"French singers\"",
            "operation": " \"French\" actually means \"country = 'France'\" in schema."
        },
        "15": {
            "condition": "When answering about \"average, minimum, and maximum age for all French singers\", When the question mentions \"French singers\", When the question mentions \"singers\"",
            "operation": " \"singers\" actually means table \"singer\" in schema."
        },
        "16": {
            "condition": "When the question asks for song name and release year",
            "operation": " select \"song_name\" and \"song_release_year\" as output columns."
        },
        "17": {
            "condition": "When retrieving information about songs by singers",
            "operation": " use the \"singer\" table instead of a \"songs\" table."
        },
        "18": {
            "condition": "When ordering by the youngest singer",
            "operation": " order by \"age\" in ascending order and keep only the first row."
        },
        "19": {
            "condition": "When the question asks for song name and release year, When retrieving information about songs by singers, When ordering by the youngest singer, When the question mentions \"song by the youngest singer\"",
            "operation": " the output should show the song details from the singer with the minimum age value."
        },
        "20": {
            "condition": "When selecting song details",
            "operation": " use exact column names \"song_name\" and \"song_release_year\" instead of generic names like s.name and s.release_year."
        },
        "21": {
            "condition": "When retrieving data about singers and their songs",
            "operation": " use the \"singer\" table directly instead of joining separate \"songs\" and \"singers\" tables."
        },
        "22": {
            "condition": "When finding the youngest singer",
            "operation": " order by \"age\" in ascending order (implied by youngest) and limit to 1 result instead of using subqueries for maximum age."
        },
        "23": {
            "condition": "When selecting song details, When retrieving data about singers and their songs, When finding the youngest singer, When the question asks for \"all the songs of the youngest singer\"",
            "operation": " ensure the output includes both song names and release years for that specific singer."
        },
        "24": {
            "condition": "When the question asks about singers",
            "operation": " use the table \"singer\" instead of \"singers\""
        },
        "25": {
            "condition": "When the question asks about singers, When the question asks for distinct countries where singers above age 20 are from",
            "operation": " select distinct values of the \"country\" column from the \"singer\" table where the \"age\" column is greater than 20"
        },
        "26": {
            "condition": "When the question asks about \"countries with singers\"",
            "operation": " use the exact table name \"singer\" instead of \"singers\" as specified in the schema."
        },
        "27": {
            "condition": "When filtering for singers above age 20",
            "operation": " apply the condition age > 20 to select only those rows."
        },
        "28": {
            "condition": "When the question asks about \"countries with singers\", When filtering for singers above age 20, When asking for different countries",
            "operation": " use DISTINCT on the country column to return unique country values."
        },
        "29": {
            "condition": "When the question asks for countries and singer counts",
            "operation": " use the exact table name \"singer\" instead of \"singers\" as shown in the schema."
        },
        "30": {
            "condition": "When the question asks for countries and singer counts, When counting singers per country",
            "operation": " count using the canonical key from the singer table (though not explicitly shown, the amendment indicates the table reference correction is the primary requirement)."
        },
        "31": {
            "condition": "When the question asks about \"singers\"",
            "operation": " use the exact table name \"singer\" instead of the plural form \"singers\"."
        },
        "32": {
            "condition": "When counting entities from the singer table",
            "operation": " use the canonical table reference \"singer\" without any alias."
        },
        "33": {
            "condition": "When grouping by country",
            "operation": " use the exact column name \"country\" from the singer table."
        },
        "34": {
            "condition": "When the question asks about \"singers\", When counting entities from the singer table, When grouping by country, When counting singers per country",
            "operation": " count all rows in each country group using the standard count function."
        },
        "35": {
            "condition": "When answering about \"song names by singers above the average age\"",
            "operation": " make sure the output order: song_name."
        },
        "36": {
            "condition": "When the question mentions \"singers\"",
            "operation": " \"singers\" actually means \"singer in schema\"."
        },
        "37": {
            "condition": "When the question mentions \"age\"",
            "operation": " \"age\" actually means \"age in schema\"."
        },
        "38": {
            "condition": "When filtering singers by age above average",
            "operation": " compute the average age from all singers using avg(age) and compare each singer's age to that average value."
        },
        "39": {
            "condition": "When answering about \"song names by singers above the average age\", When the question mentions \"singers\", When the question mentions \"age\", When filtering singers by age above average, When the question asks for \"song names by singers\"",
            "operation": " ensure the result includes only songs from singers who meet the age condition."
        },
        "40": {
            "condition": "When answering about \"song names by singers who are older than average\"",
            "operation": " make sure the output order: song_name."
        },
        "41": {
            "condition": "When the question mentions \"singers\"",
            "operation": " \"singers\" actually means table \"singer\" in schema."
        },
        "42": {
            "condition": "When the question mentions \"older than average\"",
            "operation": " compute the average of column \"age\" from table \"singer\" and filter for rows where \"age\" is greater than that average value."
        },
        "43": {
            "condition": "When answering about \"song names by singers who are older than average\", When the question mentions \"singers\", When the question mentions \"older than average\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "44": {
            "condition": "When the question asks about stadiums",
            "operation": " use the exact table name \"stadium\" instead of \"stadiums\"."
        },
        "45": {
            "condition": "When filtering for capacity between 5000 and 10000",
            "operation": " use BETWEEN 5000 AND 10000 to include both bounds inclusively, not capacity < 5000 OR capacity > 10000 which would exclude the range."
        },
        "46": {
            "condition": "When the question asks about stadiums, When filtering for capacity between 5000 and 10000, When selecting the location column",
            "operation": " use the exact column name \"LOCATION\" with uppercase letters as shown in the schema."
        },
        "47": {
            "condition": "When the question asks about \"stations\"",
            "operation": " use the table \"stadium\" instead of \"stations\" as the data source."
        },
        "48": {
            "condition": "When filtering for capacity between 5000 and 10000",
            "operation": " use the condition \"BETWEEN 5000 AND 10000\" to include both bounds (inclusive range) rather than excluding values outside this range."
        },
        "49": {
            "condition": "When the question asks about \"stations\", When filtering for capacity between 5000 and 10000, When selecting location information",
            "operation": " use the exact column name \"LOCATION\" (capitalized) instead of \"location\" while maintaining the same semantic meaning."
        },
        "50": {
            "condition": "When calculating maximum capacity",
            "operation": " use max(capacity) instead of MIN(capacity) for the maximum value calculation."
        },
        "51": {
            "condition": "When calculating the average capacity",
            "operation": " use average instead of AVG(capacity) for the column alias."
        },
        "52": {
            "condition": "When calculating maximum capacity, When calculating the average capacity, When referencing the stadiums table",
            "operation": " use stadium instead of stadiums for the correct table name."
        },
        "53": {
            "condition": "When answering about maximum capacity and average of all stadiums",
            "operation": " select both MAX(Capacity) and the average column directly from the stadium table."
        },
        "54": {
            "condition": "When calculating maximum capacity",
            "operation": " use MAX(Capacity) without an alias."
        },
        "55": {
            "condition": "When answering about maximum capacity and average of all stadiums, When calculating maximum capacity, When including the average value",
            "operation": " select the average column directly instead of calculating it with AVG(Capacity)."
        },
        "56": {
            "condition": "When calculating maximum capacity",
            "operation": " use max(capacity) instead of min(capacity) to get the highest value."
        },
        "57": {
            "condition": "When calculating maximum capacity, When referencing the stadium data source",
            "operation": " use table stadium instead of stadiums to correctly identify the data source."
        },
        "58": {
            "condition": "When answering about stadium name and capacity",
            "operation": " make sure the output order: name, capacity."
        },
        "59": {
            "condition": "When the question mentions \"stadiums\"",
            "operation": " \"stadiums\" actually means \"stadium\" in schema."
        },
        "60": {
            "condition": "When answering about stadium name and capacity, When the question mentions \"stadiums\", When the question mentions \"highest average attendance\"",
            "operation": " rank rows by average in descending direction and keep the first 1 row."
        },
        "61": {
            "condition": "When the question asks about stadium information",
            "operation": " use table \"stadium\" (not \"stadiums\") as the base table T1."
        },
        "62": {
            "condition": "When the question asks for the stadium with highest average attendance",
            "operation": " order rows by column \"average\" in descending direction and keep only the first row."
        },
        "63": {
            "condition": "When the question asks about stadium information, When the question asks for the stadium with highest average attendance, When producing output for stadium details",
            "operation": " include columns \"name\" and \"capacity\" in that order."
        },
        "64": {
            "condition": "When the question asks about concerts",
            "operation": " use the exact table name \"concert\" instead of \"concerts\"."
        },
        "65": {
            "condition": "When filtering for multiple years with \"or\" logic",
            "operation": " use OR between year conditions instead of AND to include records from either year."
        },
        "66": {
            "condition": "When the question asks about concerts, When filtering for multiple years with \"or\" logic, When counting concerts from year 2014 or 2015",
            "operation": " filter where year equals 2014 OR year equals 2015 to correctly include concerts from either year rather than requiring both years simultaneously."
        },
        "67": {
            "condition": "When the question asks about concerts",
            "operation": " use the exact table name \"concert\" instead of \"concerts\" as shown in the schema."
        },
        "68": {
            "condition": "When referring to the year column",
            "operation": " use the exact column name \"YEAR\" with consistent uppercase case instead of lowercase \"year\"."
        },
        "69": {
            "condition": "When the question asks about concerts, When referring to the year column, When counting concerts that occurred in specific years",
            "operation": " count all rows from the \"concert\" table where the \"YEAR\" column equals 2014 or 2015."
        },
        "70": {
            "condition": "When answering about \"stadium name and number of concerts in each stadium\"",
            "operation": " make sure the output order: T2.name, count of concerts."
        },
        "71": {
            "condition": "When the question mentions \"stadium name\"",
            "operation": " \"stadium name\" actually means \"T2.name in schema\"."
        },
        "72": {
            "condition": "When combining concerts as T1 and stadium as T2 for shared entities",
            "operation": " link rows where T1.stadium_id = T2.stadium_id; keep only matching pairs (inner match)."
        },
        "73": {
            "condition": "When the question asks for \"number of concerts in each stadium\"",
            "operation": " compute the count using T1.stadium_id as the counting key per stadium group."
        },
        "74": {
            "condition": "When answering about \"stadium name and number of concerts in each stadium\", When the question mentions \"stadium name\", When combining concerts as T1 and stadium as T2 for shared entities, When the question asks for \"number of concerts in each stadium\", When the question says \"per stadium\"",
            "operation": " organize results by T1.stadium_id and compute count of concerts per group."
        },
        "75": {
            "condition": "When answering about \"how many concerts play there\" for each stadium",
            "operation": " make sure the output order: T2.name first, then the count."
        },
        "76": {
            "condition": "When the question mentions \"stadium\"",
            "operation": " \"stadium\" actually means \"T2.name in schema\"."
        },
        "77": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.stadium_id = T2.stadium_id exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "78": {
            "condition": "When the question asks for \"count of concerts\"",
            "operation": " compute the number of rows using the canonical key token for concerts (T1.stadium_id)."
        },
        "79": {
            "condition": "When answering about \"how many concerts play there\" for each stadium, When the question mentions \"stadium\", When combining T1 and T2 for shared entities, When the question asks for \"count of concerts\", When the question says \"per stadium\"/\"by stadium\"",
            "operation": " organize results by T1.stadium_id and compute requested aggregates per group."
        },
        "80": {
            "condition": "When combining concert and stadium tables",
            "operation": " link rows where T1.Stadium_ID = T2.Stadium_ID and keep only matching pairs (inner match)."
        },
        "81": {
            "condition": "When counting concerts per stadium",
            "operation": " count all rows using count(*) to include cases where concert_ID might be NULL."
        },
        "82": {
            "condition": "When grouping results by stadium",
            "operation": " group by T1.stadium_id for case consistency."
        },
        "83": {
            "condition": "When selecting stadium names",
            "operation": " use T2.name instead of T2.Name for case consistency."
        },
        "84": {
            "condition": "When combining concert and stadium tables, When counting concerts per stadium, When grouping results by stadium, When selecting stadium names, When answering about concerts per stadium",
            "operation": " make sure the output order includes stadium name followed by concert count."
        },
        "85": {
            "condition": "When answering about stadium name and capacity",
            "operation": " make sure the output order: T2.name, T2.capacity"
        },
        "86": {
            "condition": "When the question mentions \"stadium name\"",
            "operation": " \"stadium name\" actually means \"T2.name in schema\""
        },
        "87": {
            "condition": "When the question mentions \"capacity\"",
            "operation": " \"capacity\" actually means \"T2.capacity in schema\""
        },
        "88": {
            "condition": "When combining concert AS T1 and stadium AS T2 for shared entities",
            "operation": " link rows where T1.stadium_id = T2.stadium_id exactly as shown; keep only matching pairs (inner match)"
        },
        "89": {
            "condition": "When filtering for concerts in year 2014 or after",
            "operation": " apply condition T1.year >= 2014 using exact literal 2014"
        },
        "90": {
            "condition": "When the question asks for stadium with most number of concerts",
            "operation": " organize results by T2.stadium_id and count using T1.* (or equivalent counting key)"
        },
        "91": {
            "condition": "When ranking by number of concerts",
            "operation": " order rows by count(*) DESC to find the stadium with the highest count"
        },
        "92": {
            "condition": "When answering about stadium name and capacity, When the question mentions \"stadium name\", When the question mentions \"capacity\", When combining concert AS T1 and stadium AS T2 for shared entities, When filtering for concerts in year 2014 or after, When the question asks for stadium with most number of concerts, When ranking by number of concerts, When the question asks for the stadium with most concerts",
            "operation": " take only the first row after ordering by concert count descending"
        },
        "93": {
            "condition": "When answering about stadium name and capacity",
            "operation": " make sure the output order: t2.name, t2.capacity"
        },
        "94": {
            "condition": "When the question mentions \"stadium with the most concerts after 2013\"",
            "operation": " join concert as t1 with stadium as t2 on t1.stadium_id = t2.stadium_id and keep only matching pairs (inner match)"
        },
        "95": {
            "condition": "When filtering for concerts after 2013",
            "operation": " add a WHERE condition for t1.year > 2013"
        },
        "96": {
            "condition": "When counting concerts per stadium",
            "operation": " group by t2.stadium_id and count using count(*)"
        },
        "97": {
            "condition": "When answering about stadium name and capacity, When the question mentions \"stadium with the most concerts after 2013\", When filtering for concerts after 2013, When counting concerts per stadium, When finding the stadium with the most concerts",
            "operation": " order by count(*) descending and keep only the first row"
        },
        "98": {
            "condition": "When answering about \"which year has most number of concerts\"",
            "operation": " make sure the output order: YEAR."
        },
        "99": {
            "condition": "When the question mentions \"concerts\"",
            "operation": " \"concerts\" actually means \"concert\" in schema."
        },
        "100": {
            "condition": "When the question asks for \"most number of concerts\"",
            "operation": " count the number of rows using the canonical key and order by count(*) DESC to find the year with the highest count."
        },
        "101": {
            "condition": "When answering about \"which year has most number of concerts\", When the question mentions \"concerts\", When the question asks for \"most number of concerts\", When producing output",
            "operation": " do not include explicit aliases like concert_count in the final output columns."
        },
        "102": {
            "condition": "When answering about \"the year that had the most concerts\"",
            "operation": " make sure the output order: YEAR."
        },
        "103": {
            "condition": "When counting concerts",
            "operation": " count all rows using count(*) and use this count directly in ordering instead of selecting it as an output column."
        },
        "104": {
            "condition": "When finding the year with the most concerts",
            "operation": " order the results by concert count in descending order (DESC) instead of ascending order (ASC)."
        },
        "105": {
            "condition": "When answering about \"the year that had the most concerts\", When counting concerts, When finding the year with the most concerts, When referencing the concerts table",
            "operation": " use the exact table name \"concert\" instead of \"concerts\"."
        },
        "106": {
            "condition": "When the question asks for stadium names",
            "operation": " use the exact column token \"name\" from the stadium table instead of \"stadium_name\"."
        },
        "107": {
            "condition": "When identifying stadiums without concerts",
            "operation": " use a subquery approach with NOT IN instead of checking for NULL values on concert_id."
        },
        "108": {
            "condition": "When referencing the stadium table",
            "operation": " use the exact table name \"stadium\" instead of \"stadiums\"."
        },
        "109": {
            "condition": "When correlating between stadium and concert tables",
            "operation": " use \"stadium_id\" as the correlation key instead of \"concert_id\"."
        },
        "110": {
            "condition": "When the question asks for stadium names, When identifying stadiums without concerts, When referencing the stadium table, When correlating between stadium and concert tables, When checking for stadiums without concerts",
            "operation": " implement a subquery that identifies stadiums not present in the concert table to properly handle cases where stadiums may have no associated concerts."
        },
        "111": {
            "condition": "When the question asks about stadiums without concerts",
            "operation": " use the exact table name \"stadium\" instead of plural forms."
        },
        "112": {
            "condition": "When filtering for stadiums not associated with concerts",
            "operation": " use a subquery with NOT IN condition checking stadium_id NOT IN (SELECT stadium_id FROM concert) instead of checking for NULL values on non-existent columns."
        },
        "113": {
            "condition": "When the question asks about stadiums without concerts, When filtering for stadiums not associated with concerts, When combining stadium and concert tables",
            "operation": " use stadium_id as the linking key between the tables to identify which stadiums have concerts."
        },
        "114": {
            "condition": "When the question asks for countries with both singers above age 40 and singers below age 30",
            "operation": " use INTERSECT between two separate queries instead of OR in WHERE clause."
        },
        "115": {
            "condition": "When referring to the singers table",
            "operation": " use the exact table name \"singer\" instead of the plural form \"singers\"."
        },
        "116": {
            "condition": "When handling age conditions",
            "operation": " split into separate queries for \"age > 40\" and \"age < 30\" instead of combining them with OR."
        },
        "117": {
            "condition": "When removing DISTINCT",
            "operation": " do not include DISTINCT in the final query as it is not needed with INTERSECT."
        },
        "118": {
            "condition": "When the question asks for countries with both singers above age 40 and singers below age 30, When referring to the singers table, When handling age conditions, When removing DISTINCT, When finding countries that satisfy both conditions",
            "operation": " use INTERSECT to find countries that appear in both the over-40 and under-30 result sets."
        },
        "119": {
            "condition": "When the question asks to exclude stadiums having concerts in a specific year",
            "operation": " use EXCEPT to filter out stadiums that match the exclusion condition instead of simple inequality filtering."
        },
        "120": {
            "condition": "When combining stadium and concert information",
            "operation": " link rows where T1.stadium_id = T2.stadium_id to connect concerts to their stadiums."
        },
        "121": {
            "condition": "When excluding stadiums with concerts in 2014",
            "operation": " specifically exclude stadiums where T1.year = 2014 to target concerts from that exact year."
        },
        "122": {
            "condition": "When referring to the stadium table",
            "operation": " use the exact table name \"stadium\" instead of \"stadiums\" throughout the query."
        },
        "123": {
            "condition": "When the question asks to exclude stadiums having concerts in a specific year, When combining stadium and concert information, When excluding stadiums with concerts in 2014, When referring to the stadium table, When producing output",
            "operation": " return only the \"name\" column from the stadium table."
        },
        "124": {
            "condition": "When combining stadium and concert tables",
            "operation": " link rows where T2.stadium_id = T1.stadium_id using an inner join."
        },
        "125": {
            "condition": "When filtering for concerts in 2014",
            "operation": " include only rows where T1.year = 2014."
        },
        "126": {
            "condition": "When finding stadiums without concerts in 2014",
            "operation": " use set difference (EXCEPT) between all stadiums and stadiums that had concerts in 2014."
        },
        "127": {
            "condition": "When selecting stadium names",
            "operation": " output T2.name from the stadium table (T2)."
        },
        "128": {
            "condition": "When combining stadium and concert tables, When filtering for concerts in 2014, When finding stadiums without concerts in 2014, When selecting stadium names, When referencing table names",
            "operation": " use exact table names \"concert\" and \"stadium\" (singular) as shown in the amends."
        },
        "129": {
            "condition": "When the question asks for concert name and theme",
            "operation": " select \"concert_name\" and \"theme\" columns instead of generic \"name\" and \"theme\"."
        },
        "130": {
            "condition": "When counting singers in concerts",
            "operation": " join \"singer_in_concert\" table with \"concert\" table using \"concert_id\" as the linking key."
        },
        "131": {
            "condition": "When counting the number of singers per concert",
            "operation": " use count(*) to count all rows in the joined singer association table rather than counting a specific singer_id column."
        },
        "132": {
            "condition": "When grouping by concert identifier",
            "operation": " use the fully qualified \"T2.concert_id\" with table alias qualification instead of unqualified \"concert_id\"."
        },
        "133": {
            "condition": "When the question asks for concert name and theme, When counting singers in concerts, When counting the number of singers per concert, When grouping by concert identifier, When organizing results by concert",
            "operation": " group by the concert's canonical key \"T2.concert_id\" to ensure proper aggregation per concert entity."
        },
        "134": {
            "condition": "When answering about concert names and themes",
            "operation": " select \"concert_name\" and \"theme\" from the \"concert\" table (T1)."
        },
        "135": {
            "condition": "When counting singers per concert",
            "operation": " join \"singer_in_concert\" (T2) with \"concert\" (T1) where T1.concert_id = T2.concert_id and count all rows using count(*)."
        },
        "136": {
            "condition": "When grouping results by concert",
            "operation": " group by T2.concert_id to organize results per concert."
        },
        "137": {
            "condition": "When answering about concert names and themes, When counting singers per concert, When grouping results by concert, When producing output columns",
            "operation": " present them in the order concert_name, theme, number_of_singers."
        },
        "138": {
            "condition": "When the question asks for \"singer names\"",
            "operation": " use \"T2.name\" as the exact output column for singer names."
        },
        "139": {
            "condition": "When counting concerts per singer",
            "operation": " join \"singer_in_concert AS T1\" with \"singer AS T2\" where \"T1.singer_id = T2.singer_id\" to link concerts to singers."
        },
        "140": {
            "condition": "When grouping to count concerts per singer",
            "operation": " group by \"T2.singer_id\" to ensure correct aggregation per singer."
        },
        "141": {
            "condition": "When the question asks for \"singer names\", When counting concerts per singer, When grouping to count concerts per singer, When computing number of concerts",
            "operation": " count the rows using the canonical key from the concert table to get the concert count per singer."
        },
        "142": {
            "condition": "When answering about \"names of singers and number of concerts for each person\"",
            "operation": " make sure the output order: T2.name, COUNT(*)"
        },
        "143": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.singer_id = T2.singer_id exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "144": {
            "condition": "When the question asks for \"number of concerts for each person\"",
            "operation": " compute the count using the canonical key T1.singer_id from the singer_in_concert table."
        },
        "145": {
            "condition": "When the question says \"per person\"/\"for each person\"",
            "operation": " organize results by T2.singer_id and compute requested aggregates per group."
        },
        "146": {
            "condition": "When answering about \"names of singers and number of concerts for each person\", When combining T1 and T2 for shared entities, When the question asks for \"number of concerts for each person\", When the question says \"per person\"/\"for each person\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for table names like \"singer_in_concert\" and \"singer\"."
        },
        "147": {
            "condition": "When the question asks for \"singer names\"",
            "operation": " use \"T2.name\" from the \"singer\" table instead of \"singer_name\" from a non-existent source."
        },
        "148": {
            "condition": "When combining data about singers in concerts",
            "operation": " join \"singer_in_concert AS T1\" to \"singer AS T2\" on \"T1.singer_id = T2.singer_id\" to establish the relationship."
        },
        "149": {
            "condition": "When needing concert year information",
            "operation": " join \"concert AS T3\" on \"T1.concert_id = T3.concert_id\" to access concert details."
        },
        "150": {
            "condition": "When the question asks for \"singer names\", When combining data about singers in concerts, When needing concert year information, When filtering for concerts in year 2014",
            "operation": " use \"T3.year = 2014\" instead of filtering on a non-existent \"year\" column in the wrong table."
        },
        "151": {
            "condition": "When answering about singers who performed in concerts",
            "operation": " use T2.name from the singer table instead of name from singers table."
        },
        "152": {
            "condition": "When combining singer and concert information",
            "operation": " join through singer_in_concert as T1 using LEFT JOIN on T1.singer_id = T2.singer_id and LEFT JOIN on T1.concert_id = T3.concert_id."
        },
        "153": {
            "condition": "When answering about singers who performed in concerts, When combining singer and concert information, When filtering for concerts in 2014",
            "operation": " use T3.year = 2014 instead of concert_year since year exists in the concert table rather than singers table."
        },
        "154": {
            "condition": "When the question mentions \"nation\"",
            "operation": " use the exact column token \"country\" instead of \"nation\" in the output."
        },
        "155": {
            "condition": "When filtering for songs containing 'Hey' in their name",
            "operation": " apply the exact filter condition song_name LIKE '%Hey%' without changing the pattern."
        },
        "156": {
            "condition": "When the question mentions \"nation\", When filtering for songs containing 'Hey' in their name, When selecting output columns",
            "operation": " maintain the order name followed by country as specified in the question."
        },
        "157": {
            "condition": "When answering about singers and their countries",
            "operation": " use table \"singer\" (not \"singers\") to get name and country information."
        },
        "158": {
            "condition": "When filtering for songs with 'Hey' in the title",
            "operation": " use column \"song_name\" (not \"title\") with the exact pattern '%Hey%' to match song titles containing the word 'Hey'."
        },
        "159": {
            "condition": "When answering about singers and their countries, When filtering for songs with 'Hey' in the title, When the question asks for name and country of origin",
            "operation": " output columns should be \"name\" and \"country\" in that order from the \"singer\" table."
        },
        "160": {
            "condition": "When answering about stadiums that hosted concerts in both 2014 and 2015",
            "operation": " use the concert and stadium tables instead of only the stadiums table."
        },
        "161": {
            "condition": "When combining concert and stadium tables",
            "operation": " link rows where T1.stadium_id = T2.stadium_id and keep only matching pairs (inner match)."
        },
        "162": {
            "condition": "When filtering for concerts in 2014",
            "operation": " include only rows where T1.Year = 2014."
        },
        "163": {
            "condition": "When filtering for concerts in 2015",
            "operation": " include only rows where T1.Year = 2015."
        },
        "164": {
            "condition": "When finding stadiums with concerts in both years",
            "operation": " use INTERSECT logic to combine results from the 2014 and 2015 filters."
        },
        "165": {
            "condition": "When answering about stadiums that hosted concerts in both 2014 and 2015, When combining concert and stadium tables, When filtering for concerts in 2014, When filtering for concerts in 2015, When finding stadiums with concerts in both years, When selecting stadium information",
            "operation": " output T2.name and T2.location instead of unqualified name and location columns."
        },
        "166": {
            "condition": "When answering about stadiums that had concerts in both 2014 and 2015",
            "operation": " use the concert table and stadium table instead of just the stadiums table."
        },
        "167": {
            "condition": "When combining concert and stadium tables",
            "operation": " link rows where T1.stadium_id = T2.stadium_id using an inner match."
        },
        "168": {
            "condition": "When filtering for concerts in 2014",
            "operation": " use T1.Year = 2014 as one condition."
        },
        "169": {
            "condition": "When filtering for concerts in 2015",
            "operation": " use T1.Year = 2015 as another condition."
        },
        "170": {
            "condition": "When finding stadiums with concerts in both years",
            "operation": " use INTERSECT to combine results from the 2014 and 2015 filters instead of trying to satisfy both year conditions on the same row."
        },
        "171": {
            "condition": "When selecting output columns",
            "operation": " include name and location from the stadium table with proper table aliases."
        },
        "172": {
            "condition": "When answering about stadiums that had concerts in both 2014 and 2015, When combining concert and stadium tables, When filtering for concerts in 2014, When filtering for concerts in 2015, When finding stadiums with concerts in both years, When selecting output columns, When referencing columns",
            "operation": " use table aliases T1 and T2 instead of direct column names without aliases."
        },
        "173": {
            "condition": "When the question mentions \"concerts\"",
            "operation": " use the exact table name \"concert\" instead of \"concerts\" as shown in the schema."
        },
        "174": {
            "condition": "When the question mentions \"stadiums\"",
            "operation": " use the exact table name \"stadium\" instead of \"stadiums\" as shown in the schema."
        },
        "175": {
            "condition": "When finding the stadium with the highest capacity",
            "operation": " order stadium rows by capacity in descending direction and keep only the first row."
        },
        "176": {
            "condition": "When the question mentions \"concerts\", When the question mentions \"stadiums\", When finding the stadium with the highest capacity, When counting concerts at a specific stadium",
            "operation": " count rows from the concert table where stadium_id matches the stadium with the highest capacity."
        },
        "177": {
            "condition": "When the question asks about \"concerts\"",
            "operation": " use the exact table name \"concert\" instead of \"concerts\" as shown in the schema."
        },
        "178": {
            "condition": "When the question asks about \"stadiums\"",
            "operation": " use the exact table name \"stadium\" instead of \"stadiums\" as shown in the schema."
        },
        "179": {
            "condition": "When finding the stadium with the largest capacity",
            "operation": " order stadium rows by capacity in descending order and take the first row."
        },
        "180": {
            "condition": "When the question asks about \"concerts\", When the question asks about \"stadiums\", When finding the stadium with the largest capacity, When counting concerts for a specific stadium",
            "operation": " count rows from the concert table where stadium_id matches the stadium_id of the stadium with largest capacity."
        }
    },
    "pets_1": {
        "0": {
            "condition": "When counting pets with weight heavier than 10",
            "operation": " use the comparison operator > instead of < to filter for weight values greater than 10."
        },
        "1": {
            "condition": "When filtering on weight values",
            "operation": " use the exact literal value 10 without quotes as specified in the question."
        },
        "2": {
            "condition": "When counting pets with weight heavier than 10, When filtering on weight values, When counting pets",
            "operation": " count all rows that satisfy the weight > 10 condition to get the number of pets heavier than 10."
        },
        "3": {
            "condition": "When the question asks for pets with weight greater than 10",
            "operation": " use the comparison operator > instead of < in the filter condition."
        },
        "4": {
            "condition": "When the question asks for pets with weight greater than 10, When counting pets that meet a weight condition",
            "operation": " count all rows where the weight column value is greater than 10."
        },
        "5": {
            "condition": "When answering about \"the weight of the youngest dog\"",
            "operation": " make sure the output order: select only the \"weight\" column."
        },
        "6": {
            "condition": "When the question mentions \"dogs\"",
            "operation": " \"dogs\" actually means \"pets\" in schema."
        },
        "7": {
            "condition": "When the question asks for \"youngest\" (minimum age)",
            "operation": " order rows by \"pet_age\" in ascending direction and keep the first 1 row."
        },
        "8": {
            "condition": "When answering about \"the weight of the youngest dog\", When the question mentions \"dogs\", When the question asks for \"youngest\" (minimum age), When handling text literals",
            "operation": " do not change case, spacing, or punctuation."
        },
        "9": {
            "condition": "When answering about \"the youngest dog\"",
            "operation": " use the table \"pets\" instead of \"dogs\" and select the column \"weight\" directly rather than using MAX(weight)."
        },
        "10": {
            "condition": "When finding the youngest entity",
            "operation": " order by \"pet_age\" in ascending order and take only the first result using LIMIT 1."
        },
        "11": {
            "condition": "When answering about \"the youngest dog\", When finding the youngest entity, When the question mentions \"dog\"",
            "operation": " the relevant table is actually \"pets\" in the schema, not \"dogs\"."
        },
        "12": {
            "condition": "When the question asks for maximum weight per pet type",
            "operation": " use max(weight) instead of AVG(weight) to calculate the maximum value."
        },
        "13": {
            "condition": "When referring to pet type in the schema",
            "operation": " use the exact column name \"petType\" instead of \"pet_type\"."
        },
        "14": {
            "condition": "When calculating aggregates per group",
            "operation": " maintain grouping by \"petType\" to ensure results are organized by each pet type."
        },
        "15": {
            "condition": "When the question asks for maximum weight per pet type, When referring to pet type in the schema, When calculating aggregates per group, When the question asks for maximum weight",
            "operation": " do not use aliases like \"max_weight\" since the aggregate function name clearly indicates the calculation."
        },
        "16": {
            "condition": "When the question asks for maximum weight for each type of pet",
            "operation": " organize results by the exact token \"petType\" and compute the maximum of \"weight\" per group."
        },
        "17": {
            "condition": "When producing output columns",
            "operation": " place the maximum weight calculation first in the output order, followed by the pet type."
        },
        "18": {
            "condition": "When the question asks for maximum weight for each type of pet, When producing output columns, When referring to table and column identifiers",
            "operation": " use lowercase \"pets\" for the table name and lowercase \"petType\" for the column reference exactly as shown in the schema."
        },
        "19": {
            "condition": "When the question asks for \"maximum weight and type for each type of pet\"",
            "operation": " use \"petType\" as the grouping column instead of \"type\"."
        },
        "20": {
            "condition": "When organizing results by pet type",
            "operation": " place \"max(weight)\" before \"petType\" in the output order."
        },
        "21": {
            "condition": "When the question asks for \"maximum weight and type for each type of pet\", When organizing results by pet type, When grouping by pet type",
            "operation": " use \"petType\" as the column alias in the grouping clause."
        },
        "22": {
            "condition": "When answering about \"number of pets owned by students who are older than 20\"",
            "operation": " make sure the output order: COUNT(*)"
        },
        "23": {
            "condition": "When the question mentions \"students who are older than 20\"",
            "operation": " \"older than 20\" actually means \"T1.age > 20\" in schema"
        },
        "24": {
            "condition": "When combining T1 (student) and T2 (has_pet) for shared entities",
            "operation": " link rows where T1.stuid = T2.stuid; keep only matching pairs (inner match)"
        },
        "25": {
            "condition": "When answering about \"number of pets owned by students who are older than 20\", When the question mentions \"students who are older than 20\", When combining T1 (student) and T2 (has_pet) for shared entities, When the question asks for \"number of pets\"",
            "operation": " compute the number of rows using the canonical key token for pets (T2.stuid or T2.petid, though the amends suggest counting all joined rows)"
        },
        "26": {
            "condition": "When answering about \"pets owned by students with age greater than 20\"",
            "operation": " make sure the output order: count of students"
        },
        "27": {
            "condition": "When the question mentions \"students\"",
            "operation": " use table \"student AS T1\" as the primary source instead of \"pets\" table"
        },
        "28": {
            "condition": "When combining T1 (student) and T2 (has_pet) for shared entities",
            "operation": " link rows where T1.stuid = T2.stuid exactly as shown; keep only matching pairs (inner match)"
        },
        "29": {
            "condition": "When filtering by student age",
            "operation": " use T1.age > 20 instead of student_age > 20 to filter on the correct table's column"
        },
        "30": {
            "condition": "When answering about \"pets owned by students with age greater than 20\", When the question mentions \"students\", When combining T1 (student) and T2 (has_pet) for shared entities, When filtering by student age, When counting students who have pets",
            "operation": " compute the number of rows using the canonical key T1.stuid for counting students"
        },
        "31": {
            "condition": "When answering about \"number of dog pets raised by female students\"",
            "operation": " make sure the output order: count of dog pets owned by female students."
        },
        "32": {
            "condition": "When the question mentions \"dog pets\"",
            "operation": " \"dog\" actually means \"pettype = 'dog'\" in schema."
        },
        "33": {
            "condition": "When the question mentions \"female students\"",
            "operation": " \"female\" actually means \"sex = 'F'\" in schema."
        },
        "34": {
            "condition": "When combining tables for student-pet relationships",
            "operation": " use a three-table join chain starting with \"student\" as T1, then \"has_pet\" as T2 with ON T1.stuid = T2.stuid, then \"pets\" as T3 with ON T2.petid = T3.petid."
        },
        "35": {
            "condition": "When filtering for dog pets",
            "operation": " use T3.pettype = 'dog' exactly as specified."
        },
        "36": {
            "condition": "When filtering for female students",
            "operation": " use T1.sex = 'F' exactly as specified."
        },
        "37": {
            "condition": "When answering about \"number of dog pets raised by female students\", When the question mentions \"dog pets\", When the question mentions \"female students\", When combining tables for student-pet relationships, When filtering for dog pets, When filtering for female students, When counting dog pets owned by female students",
            "operation": " compute the number of rows using the proper join chain that connects female students to their dog pets through the has_pet relationship table."
        },
        "38": {
            "condition": "When the question asks about dog pets raised by female students",
            "operation": " use the has_pet table as an intermediate junction table between students and pets instead of directly joining pets to students."
        },
        "39": {
            "condition": "When joining students and has_pet tables",
            "operation": " link rows where T1.stuid = T2.stuid exactly."
        },
        "40": {
            "condition": "When joining has_pet and pets tables",
            "operation": " link rows where T2.petid = T3.petid exactly."
        },
        "41": {
            "condition": "When filtering by gender",
            "operation": " use T1.sex = 'F' instead of 'female'."
        },
        "42": {
            "condition": "When the question asks about dog pets raised by female students, When joining students and has_pet tables, When joining has_pet and pets tables, When filtering by gender, When filtering by pet type",
            "operation": " use T3.pettype = 'dog' instead of p.pet_type."
        },
        "43": {
            "condition": "When counting distinct types of pets",
            "operation": " count the number of unique values in the \"pettype\" column using DISTINCT modifier instead of counting all rows."
        },
        "44": {
            "condition": "When counting distinct types of pets, When the question asks for \"number of distinct type of pets\"",
            "operation": " use the exact column token \"pettype\" to identify pet types in the schema."
        },
        "45": {
            "condition": "When counting different types of pet",
            "operation": " count the number of unique values in the \"pettype\" column instead of counting all rows."
        },
        "46": {
            "condition": "When counting different types of pet, When the question asks for \"different types\" or \"distinct types\"",
            "operation": " use the DISTINCT modifier on the \"pettype\" column to ensure only unique values are counted."
        },
        "47": {
            "condition": "When selecting first names of students",
            "operation": " use DISTINCT T1.Fname to get unique first names instead of first_name."
        },
        "48": {
            "condition": "When combining student and pet information",
            "operation": " join student AS T1 with has_pet AS T2 on T1.stuid = T2.stuid and pets AS T3 on T3.petid = T2.petid to properly link students to their pets through relationship tables."
        },
        "49": {
            "condition": "When selecting first names of students, When combining student and pet information, When filtering for students who have cat or dog pets",
            "operation": " use T3.pettype = 'cat' OR T3.pettype = 'dog' instead of contradictory AND conditions to find students with either pet type."
        },
        "50": {
            "condition": "When answering about \"first names of students with cats or dogs as pets\"",
            "operation": " use DISTINCT T1.Fname to select from the correct table with deduplication."
        },
        "51": {
            "condition": "When combining student, has_pet, and pets tables",
            "operation": " link rows where T1.stuid = T2.stuid and T3.petid = T2.petid using inner matches."
        },
        "52": {
            "condition": "When filtering for cats or dogs as pets",
            "operation": " use the condition T3.pettype = 'cat' OR T3.pettype = 'dog' with exact literals 'cat' and 'dog'."
        },
        "53": {
            "condition": "When answering about \"first names of students with cats or dogs as pets\", When combining student, has_pet, and pets tables, When filtering for cats or dogs as pets, When handling identifier delimiters",
            "operation": " do not replace the exact table aliases T1, T2, T3 once established for this schema."
        },
        "54": {
            "condition": "When the question asks for \"first name of students\"",
            "operation": " use \"t1.fname\" from the \"student\" table instead of \"first_name\" from a non-existent \"students\" table."
        },
        "55": {
            "condition": "When combining student and pet information",
            "operation": " link \"student\" (T1), \"has_pet\" (T2), and \"pets\" (T3) tables where T1.stuid = T2.stuid and T2.petid = T3.petid to establish proper relationships."
        },
        "56": {
            "condition": "When filtering for cat pets",
            "operation": " use condition \"t3.pettype = 'cat'\" exactly as specified."
        },
        "57": {
            "condition": "When filtering for dog pets",
            "operation": " use condition \"t3.pettype = 'dog'\" exactly as specified."
        },
        "58": {
            "condition": "When the question asks for \"first name of students\", When combining student and pet information, When filtering for cat pets, When filtering for dog pets, When finding students who have both cat and dog pets",
            "operation": " use INTERSECT between the results for cat pets and dog pets instead of OR conditions which would find students with either pet."
        },
        "59": {
            "condition": "When the question asks for \"students' first names\"",
            "operation": " use the exact column token \"T1.Fname\" for output."
        },
        "60": {
            "condition": "When combining student and pet information",
            "operation": " join \"student AS T1\" with \"has_pet AS T2\" where \"T1.stuid = T2.stuid\" and then join \"pets AS T3\" where \"T3.petid = T2.petid\", keeping only matching rows (inner match)."
        },
        "61": {
            "condition": "When finding students with cats",
            "operation": " filter for \"T3.pettype = 'cat'\" exactly as specified."
        },
        "62": {
            "condition": "When finding students with dogs",
            "operation": " filter for \"T3.pettype = 'dog'\" exactly as specified."
        },
        "63": {
            "condition": "When the question asks for \"students' first names\", When combining student and pet information, When finding students with cats, When finding students with dogs, When identifying students who have both cats and dogs",
            "operation": " use INTERSECT to combine results from the cat query and dog query instead of using contradictory AND conditions on the same column."
        },
        "64": {
            "condition": "When answering about students who do not have a cat pet",
            "operation": " use a subquery with NOT IN instead of a simple WHERE filter to exclude students with cats."
        },
        "65": {
            "condition": "When combining student, has_pet, and pets tables",
            "operation": " add joins between these tables instead of querying only the students table."
        },
        "66": {
            "condition": "When linking tables",
            "operation": " reference stuid as the join condition instead of filtering directly on pet."
        },
        "67": {
            "condition": "When using table aliases",
            "operation": " use proper table aliases T1, T2, and T3 instead of no aliases."
        },
        "68": {
            "condition": "When answering about students who do not have a cat pet, When combining student, has_pet, and pets tables, When linking tables, When using table aliases, When filtering for cat pets",
            "operation": " filter on pettype = 'cat' in the subquery instead of pet != 'cat' in the main query."
        },
        "69": {
            "condition": "When answering about students who do not own a cat as a pet",
            "operation": " use a subquery with NOT IN instead of a simple WHERE filter to exclude students with cats."
        },
        "70": {
            "condition": "When combining student, has_pet, and pets tables",
            "operation": " add joins between these tables instead of querying only the students table."
        },
        "71": {
            "condition": "When linking tables",
            "operation": " reference stuid as the join condition instead of assuming direct pet ownership in the main table."
        },
        "72": {
            "condition": "When filtering for cat ownership",
            "operation": " filter on pettype = 'cat' in the subquery instead of checking pet != 'cat' directly."
        },
        "73": {
            "condition": "When answering about students who do not own a cat as a pet, When combining student, has_pet, and pets tables, When linking tables, When filtering for cat ownership, When referencing tables",
            "operation": " use proper table aliases T1, T2, and T3 instead of unspecified table references."
        },
        "74": {
            "condition": "When the question asks for student id",
            "operation": " use \"stuid\" instead of \"id\" as the column name."
        },
        "75": {
            "condition": "When the question asks about students who do not have a cat pet",
            "operation": " use an EXCEPT set operation to remove students who have cats from all students instead of a simple WHERE filter."
        },
        "76": {
            "condition": "When working with the student table",
            "operation": " use \"student\" as the table name instead of \"students\"."
        },
        "77": {
            "condition": "When combining student data with pet information",
            "operation": " join \"student\" as T1 with \"has_pet\" as T2 using \"T1.stuid = T2.stuid\" and join \"has_pet\" as T2 with \"pets\" as T3 using \"T3.petid = T2.petid\"."
        },
        "78": {
            "condition": "When the question asks for student id, When the question asks about students who do not have a cat pet, When working with the student table, When combining student data with pet information, When filtering for cat pets",
            "operation": " use \"T3.pettype = 'cat'\" as the condition instead of \"pet = 'cat'\", and use \"pettype\" instead of \"pet\" as the column reference."
        },
        "79": {
            "condition": "When the question asks for student ids who do not own cats",
            "operation": " use the exact identifier \"stuid\" from the \"student\" table instead of \"student_id\" from \"students\"."
        },
        "80": {
            "condition": "When identifying students with cat pets",
            "operation": " join tables using T1.stuid = T2.stuid and T3.petid = T2.petid, then filter with T3.pettype = 'cat' exactly."
        },
        "81": {
            "condition": "When excluding students with cats",
            "operation": " use EXCEPT set operation to remove students who have cat pets from all students, rather than simple WHERE filtering."
        },
        "82": {
            "condition": "When the question asks for student ids who do not own cats, When identifying students with cat pets, When excluding students with cats, When handling table references",
            "operation": " use aliases T1 for student table, T2 for has_pet table, and T3 for pets table as established in the joins."
        },
        "83": {
            "condition": "When answering about \"first name and age of students\"",
            "operation": " make sure the output order: T1.fname, T1.age"
        },
        "84": {
            "condition": "When the question mentions \"students\"",
            "operation": " use table \"student\" with alias T1"
        },
        "85": {
            "condition": "When combining tables for student-pet relationships",
            "operation": " link T1 (student) and T2 (has_pet) where T1.stuid = T2.stuid, and link T2 and T3 (pets) where T3.petid = T2.petid, keeping only matching pairs (inner match)"
        },
        "86": {
            "condition": "When filtering for students with dogs",
            "operation": " use condition T3.pettype = 'dog' exactly as specified"
        },
        "87": {
            "condition": "When answering about \"first name and age of students\", When the question mentions \"students\", When combining tables for student-pet relationships, When filtering for students with dogs, When excluding students with cats",
            "operation": " use subquery exclusion where T1.stuid NOT IN (select stuid from has_pet join pets on pets.petid = has_pet.petid where pettype = 'cat')"
        },
        "88": {
            "condition": "When selecting student information",
            "operation": " use T1.fname and T1.age as output columns instead of just first_name."
        },
        "89": {
            "condition": "When referring to the student table",
            "operation": " always use the explicit alias T1 instead of the base table name."
        },
        "90": {
            "condition": "When determining pet ownership",
            "operation": " join has_pet as T2 using T1.stuid = T2.stuid and join pets as T3 using T3.petid = T2.petid instead of using boolean flags."
        },
        "91": {
            "condition": "When filtering for students with dogs",
            "operation": " use T3.pettype = 'dog' instead of has_dog = 1."
        },
        "92": {
            "condition": "When excluding students with cats",
            "operation": " use a subquery exclusion with NOT IN for students who have cats instead of including them with has_cat = 1."
        },
        "93": {
            "condition": "When selecting student information, When referring to the student table, When determining pet ownership, When filtering for students with dogs, When excluding students with cats, When answering about students with dogs but not cats",
            "operation": " use proper relational joins through has_pet and pets tables to determine pet ownership instead of direct boolean column references."
        },
        "94": {
            "condition": "When the question asks for \"type\" of a pet",
            "operation": " use the exact column name \"pettype\" instead of \"type\" in the output."
        },
        "95": {
            "condition": "When the question asks for \"type\" of a pet, When ordering by age to find the youngest pet",
            "operation": " use the exact column name \"pet_age\" instead of \"age\" in the ordering condition."
        },
        "96": {
            "condition": "When answering about \"the youngest animal\"",
            "operation": " order rows by \"pet_age\" in ascending order and keep only the first row."
        },
        "97": {
            "condition": "When the question mentions \"type of pet\"",
            "operation": " \"type of pet\" actually means \"pettype\" in the schema."
        },
        "98": {
            "condition": "When the question mentions \"how much does it weigh\"",
            "operation": " include the \"weight\" column in the output."
        },
        "99": {
            "condition": "When answering about \"the youngest animal\", When the question mentions \"type of pet\", When the question mentions \"how much does it weigh\", When selecting from the database",
            "operation": " use table \"pets\" instead of \"animals\"."
        },
        "100": {
            "condition": "When selecting pet identification",
            "operation": " use \"petid\" instead of \"id\" as the identifier column."
        },
        "101": {
            "condition": "When filtering by age to find pets older than 1",
            "operation": " use \"pet_age > 1\" instead of \"age < 1\" to correctly identify pets with age greater than 1 year."
        },
        "102": {
            "condition": "When selecting pet identification, When filtering by age to find pets older than 1, When maintaining the query structure",
            "operation": " keep the same table source and column selection pattern while only correcting the specific column names and filter condition."
        },
        "103": {
            "condition": "When the question asks for \"id\" of pets",
            "operation": " use the exact column token \"petid\" instead of \"id\"."
        },
        "104": {
            "condition": "When the question asks for pets older than 1",
            "operation": " use the exact column token \"pet_age\" with comparison operator > 1 instead of \"age\" with < 1."
        },
        "105": {
            "condition": "When the question asks for \"id\" of pets, When the question asks for pets older than 1, When selecting output columns",
            "operation": " maintain the order \"petid\" followed by \"weight\" as shown in the question."
        },
        "106": {
            "condition": "When the question asks for \"average and maximum age\"",
            "operation": " use the column name \"pet_age\" for age calculations instead of \"age\"."
        },
        "107": {
            "condition": "When calculating maximum age",
            "operation": " use the max function instead of MIN function."
        },
        "108": {
            "condition": "When referring to \"type of pet\" in both SELECT list and GROUP BY clause",
            "operation": " use the exact column name \"pettype\" instead of \"pet_type\"."
        },
        "109": {
            "condition": "When producing output columns",
            "operation": " do not use aliases like \"average_age\" or \"max_age\" - return the aggregate functions directly without aliases."
        },
        "110": {
            "condition": "When the question asks for \"average and maximum age\", When calculating maximum age, When referring to \"type of pet\" in both SELECT list and GROUP BY clause, When producing output columns, When grouping by pet type",
            "operation": " organize results by the \"pettype\" column to compute requested aggregates per group."
        },
        "111": {
            "condition": "When the question asks for average and maximum age for each type of pet",
            "operation": " compute avg(pet_age) and max(pet_age) using lowercase function names."
        },
        "112": {
            "condition": "When grouping by pet type",
            "operation": " use lowercase pettype as the grouping column."
        },
        "113": {
            "condition": "When selecting columns",
            "operation": " place pettype at the end of the output columns list after the aggregate functions."
        },
        "114": {
            "condition": "When the question asks for average and maximum age for each type of pet, When grouping by pet type, When selecting columns, When referring to the pets table",
            "operation": " use lowercase pets as the table name."
        },
        "115": {
            "condition": "When the question mentions \"age\"",
            "operation": " \"age\" actually means \"pet_age\" in schema."
        },
        "116": {
            "condition": "When calculating maximum age",
            "operation": " use the max function instead of min function."
        },
        "117": {
            "condition": "When the question asks for results without specific aliases",
            "operation": " do not add aliases like \"average_age\" or \"maximum_age\" to the output columns."
        },
        "118": {
            "condition": "When the question mentions \"pet type\"",
            "operation": " \"pet type\" actually means \"pettype\" in schema."
        },
        "119": {
            "condition": "When the question mentions \"age\", When calculating maximum age, When the question asks for results without specific aliases, When the question mentions \"pet type\", When the question asks for results \"for each pet type\"",
            "operation": " organize results by the exact token \"pettype\" and compute requested aggregates per group."
        },
        "120": {
            "condition": "When the question asks for average and maximum age for each pet type",
            "operation": " compute average using lowercase avg(pet_age) and maximum using lowercase max(pet_age)."
        },
        "121": {
            "condition": "When organizing results by pet type",
            "operation": " use lowercase pettype as the grouping key in both SELECT and GROUP BY clauses."
        },
        "122": {
            "condition": "When producing output columns",
            "operation": " place pettype at the end of the SELECT list instead of the beginning."
        },
        "123": {
            "condition": "When the question asks for average and maximum age for each pet type, When organizing results by pet type, When producing output columns, When referring to the table",
            "operation": " use lowercase pets instead of uppercase Pets."
        },
        "124": {
            "condition": "When the question asks for \"average weight\"",
            "operation": " calculate the average of the \"weight\" column instead of \"age\"."
        },
        "125": {
            "condition": "When grouping by pet type",
            "operation": " use the exact column name \"pettype\" instead of \"pet_type\" in the GROUP BY clause."
        },
        "126": {
            "condition": "When the question asks for \"average weight\", When grouping by pet type, When the question asks for average weight per pet type",
            "operation": " do not include an alias like \"as average_weight\" in the output."
        },
        "127": {
            "condition": "When the question asks for average weight per pet type",
            "operation": " compute the average of the \"weight\" column for each distinct value of \"pettype\"."
        },
        "128": {
            "condition": "When ordering output columns",
            "operation": " place the aggregate result \"avg(weight)\" before the grouping column \"pettype\"."
        },
        "129": {
            "condition": "When the question asks for average weight per pet type, When ordering output columns, When using identifiers from the Pets table",
            "operation": " use lowercase identifiers \"pets\", \"pettype\", and \"weight\" exactly as shown in the schema."
        },
        "130": {
            "condition": "When the question asks for \"average weight for each type of pet\"",
            "operation": " compute the average of the \"weight\" column instead of \"age\"."
        },
        "131": {
            "condition": "When grouping by pet type",
            "operation": " use the exact column name \"pettype\" for grouping instead of \"type\"."
        },
        "132": {
            "condition": "When the question asks for \"average weight for each type of pet\", When grouping by pet type, When selecting output columns",
            "operation": " include \"pettype\" and the average weight calculation with the exact column name \"weight\"."
        },
        "133": {
            "condition": "When the question asks for average weight per pet type",
            "operation": " compute the average of the \"weight\" column for each group."
        },
        "134": {
            "condition": "When organizing results by pet type",
            "operation": " group by the \"pettype\" column."
        },
        "135": {
            "condition": "When selecting output columns",
            "operation": " place the average weight calculation first in the output order, followed by the pet type."
        },
        "136": {
            "condition": "When referring to table and column names",
            "operation": " use lowercase identifiers \"pets\", \"pettype\", and \"weight\" exactly as specified."
        },
        "137": {
            "condition": "When the question asks for average weight per pet type, When organizing results by pet type, When selecting output columns, When referring to table and column names, When computing aggregates",
            "operation": " do not include unnecessary aliases like \"AS average_weight\" in the output."
        },
        "138": {
            "condition": "When the question asks for \"first name\" of students",
            "operation": " use the exact column token \"fname\" from the student table instead of \"first_name\"."
        },
        "139": {
            "condition": "When the question asks about students who have a pet",
            "operation": " join the student table (T1) with the has_pet table (T2) using the exact key equality T1.stuid = T2.stuid to identify students with pets, instead of checking for NULL values."
        },
        "140": {
            "condition": "When selecting from multiple tables",
            "operation": " use table aliases T1 for the student table and T2 for the has_pet table as specified."
        },
        "141": {
            "condition": "When the question asks for \"first name\" of students, When the question asks about students who have a pet, When selecting from multiple tables, When the question asks for distinct results",
            "operation": " include DISTINCT to ensure each student appears only once in the output."
        },
        "142": {
            "condition": "When answering about \"different first names and ages of students who have pets\"",
            "operation": " make sure the output order: T1.fname, T1.age"
        },
        "143": {
            "condition": "When the question mentions \"first names\"",
            "operation": " \"first names\" actually means \"T1.fname in schema\""
        },
        "144": {
            "condition": "When the question mentions \"ages\"",
            "operation": " \"ages\" actually means \"T1.age in schema\""
        },
        "145": {
            "condition": "When the question asks for \"different\" values",
            "operation": " return only unique combinations of T1.fname and T1.age"
        },
        "146": {
            "condition": "When identifying students who have pets",
            "operation": " combine T1 (students) and T2 (has_pet) where T1.stuid = T2.stuid and keep only matching pairs (inner match)"
        },
        "147": {
            "condition": "When answering about \"different first names and ages of students who have pets\", When the question mentions \"first names\", When the question mentions \"ages\", When the question asks for \"different\" values, When identifying students who have pets, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms"
        },
        "148": {
            "condition": "When the question asks for \"pet owned by student\"",
            "operation": " use the relationship table \"has_pet\" as T2 to link students and pets instead of assuming pets are directly in the students table."
        },
        "149": {
            "condition": "When combining students and has_pet tables",
            "operation": " link rows where T1.stuid = T2.stuid and keep only matching pairs (inner match)."
        },
        "150": {
            "condition": "When the question mentions \"last name\"",
            "operation": " \"last name\" actually means \"Lname\" in the students table (T1.Lname)."
        },
        "151": {
            "condition": "When filtering for students with last name 'Smith'",
            "operation": " use T1.Lname = 'Smith' with exact case and spacing."
        },
        "152": {
            "condition": "When the question asks for \"pet owned by student\", When combining students and has_pet tables, When the question mentions \"last name\", When filtering for students with last name 'Smith', When selecting the pet identifier",
            "operation": " use T2.petid instead of pet_id to match the correct column name from the relationship table."
        },
        "153": {
            "condition": "When the question asks for \"id of the pet\"",
            "operation": " select \"T2\".\"petid\" instead of \"pet_id\" from the \"has_pet\" table."
        },
        "154": {
            "condition": "When joining student and pet information",
            "operation": " combine \"students\" as \"T1\" and \"has_pet\" as \"T2\" where \"T1\".\"stuid\" = \"T2\".\"stuid\" to get matching pairs only."
        },
        "155": {
            "condition": "When filtering by student last name 'Smith'",
            "operation": " use \"T1\".\"Lname\" = 'Smith' instead of \"last_name\" to match the exact column name."
        },
        "156": {
            "condition": "When the question asks for \"id of the pet\", When joining student and pet information, When filtering by student last name 'Smith', When answering about pet ownership",
            "operation": " make sure the output order shows only \"T2\".\"petid\" as requested."
        },
        "157": {
            "condition": "When the question asks for \"number of pets for each student\"",
            "operation": " count the number of pets using the join between student table as T1 and has_pet table as T2."
        },
        "158": {
            "condition": "When combining student and has_pet tables",
            "operation": " link rows where T1.stuid = T2.stuid and keep only matching pairs (inner match)."
        },
        "159": {
            "condition": "When grouping by student",
            "operation": " organize results by T1.stuid instead of student_id."
        },
        "160": {
            "condition": "When selecting output columns",
            "operation": " use T1.stuid for student identification and count(*) for the number of pets."
        },
        "161": {
            "condition": "When the question asks for \"number of pets for each student\", When combining student and has_pet tables, When grouping by student, When selecting output columns, When the question mentions \"student id\"",
            "operation": " use the exact column token T1.stuid from the schema."
        },
        "162": {
            "condition": "When the question asks for \"number of pets for each student\"",
            "operation": " count the number of pets using the canonical key from the Has_Pet table and group by the exact student identifier token."
        },
        "163": {
            "condition": "When selecting output columns",
            "operation": " place the count first in the output order and do not include the grouping column in the select list when it's redundant."
        },
        "164": {
            "condition": "When referring to the student identifier column",
            "operation": " use the exact lowercase token \"stuid\" as shown in the schema and amends."
        },
        "165": {
            "condition": "When the question asks for \"number of pets for each student\", When selecting output columns, When referring to the student identifier column, When combining Student and Has_Pet tables",
            "operation": " link rows where Student.stuid equals Has_Pet.stuid using an inner match to find students who have pets."
        },
        "166": {
            "condition": "When answering about \"students who have pets\"",
            "operation": " use table aliases T1 for \"student\" and T2 for \"has_pet\" exactly as specified."
        },
        "167": {
            "condition": "When joining student and pet tables",
            "operation": " link rows where T1.StuID = T2.StuID to match students with their pets."
        },
        "168": {
            "condition": "When counting pets per student",
            "operation": " use count(*) to count all pet records for each student."
        },
        "169": {
            "condition": "When selecting student identifiers",
            "operation": " use T1.StuID instead of student_id to match the exact column name."
        },
        "170": {
            "condition": "When grouping results",
            "operation": " organize by T1.StuID to show pet counts for each individual student."
        },
        "171": {
            "condition": "When answering about \"students who have pets\", When joining student and pet tables, When counting pets per student, When selecting student identifiers, When grouping results, When the question asks for \"how many pets each student has\"",
            "operation": " do not apply additional filters like HAVING pet_count > 0 since the join inherently excludes students without pets."
        },
        "172": {
            "condition": "When answering about \"how many pets each student has\"",
            "operation": " make sure the output order: count of pets first, then student id."
        },
        "173": {
            "condition": "When referring to student identifiers",
            "operation": " use lowercase \"stuid\" consistently instead of mixed case \"StuID\"."
        },
        "174": {
            "condition": "When counting pets per student",
            "operation": " count all rows from the Has_Pet table for each student using the join condition t1.stuid = t2.stuid."
        },
        "175": {
            "condition": "When answering about \"how many pets each student has\", When referring to student identifiers, When counting pets per student, When organizing results by student",
            "operation": " group by t1.stuid to compute aggregates per student."
        },
        "176": {
            "condition": "When the question asks for \"first name\" and \"gender\"",
            "operation": " use the exact column tokens \"fname\" and \"sex\" from table T1 instead of \"first_name\" and \"gender\"."
        },
        "177": {
            "condition": "When counting pets per student",
            "operation": " join table \"has_pet\" as T2 with T1 using the exact key equality T1.stuid = T2.stuid and keep only matching pairs (inner match)."
        },
        "178": {
            "condition": "When grouping by student",
            "operation": " organize results by T1.stuid instead of grouping by the entire table."
        },
        "179": {
            "condition": "When the question asks for \"first name\" and \"gender\", When counting pets per student, When grouping by student, When filtering for students with more than one pet",
            "operation": " count the number of pets using count(*) and apply the condition count(*) > 1 in the HAVING clause instead of using a WHERE condition on a pet_count column."
        },
        "180": {
            "condition": "When the question asks for \"first name\" and \"gender\"",
            "operation": " use the exact column tokens \"fname\" and \"sex\" from the schema instead of \"first_name\" and \"gender\"."
        },
        "181": {
            "condition": "When counting pets per student",
            "operation": " join \"student AS T1\" with \"has_pet AS T2\" on \"T1.stuid = T2.stuid\" to establish the pet relationships."
        },
        "182": {
            "condition": "When grouping by student",
            "operation": " use \"GROUP BY T1.stuid\" to organize results by individual students."
        },
        "183": {
            "condition": "When the question asks for \"first name\" and \"gender\", When counting pets per student, When grouping by student, When filtering for students with more than one pet",
            "operation": " apply the condition \"count(*) > 1\" in the HAVING clause instead of the WHERE clause to properly handle aggregation filters."
        },
        "184": {
            "condition": "When answering about \"last name of the student who has a cat that is age 3\"",
            "operation": " make sure the output order: T1.lname."
        },
        "185": {
            "condition": "When the question mentions \"student\"",
            "operation": " use table \"student AS T1\" with column \"T1.lname\" for last name."
        },
        "186": {
            "condition": "When the question mentions \"has a cat\"",
            "operation": " use table \"pets AS T3\" with filter \"T3.pettype = 'cat'\" exactly."
        },
        "187": {
            "condition": "When the question mentions \"age 3\"",
            "operation": " use table \"pets AS T3\" with filter \"T3.pet_age = 3\" exactly."
        },
        "188": {
            "condition": "When combining student, has_pet, and pets tables",
            "operation": " link rows where \"T1.stuid = T2.stuid\" and \"T3.petid = T2.petid\" using inner matches only."
        },
        "189": {
            "condition": "When answering about \"last name of the student who has a cat that is age 3\", When the question mentions \"student\", When the question mentions \"has a cat\", When the question mentions \"age 3\", When combining student, has_pet, and pets tables, When producing output",
            "operation": " do not add ORDER BY or LIMIT clauses since the question asks for all matching records without ranking or limiting."
        },
        "190": {
            "condition": "When selecting student last name",
            "operation": " use \"T1.lname\" instead of \"last_name\" as the output column."
        },
        "191": {
            "condition": "When accessing student information",
            "operation": " use table \"student AS T1\" instead of \"students\" table."
        },
        "192": {
            "condition": "When relating students to pets",
            "operation": " join \"has_pet AS T2\" on \"T1.stuid = T2.stuid\" to connect student and pet relationship."
        },
        "193": {
            "condition": "When accessing pet attributes",
            "operation": " join \"pets AS T3\" on \"T3.petid = T2.petid\" to get pet details."
        },
        "194": {
            "condition": "When filtering by pet age",
            "operation": " use \"T3.pet_age = 3\" to reference the correct table and column."
        },
        "195": {
            "condition": "When filtering by pet type",
            "operation": " use \"T3.pettype = 'cat'\" with exact column name and literal value."
        },
        "196": {
            "condition": "When selecting student last name, When accessing student information, When relating students to pets, When accessing pet attributes, When filtering by pet age, When filtering by pet type, When the question asks for a student with specific pet attributes",
            "operation": " do not apply ordering or limiting as it should return all matching records."
        },
        "197": {
            "condition": "When answering about \"average age of students who do not have any pet\"",
            "operation": " make sure the output order: AVG(age)."
        },
        "198": {
            "condition": "When the question mentions \"students\"",
            "operation": " \"students\" actually means \"student in schema\"."
        },
        "199": {
            "condition": "When checking for students without pets",
            "operation": " use a subquery with stuid not in (select stuid from has_pet) instead of checking pet_count > 0."
        },
        "200": {
            "condition": "When answering about \"average age of students who do not have any pet\", When the question mentions \"students\", When checking for students without pets, When combining student and has_pet tables for absence checking",
            "operation": " link rows where stuid values match between the tables to identify students not present in has_pet."
        },
        "201": {
            "condition": "When the question asks about \"students who do not own any pets\"",
            "operation": " use a subquery to check for students whose stuid is not present in the has_pet table using \"stuid not in (select stuid from has_pet)\" instead of filtering on pet_count."
        },
        "202": {
            "condition": "When computing average age for students",
            "operation": " use the AVG(age) aggregate function on the student table."
        },
        "203": {
            "condition": "When the question asks about \"students who do not own any pets\", When computing average age for students, When referencing the main student table",
            "operation": " use the exact table name \"student\" (not \"students\") as shown in the schema."
        }
    },
    "car_1": {
        "0": {
            "condition": "When answering about \"How many countries does each continent have?\"",
            "operation": " make sure the output order: T1.ContId, T1.Continent, count(*)"
        },
        "1": {
            "condition": "When the question mentions \"continent id\"",
            "operation": " \"continent id\" actually means \"T1.ContId in schema\""
        },
        "2": {
            "condition": "When the question mentions \"continent name\"",
            "operation": " \"continent name\" actually means \"T1.Continent in schema\""
        },
        "3": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.ContId = T2.Continent exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "4": {
            "condition": "When the question asks for \"count of countries\"",
            "operation": " compute the number of rows using the canonical key token for countries (T2 table)"
        },
        "5": {
            "condition": "When the question says \"per continent\"/\"by continent\"",
            "operation": " organize results by T1.ContId and compute requested aggregates per group"
        },
        "6": {
            "condition": "When answering about \"How many countries does each continent have?\", When the question mentions \"continent id\", When the question mentions \"continent name\", When combining T1 and T2 for shared entities, When the question asks for \"count of countries\", When the question says \"per continent\"/\"by continent\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms"
        },
        "7": {
            "condition": "When answering about \"how many countries per continent\"",
            "operation": " make sure to combine the continents table (as T1) with the countries table (as T2) using an inner match where T1.ContId equals T2.Continent."
        },
        "8": {
            "condition": "When the question asks for \"continent id\" and \"continent name\"",
            "operation": " use the exact tokens T1.ContId and T1.Continent from the schema."
        },
        "9": {
            "condition": "When the question asks for \"count of countries per continent\"",
            "operation": " compute the number of rows using COUNT(*) applied to the joined result set, grouped only by T1.ContId instead of including T1.Continent in the grouping."
        },
        "10": {
            "condition": "When answering about \"how many countries per continent\", When the question asks for \"continent id\" and \"continent name\", When the question asks for \"count of countries per continent\", When producing output",
            "operation": " maintain the column order as T1.ContId, T1.Continent, and then the count of countries."
        },
        "11": {
            "condition": "When answering about \"how many countries are listed\"",
            "operation": " make sure to count records from the \"COUNTRIES\" table instead of any other table."
        },
        "12": {
            "condition": "When answering about \"how many countries are listed\", When counting entities",
            "operation": " use the canonical counting method that counts all rows in the specified table."
        },
        "13": {
            "condition": "When answering about \"how many countries exist\"",
            "operation": " use the COUNTRIES table to count records."
        },
        "14": {
            "condition": "When answering about \"how many countries exist\", When counting entities",
            "operation": " use COUNT(*) to count all rows from the specified table."
        },
        "15": {
            "condition": "When answering about \"models per car maker\"",
            "operation": " make sure the output order: T1.FullName, T1.Id, count(*)"
        },
        "16": {
            "condition": "When the question mentions \"car maker\"",
            "operation": " \"car maker\" actually means \"CAR_MAKERS as T1\" in schema"
        },
        "17": {
            "condition": "When the question mentions \"models\"",
            "operation": " \"models\" actually means \"MODEL_LIST as T2\" in schema"
        },
        "18": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Id = T2.Maker exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "19": {
            "condition": "When the question asks for \"count of models\" per maker",
            "operation": " compute the number of rows using the join relationship where T2.Maker matches T1.Id"
        },
        "20": {
            "condition": "When the question says \"per car maker\"/\"by car maker\"",
            "operation": " organize results by T1.Id and compute count per group"
        },
        "21": {
            "condition": "When answering about \"models per car maker\", When the question mentions \"car maker\", When the question mentions \"models\", When combining T1 and T2 for shared entities, When the question asks for \"count of models\" per maker, When the question says \"per car maker\"/\"by car maker\", When producing output",
            "operation": " do not include aliases like \"model_count\" in the final result"
        },
        "22": {
            "condition": "When answering about car makers and their model counts",
            "operation": " join table MODEL_LIST as T2 with car_makers as T1 using the condition T1.Id = T2.Maker to link models to their makers."
        },
        "23": {
            "condition": "When selecting output columns",
            "operation": " use T1.Id and T1.FullName exactly as shown in the schema."
        },
        "24": {
            "condition": "When counting models per car maker",
            "operation": " count using the joined T2 table rows rather than counting from T1 alone."
        },
        "25": {
            "condition": "When grouping results",
            "operation": " group by only T1.Id instead of grouping by both T1.Id and T1.FullName."
        },
        "26": {
            "condition": "When answering about car makers and their model counts, When selecting output columns, When counting models per car maker, When grouping results, When presenting results",
            "operation": " do not use aliases like model_count for the count column."
        },
        "27": {
            "condition": "When counting models per car maker",
            "operation": " count all rows in each group using count(*) instead of counting non-null values of a specific column."
        },
        "28": {
            "condition": "When ordering output columns for car maker information",
            "operation": " present FullName before Id in the output order."
        },
        "29": {
            "condition": "When counting models per car maker, When ordering output columns for car maker information, When using table aliases",
            "operation": " include the AS keyword for clarity when defining table aliases CAR_MAKERS AS T1 and MODEL_LIST AS T2."
        },
        "30": {
            "condition": "When answering about \"which model of the car has the minimum horsepower\"",
            "operation": " make sure the output order: T1.Model."
        },
        "31": {
            "condition": "When combining CAR_NAMES as T1 and CARS_DATA as T2",
            "operation": " link rows where T1.MakeId = T2.Id and keep only matching pairs (inner match)."
        },
        "32": {
            "condition": "When answering about \"which model of the car has the minimum horsepower\", When combining CAR_NAMES as T1 and CARS_DATA as T2, When the question asks for minimum horsepower",
            "operation": " order rows by T2.horsepower in ascending direction and keep the first 1 row."
        },
        "33": {
            "condition": "When answering about \"model of the car with the smallest amount of horsepower\"",
            "operation": " make sure the output order: T1.Model"
        },
        "34": {
            "condition": "When the question mentions \"model\"",
            "operation": " \"model\" actually means \"T1.Model in schema\""
        },
        "35": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.MakeId = T2.Id exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "36": {
            "condition": "When the question mentions \"smallest amount of horsepower\"",
            "operation": " order rows by T2.horsepower in ascending order to find the minimum value"
        },
        "37": {
            "condition": "When answering about \"model of the car with the smallest amount of horsepower\", When the question mentions \"model\", When combining T1 and T2 for shared entities, When the question mentions \"smallest amount of horsepower\", When the question asks for the single car with the smallest horsepower",
            "operation": " take only the first row after ordering by T2.horsepower ASC"
        },
        "38": {
            "condition": "When answering about car models and weights",
            "operation": " join CAR_NAMES as T1 and CARS_DATA as T2 using the condition T1.MakeId = T2.Id."
        },
        "39": {
            "condition": "When filtering by weight below average",
            "operation": " compare T2.Weight against the average weight from CARS_DATA."
        },
        "40": {
            "condition": "When selecting the model",
            "operation": " output T1.model from the joined result."
        },
        "41": {
            "condition": "When answering about car models and weights, When filtering by weight below average, When selecting the model, When combining tables for shared entities",
            "operation": " perform an inner match where T1.MakeId equals T2.Id exactly as specified."
        },
        "42": {
            "condition": "When selecting car model information",
            "operation": " use \"T1.model\" from the \"CAR_NAMES\" table instead of \"model\" from a generic \"cars\" table."
        },
        "43": {
            "condition": "When combining car name and car data information",
            "operation": " join \"CAR_NAMES\" as T1 with \"CARS_DATA\" as T2 using the condition T1.MakeId = T2.Id to link the tables correctly."
        },
        "44": {
            "condition": "When comparing car weight to average weight",
            "operation": " use T2.Weight < (subquery result) instead of weight > to find cars with below-average weight."
        },
        "45": {
            "condition": "When selecting car model information, When combining car name and car data information, When comparing car weight to average weight, When computing average weight in a subquery",
            "operation": " reference the \"CARS_DATA\" table instead of a generic \"cars\" table to ensure proper data source."
        },
        "46": {
            "condition": "When answering about \"makers that produced cars in 1970\"",
            "operation": " use DISTINCT T1.Maker to eliminate duplicate maker names."
        },
        "47": {
            "condition": "When combining tables for car maker information",
            "operation": " link CAR_MAKERS AS T1, MODEL_LIST AS T2, CAR_NAMES AS T3, and CARS_DATA AS T4 using T1.Id = T2.Maker and T2.model = T3.model and T3.MakeId = T4.id to traverse the relationship chain."
        },
        "48": {
            "condition": "When filtering for cars from a specific year",
            "operation": " use T4.year = '1970' with the exact string literal '1970' and proper table qualification."
        },
        "49": {
            "condition": "When answering about \"makers that produced cars in 1970\", When combining tables for car maker information, When filtering for cars from a specific year, When the question asks for \"makers that produced some cars\"",
            "operation": " ensure the query returns only makers that have at least one car from the specified year by using inner joins between all tables."
        },
        "50": {
            "condition": "When answering about car makers who produced cars in 1970",
            "operation": " join tables CAR_MAKERS AS T1, MODEL_LIST AS T2, CAR_NAMES AS T3, and CARS_DATA AS T4 using the exact relationships T1.Id = T2.Maker, T2.model = T3.model, and T3.MakeId = T4.id."
        },
        "51": {
            "condition": "When filtering for cars produced in 1970",
            "operation": " use T4.year = '1970' with string comparison instead of numeric comparison."
        },
        "52": {
            "condition": "When selecting car maker names",
            "operation": " use T1.Maker as the exact column reference instead of just maker."
        },
        "53": {
            "condition": "When answering about car makers who produced cars in 1970, When filtering for cars produced in 1970, When selecting car maker names, When ensuring distinct car makers",
            "operation": " return only unique values of T1.Maker."
        },
        "54": {
            "condition": "When answering about \"make and production time of cars produced in the earliest year\"",
            "operation": " make sure the output order: T2.Make, T1.Year"
        },
        "55": {
            "condition": "When the question mentions \"make\"",
            "operation": " \"make\" actually means \"T2.Make in schema\""
        },
        "56": {
            "condition": "When the question mentions \"production time\"",
            "operation": " \"production time\" actually means \"T1.Year in schema\""
        },
        "57": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Id = T2.MakeId exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "58": {
            "condition": "When the question asks for cars produced in the earliest year",
            "operation": " filter rows where T1.Year equals the minimum Year value from CARS_DATA table using T1.Year = (SELECT min(YEAR) FROM CARS_DATA)"
        },
        "59": {
            "condition": "When answering about \"make and production time of cars produced in the earliest year\", When the question mentions \"make\", When the question mentions \"production time\", When combining T1 and T2 for shared entities, When the question asks for cars produced in the earliest year, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for T2.Make and T1.Year"
        },
        "60": {
            "condition": "When answering about \"maker of the car produced in the earliest year\"",
            "operation": " make sure the output order: T2.Make, T1.Year"
        },
        "61": {
            "condition": "When the question mentions \"maker\"",
            "operation": " \"maker\" actually means \"T2.Make\" in schema"
        },
        "62": {
            "condition": "When the question mentions \"earliest year\"",
            "operation": " use the minimum value of T1.Year from CARS_DATA table"
        },
        "63": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Id = T2.MakeId exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "64": {
            "condition": "When answering about \"maker of the car produced in the earliest year\", When the question mentions \"maker\", When the question mentions \"earliest year\", When combining T1 and T2 for shared entities, When filtering for the earliest year",
            "operation": " use WHERE T1.Year = (SELECT min(YEAR) FROM CARS_DATA) to find cars produced in the minimum year"
        },
        "65": {
            "condition": "When answering about \"distinct car models produced after 1980\"",
            "operation": " make sure the output order: T1.model"
        },
        "66": {
            "condition": "When the question mentions \"car models\"",
            "operation": " \"car models\" actually means \"T1.model in schema\""
        },
        "67": {
            "condition": "When the question mentions \"after 1980\"",
            "operation": " apply the year filter to T3.year > 1980"
        },
        "68": {
            "condition": "When combining MODEL_LIST as T1 and CAR_NAMES as T2",
            "operation": " link rows where T1.model = T2.model and keep only matching pairs (inner match)"
        },
        "69": {
            "condition": "When combining T2 and CARS_DATA as T3",
            "operation": " link rows where T2.MakeId = T3.id and keep only matching pairs (inner match)"
        },
        "70": {
            "condition": "When answering about \"distinct car models produced after 1980\", When the question mentions \"car models\", When the question mentions \"after 1980\", When combining MODEL_LIST as T1 and CAR_NAMES as T2, When combining T2 and CARS_DATA as T3, When selecting distinct values",
            "operation": " compute the number of unique values of T1.model"
        },
        "71": {
            "condition": "When answering about \"different models for the cards produced after 1980\"",
            "operation": " make sure the output order: T1.model"
        },
        "72": {
            "condition": "When the question mentions \"different models\"",
            "operation": " use DISTINCT T1.model to eliminate duplicate model values"
        },
        "73": {
            "condition": "When the question mentions \"cards produced after 1980\"",
            "operation": " use T3.year > 1980 to filter on the correct year column from the joined CARS_DATA table"
        },
        "74": {
            "condition": "When combining MODEL_LIST, CAR_NAMES, and CARS_DATA tables",
            "operation": " link rows where T1.model = T2.model and T2.MakeId = T3.id, keeping only matching pairs (inner match)"
        },
        "75": {
            "condition": "When answering about \"different models for the cards produced after 1980\", When the question mentions \"different models\", When the question mentions \"cards produced after 1980\", When combining MODEL_LIST, CAR_NAMES, and CARS_DATA tables, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for table names like MODEL_LIST, CAR_NAMES, and CARS_DATA"
        },
        "76": {
            "condition": "When answering about \"car makers in each continent\"",
            "operation": " make sure to use the hierarchical relationship between continents, countries, and car makers instead of querying only the car_makers table."
        },
        "77": {
            "condition": "When combining continents and countries",
            "operation": " link rows where T1.ContId = T2.continent to connect continents to countries."
        },
        "78": {
            "condition": "When combining countries and car makers",
            "operation": " link rows where T2.CountryId = T3.Country to associate car makers with countries."
        },
        "79": {
            "condition": "When selecting the continent name",
            "operation": " use T1.Continent from the continents table instead of any other continent column."
        },
        "80": {
            "condition": "When answering about \"car makers in each continent\", When combining continents and countries, When combining countries and car makers, When selecting the continent name, When counting car makers per continent",
            "operation": " count the number of car makers using the proper hierarchical relationship through countries rather than direct grouping by continent from car_makers."
        },
        "81": {
            "condition": "When answering about \"name of each continent and how many car makers are there in each one\"",
            "operation": " make sure the output order: T1.Continent first, then count of car makers."
        },
        "82": {
            "condition": "When combining tables for continents, countries, and car makers",
            "operation": " link T1 and T2 where T1.ContId = T2.continent, then link T2 and T3 where T2.CountryId = T3.Country, keeping only matching pairs (inner match)."
        },
        "83": {
            "condition": "When counting car makers per continent",
            "operation": " compute the number of rows using T3's canonical key for car makers (likely T3.Id or similar, though not explicitly shown in amends)."
        },
        "84": {
            "condition": "When grouping results",
            "operation": " organize by T1.Continent to get counts per continent."
        },
        "85": {
            "condition": "When answering about \"name of each continent and how many car makers are there in each one\", When combining tables for continents, countries, and car makers, When counting car makers per continent, When grouping results, When selecting continent name",
            "operation": " use T1.Continent with proper table qualification instead of just continent."
        },
        "86": {
            "condition": "When answering about \"countries with the most car makers\"",
            "operation": " make sure the output order: T2.CountryName."
        },
        "87": {
            "condition": "When the question mentions \"country name\"",
            "operation": " \"country name\" actually means \"T2.CountryName\" in schema."
        },
        "88": {
            "condition": "When the question asks for \"most car makers\"",
            "operation": " rank rows by Count(*) in descending direction and keep the first 1 row."
        },
        "89": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Country = T2.CountryId exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "90": {
            "condition": "When answering about \"countries with the most car makers\", When the question mentions \"country name\", When the question asks for \"most car makers\", When combining T1 and T2 for shared entities, When counting car makers",
            "operation": " compute the number of rows using the canonical key from car_makers table (T1.Country) per country group."
        },
        "91": {
            "condition": "When answering about \"country with the most car makers\"",
            "operation": " make sure the output order: T2.CountryName"
        },
        "92": {
            "condition": "When the question mentions \"country\"",
            "operation": " \"country\" actually means \"T2.CountryName in schema\""
        },
        "93": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Country = T2.CountryId exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "94": {
            "condition": "When the question asks for \"count of car makers\"",
            "operation": " compute the number of rows using the canonical key token for car makers (T1.Country)"
        },
        "95": {
            "condition": "When the question mentions \"most\" or an explicit top 1 by count",
            "operation": " rank rows by count of car makers in descending direction and keep the first 1 row"
        },
        "96": {
            "condition": "When answering about \"country with the most car makers\", When the question mentions \"country\", When combining T1 and T2 for shared entities, When the question asks for \"count of car makers\", When the question mentions \"most\" or an explicit top 1 by count, When the question says \"per country\"/\"by country\"",
            "operation": " organize results by T1.Country and compute requested aggregates per group"
        },
        "97": {
            "condition": "When the question asks for \"each maker\"",
            "operation": " join table \"model_list\" as T1 with table \"car_makers\" as T2 using the condition T1.maker = T2.id to get maker information."
        },
        "98": {
            "condition": "When counting car models per maker",
            "operation": " count the number of rows using the canonical key from T1 (models) grouped by T2.id."
        },
        "99": {
            "condition": "When the question asks for \"maker full name\"",
            "operation": " select T2.fullname instead of the raw maker value."
        },
        "100": {
            "condition": "When organizing results by maker",
            "operation": " group by T2.id to ensure proper aggregation per maker entity."
        },
        "101": {
            "condition": "When the question asks for \"each maker\", When counting car models per maker, When the question asks for \"maker full name\", When organizing results by maker, When producing output columns",
            "operation": " list the count first followed by the maker full name, without using aliases for the count column."
        },
        "102": {
            "condition": "When answering about car models per maker",
            "operation": " join MODEL_LIST AS T1 with CAR_MAKERS AS T2 on T1.Maker = T2.Id to resolve maker information."
        },
        "103": {
            "condition": "When counting car models per maker",
            "operation": " count using Count(*) and group by T2.id."
        },
        "104": {
            "condition": "When answering about car models per maker, When counting car models per maker, When outputting maker information",
            "operation": " include T2.id and T2.FullName in the results."
        },
        "105": {
            "condition": "When counting car models per maker",
            "operation": " count using the canonical key from the model_list table instead of using COUNT(*)."
        },
        "106": {
            "condition": "When selecting output columns for maker information",
            "operation": " place the FullName column before the id column in the output order."
        },
        "107": {
            "condition": "When referencing the id column from car_makers table",
            "operation": " use lowercase \"id\" instead of uppercase \"Id\" in both SELECT and GROUP BY clauses."
        },
        "108": {
            "condition": "When counting car models per maker, When selecting output columns for maker information, When referencing the id column from car_makers table, When specifying table references in FROM clause",
            "operation": " do not use the AS keyword syntax for table aliases."
        },
        "109": {
            "condition": "When answering about \"accelerate of the car make amc hornet sportabout (sw)\"",
            "operation": " make sure the output order: Accelerate from T1."
        },
        "110": {
            "condition": "When the question mentions \"car make amc hornet sportabout (sw)\"",
            "operation": " \"amc hornet sportabout (sw)\" actually means T2.Make = 'amc hornet sportabout (sw)' in schema."
        },
        "111": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Id = T2.MakeId exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "112": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for identifiers like T1.Accelerate and T2.Make."
        },
        "113": {
            "condition": "When answering about \"accelerate of the car make amc hornet sportabout (sw)\", When the question mentions \"car make amc hornet sportabout (sw)\", When combining T1 and T2 for shared entities, When choosing identifier delimiters, When handling text literals",
            "operation": " do not change case, spacing, or punctuation for 'amc hornet sportabout (sw)'."
        },
        "114": {
            "condition": "When answering about car acceleration for a specific model",
            "operation": " select \"Accelerate\" from \"CARS_DATA\" as T1 instead of \"acceleration\" from \"cars\"."
        },
        "115": {
            "condition": "When the question mentions \"amc hornet sportabout (sw)\"",
            "operation": " this value should be matched against \"Make\" in \"CAR_NAMES\" as T2, not against \"model\" or \"make\" in the \"cars\" table."
        },
        "116": {
            "condition": "When combining car data with car names",
            "operation": " link rows where T1.Id = T2.MakeId and keep only matching pairs (inner join)."
        },
        "117": {
            "condition": "When answering about car acceleration for a specific model, When the question mentions \"amc hornet sportabout (sw)\", When combining car data with car names, When filtering for specific car models",
            "operation": " use T2.Make = 'amc hornet sportabout (sw)' as the filter condition, and do not include additional make filters."
        },
        "118": {
            "condition": "When answering about \"car makers in france\"",
            "operation": " make sure to join T1 (car_makers) with T2 (COUNTRIES) using the exact join condition T1.Country = T2.CountryId."
        },
        "119": {
            "condition": "When filtering by country name",
            "operation": " use T2.CountryName = 'france' exactly as specified (lowercase 'france')."
        },
        "120": {
            "condition": "When counting car makers",
            "operation": " use the canonical key from T1 (car_makers table) to count the number of rows."
        },
        "121": {
            "condition": "When answering about \"car makers in france\", When filtering by country name, When counting car makers, When combining tables for shared entities",
            "operation": " perform an inner match where T1.Country equals T2.CountryId and keep only matching pairs."
        },
        "122": {
            "condition": "When answering about \"number of makers of care in France\"",
            "operation": " make sure the output order: COUNT(*)"
        },
        "123": {
            "condition": "When the question mentions \"France\"",
            "operation": " \"France\" actually means \"T2.CountryName = 'france'\" in schema"
        },
        "124": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Country = T2.CountryId exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "125": {
            "condition": "When answering about \"number of makers of care in France\", When the question mentions \"France\", When combining T1 and T2 for shared entities, When the question asks for \"count of makers\"",
            "operation": " compute the number of rows using the canonical key token for makers (T1 table)"
        },
        "126": {
            "condition": "When the question asks for \"number of makers of care in France\"",
            "operation": " count all rows using the canonical counting method (count(*))."
        },
        "127": {
            "condition": "When combining car_makers as T1 and countries as T2",
            "operation": " link rows where T1.Country equals T2.CountryId exactly and keep only matching pairs (inner match)."
        },
        "128": {
            "condition": "When filtering for France",
            "operation": " use the exact literal 'france' (lowercase) to match against T2.CountryName."
        },
        "129": {
            "condition": "When the question asks for \"number of makers of care in France\", When combining car_makers as T1 and countries as T2, When filtering for France, When choosing identifier delimiters",
            "operation": " do not use uppercase for count(*) or country name literals - use lowercase count(*) and 'france' exactly as shown in the amends."
        },
        "130": {
            "condition": "When answering about car models produced in the usa",
            "operation": " make sure to join MODEL_LIST as T1 with CAR_MAKERS as T2 using T1.Maker = T2.Id, then join with COUNTRIES as T3 using T2.Country = T3.CountryId."
        },
        "131": {
            "condition": "When filtering for country",
            "operation": " use T3.CountryName = 'usa' (lowercase) instead of 'USA'."
        },
        "132": {
            "condition": "When counting car models",
            "operation": " use count(*) to count all rows after proper joins and filtering."
        },
        "133": {
            "condition": "When answering about car models produced in the usa, When filtering for country, When counting car models, When combining tables",
            "operation": " perform inner matches using the exact key equalities T1.Maker = T2.Id and T2.Country = T3.CountryId, keeping only matching pairs."
        },
        "134": {
            "condition": "When answering about \"count of car models produced in the United States\"",
            "operation": " make sure the output order: count of models using T1.Model as the counting key."
        },
        "135": {
            "condition": "When the question mentions \"United States\"",
            "operation": " \"United States\" actually means T3.CountryName = 'usa' in schema."
        },
        "136": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Maker = T2.Id exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "137": {
            "condition": "When combining T2 and T3 for shared entities",
            "operation": " link rows where T2.Country = T3.CountryId exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "138": {
            "condition": "When answering about \"count of car models produced in the United States\", When the question mentions \"United States\", When combining T1 and T2 for shared entities, When combining T2 and T3 for shared entities, When counting car models",
            "operation": " compute the number of rows using T1.Model as the canonical key token for models."
        },
        "139": {
            "condition": "When answering about \"average miles per gallon of cars with 4 cylinders\"",
            "operation": " make sure to calculate the average of \"mpg\" column instead of \"horsepower\"."
        },
        "140": {
            "condition": "When referencing the cars data table",
            "operation": " use the exact table name \"CARS_DATA\" instead of \"cars\"."
        },
        "141": {
            "condition": "When answering about \"average miles per gallon of cars with 4 cylinders\", When referencing the cars data table, When filtering for 4-cylinder vehicles",
            "operation": " use the exact column name \"Cylinders\" with proper capitalization and filter for value 4."
        },
        "142": {
            "condition": "When answering about \"average miles per gallon of cars with 4 cylinders\"",
            "operation": " make sure the output order: avg(mpg)."
        },
        "143": {
            "condition": "When the question mentions \"cars\"",
            "operation": " \"cars\" actually means \"CARS_DATA\" in schema."
        },
        "144": {
            "condition": "When the question mentions \"4 cylinders\"",
            "operation": " use the exact literal value 4 for the cylinders column filter."
        },
        "145": {
            "condition": "When answering about \"average miles per gallon of cars with 4 cylinders\", When the question mentions \"cars\", When the question mentions \"4 cylinders\", When computing averages",
            "operation": " use the lowercase avg function for consistent naming."
        },
        "146": {
            "condition": "When answering about \"smallest weight of the car produced with 8 cylinders on 1974\"",
            "operation": " use MIN(weight) instead of MAX(weight) for the aggregate function."
        },
        "147": {
            "condition": "When referencing the data source",
            "operation": " use table \"cars_data\" instead of \"cars\" as the data source."
        },
        "148": {
            "condition": "When answering about \"smallest weight of the car produced with 8 cylinders on 1974\", When referencing the data source, When filtering for specific car characteristics",
            "operation": " apply conditions where cylinders = 8 AND year = 1974 using exact numerical values."
        },
        "149": {
            "condition": "When answering about \"minimum weight of the car with 8 cylinders produced in 1974\"",
            "operation": " make sure to reference table \"cars_data\" instead of \"cars\"."
        },
        "150": {
            "condition": "When the question mentions \"8 cylinders\"",
            "operation": " use the exact condition \"cylinders = 8\" in the filtering."
        },
        "151": {
            "condition": "When the question mentions \"produced in 1974\"",
            "operation": " use the exact condition \"year = 1974\" in the filtering."
        },
        "152": {
            "condition": "When answering about \"minimum weight of the car with 8 cylinders produced in 1974\", When the question mentions \"8 cylinders\", When the question mentions \"produced in 1974\", When the question asks for \"minimum weight\"",
            "operation": " compute the minimum value of the \"weight\" column."
        },
        "153": {
            "condition": "When answering about \"all the makers and models\"",
            "operation": " use the MODEL_LIST table instead of the products table."
        },
        "154": {
            "condition": "When selecting all records",
            "operation": " do not apply any WHERE filter conditions like model IS NULL."
        },
        "155": {
            "condition": "When answering about \"all the makers and models\", When selecting all records, When the question asks for \"makers and models\"",
            "operation": " select both the Maker and Model columns from the MODEL_LIST table."
        },
        "156": {
            "condition": "When answering about \"all the makers and models\"",
            "operation": " make sure the output order: Maker, Model."
        },
        "157": {
            "condition": "When the question asks for makers and models",
            "operation": " use the exact column tokens \"Maker\" and \"Model\" without table prefixes."
        },
        "158": {
            "condition": "When retrieving maker and model information",
            "operation": " use only the MODEL_LIST table as the source instead of joining with other tables."
        },
        "159": {
            "condition": "When answering about \"all the makers and models\", When the question asks for makers and models, When retrieving maker and model information, When selecting from MODEL_LIST",
            "operation": " do not include any join conditions with car_makers table."
        },
        "160": {
            "condition": "When answering about \"makers and models\"",
            "operation": " make sure the output order: Maker, Model."
        },
        "161": {
            "condition": "When the question mentions \"makers\"",
            "operation": " \"makers\" actually means \"Maker in table MODEL_LIST\"."
        },
        "162": {
            "condition": "When the question mentions \"models\"",
            "operation": " \"models\" actually means \"Model in table car_names\"."
        },
        "163": {
            "condition": "When selecting columns",
            "operation": " use specific column names \"Maker\" and \"Model\" instead of using \"*\" to select all columns."
        },
        "164": {
            "condition": "When answering about \"makers and models\", When the question mentions \"makers\", When the question mentions \"models\", When selecting columns, When querying for maker and model information",
            "operation": " use table \"MODEL_LIST\" instead of table \"products\"."
        },
        "165": {
            "condition": "When combining countries and car_makers tables",
            "operation": " link rows where T1.CountryId = T2.Country and keep only matching pairs (inner match)."
        },
        "166": {
            "condition": "When answering about countries having at least one car maker",
            "operation": " organize results by T1.CountryId and compute count of car makers per country."
        },
        "167": {
            "condition": "When filtering for countries with at least one car maker",
            "operation": " keep only groups where count(*) >= 1."
        },
        "168": {
            "condition": "When selecting output columns",
            "operation": " include T1.CountryName and T1.CountryId in the results."
        },
        "169": {
            "condition": "When combining countries and car_makers tables, When answering about countries having at least one car maker, When filtering for countries with at least one car maker, When selecting output columns, When ordering output",
            "operation": " present results in the order T1.CountryId, T1.CountryName as implied by the question asking for \"name and id\"."
        },
        "170": {
            "condition": "When answering about countries having at least one car maker",
            "operation": " make sure the output order is CountryName first, then CountryId."
        },
        "171": {
            "condition": "When referring to table names",
            "operation": " use uppercase identifiers \"COUNTRIES\" and \"CAR_MAKERS\" exactly as shown."
        },
        "172": {
            "condition": "When combining COUNTRIES and CAR_MAKERS",
            "operation": " link rows where T1.CountryId = T2.Country and keep only matching pairs (inner match)."
        },
        "173": {
            "condition": "When grouping by country",
            "operation": " organize results by T1.CountryId and compute count of rows per group."
        },
        "174": {
            "condition": "When answering about countries having at least one car maker, When referring to table names, When combining COUNTRIES and CAR_MAKERS, When grouping by country, When filtering for countries with at least one car maker",
            "operation": " keep only groups where the count of rows is greater than or equal to 1."
        },
        "175": {
            "condition": "When selecting country information",
            "operation": " use T1.CountryName and T1.CountryId as the output columns instead of generic name and id."
        },
        "176": {
            "condition": "When checking for countries with car makers",
            "operation": " join the CAR_MAKERS table as T2 using the condition T1.CountryId = T2.Country."
        },
        "177": {
            "condition": "When grouping results by country",
            "operation": " use T1.CountryId as the grouping key."
        },
        "178": {
            "condition": "When selecting country information, When checking for countries with car makers, When grouping results by country, When filtering for countries with at least one car maker",
            "operation": " use HAVING count(*) >= 1 instead of a WHERE condition on car_makers."
        },
        "179": {
            "condition": "When answering about \"number of cars with horsepower more than 150\"",
            "operation": " make sure the output order: count of cars with horsepower > 150."
        },
        "180": {
            "condition": "When the question mentions \"cars\"",
            "operation": " \"cars\" actually means \"CARS_DATA\" in schema."
        },
        "181": {
            "condition": "When the question asks for \"number of cars with horsepower more than 150\"",
            "operation": " compute the count of rows from CARS_DATA where horsepower > 150."
        },
        "182": {
            "condition": "When handling text literals",
            "operation": " do not change case, spacing, or punctuation for numeric values like 150."
        },
        "183": {
            "condition": "When answering about \"number of cars with horsepower more than 150\", When the question mentions \"cars\", When the question asks for \"number of cars with horsepower more than 150\", When handling text literals, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for table names like CARS_DATA."
        },
        "184": {
            "condition": "When answering about \"number of cars with horsepower greater than 150\"",
            "operation": " use table \"CARS_DATA\" instead of \"cars\" and filter where \"horsepower\" > 150 instead of < 150."
        },
        "185": {
            "condition": "When answering about \"number of cars with horsepower greater than 150\", When counting records",
            "operation": " count all rows from \"CARS_DATA\" where the condition \"horsepower > 150\" is true."
        },
        "186": {
            "condition": "When answering about \"average weight of cars each year\"",
            "operation": " make sure the output order: avg(Weight) first, then YEAR."
        },
        "187": {
            "condition": "When the question mentions \"cars\"",
            "operation": " \"cars\" actually means \"CARS_DATA\" in schema."
        },
        "188": {
            "condition": "When the question mentions \"weight\"",
            "operation": " \"weight\" actually means \"Weight\" in schema with exact uppercase spelling."
        },
        "189": {
            "condition": "When the question says \"each year\"",
            "operation": " organize results by YEAR and compute average weight per year."
        },
        "190": {
            "condition": "When answering about \"average weight of cars each year\", When the question mentions \"cars\", When the question mentions \"weight\", When the question says \"each year\", When choosing identifier delimiters",
            "operation": " do not replace uppercase column names with lowercase forms."
        },
        "191": {
            "condition": "When answering about \"average weight and year for each year\"",
            "operation": " make sure the output order: YEAR, avg(Weight)."
        },
        "192": {
            "condition": "When the question mentions \"each year\"",
            "operation": " group results by the exact column token \"YEAR\"."
        },
        "193": {
            "condition": "When computing average weight",
            "operation": " use the exact column token \"Weight\" with the avg function."
        },
        "194": {
            "condition": "When answering about \"average weight and year for each year\", When the question mentions \"each year\", When computing average weight, When selecting from the database",
            "operation": " use the exact table name \"CARS_DATA\" instead of generic table names."
        },
        "195": {
            "condition": "When answering about \"average weight and year for each year\"",
            "operation": " make sure the output order: average weight first, then year."
        },
        "196": {
            "condition": "When grouping by year",
            "operation": " organize results by the \"YEAR\" column and compute the average of \"Weight\" per group."
        },
        "197": {
            "condition": "When answering about \"average weight and year for each year\", When grouping by year, When producing output columns",
            "operation": " place the aggregate function result (AVG(Weight)) before the grouping column (YEAR) in the output."
        },
        "198": {
            "condition": "When answering about \"countries in europe with at least 3 car manufacturers\"",
            "operation": " make sure the output order: T1.CountryName"
        },
        "199": {
            "condition": "When the question mentions \"countries\"",
            "operation": " \"countries\" actually means \"T1.CountryName in COUNTRIES table\""
        },
        "200": {
            "condition": "When the question mentions \"europe\"",
            "operation": " \"europe\" actually means \"T2.Continent = 'europe'\" with exact lowercase spelling"
        },
        "201": {
            "condition": "When combining COUNTRIES (T1) and CONTINENTS (T2)",
            "operation": " link rows where T1.Continent = T2.ContId and keep only matching pairs (inner match)"
        },
        "202": {
            "condition": "When combining COUNTRIES (T1) and CAR_MAKERS (T3)",
            "operation": " link rows where T1.CountryId = T3.Country and keep only matching pairs (inner match)"
        },
        "203": {
            "condition": "When the question asks for \"at least 3 car manufacturers\"",
            "operation": " organize results by T1.CountryName and compute count of car manufacturers per country using count(*) >= 3"
        },
        "204": {
            "condition": "When answering about \"countries in europe with at least 3 car manufacturers\", When the question mentions \"countries\", When the question mentions \"europe\", When combining COUNTRIES (T1) and CONTINENTS (T2), When combining COUNTRIES (T1) and CAR_MAKERS (T3), When the question asks for \"at least 3 car manufacturers\", When counting car manufacturers",
            "operation": " use the join relationship T1.CountryId = T3.Country to establish the connection between countries and their manufacturers"
        },
        "205": {
            "condition": "When answering about European countries with manufacturers",
            "operation": " make sure the output order: T1.CountryName."
        },
        "206": {
            "condition": "When the question mentions \"European countries\"",
            "operation": " filter for T2.Continent = 'europe' exactly as shown."
        },
        "207": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Continent = T2.ContId and keep only matching pairs."
        },
        "208": {
            "condition": "When combining T1 and T3 for shared entities",
            "operation": " link rows where T1.CountryId = T3.Country and keep only matching pairs."
        },
        "209": {
            "condition": "When the question asks for countries with at least 3 manufacturers",
            "operation": " count using count(*) >= 3 instead of counting specific columns."
        },
        "210": {
            "condition": "When answering about European countries with manufacturers, When the question mentions \"European countries\", When combining T1 and T2 for shared entities, When combining T1 and T3 for shared entities, When the question asks for countries with at least 3 manufacturers, When grouping by country",
            "operation": " organize results by T1.CountryName and compute the count per group."
        },
        "211": {
            "condition": "When answering about \"maximum horsepower and make of car models with 3 cylinders\"",
            "operation": " make sure the output order: maximum horsepower first, then make."
        },
        "212": {
            "condition": "When the question mentions \"car models\"",
            "operation": " use table \"CAR_NAMES AS T1\" for make information and \"CARS_DATA AS T2\" for technical specifications."
        },
        "213": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.MakeId = T2.Id and keep only matching pairs (inner match)."
        },
        "214": {
            "condition": "When filtering for 3 cylinders",
            "operation": " use T2.cylinders = 3 with exact literal value."
        },
        "215": {
            "condition": "When finding the maximum horsepower",
            "operation": " rank rows by T2.horsepower in descending order and keep the first 1 row instead of using MAX() aggregation without grouping."
        },
        "216": {
            "condition": "When answering about \"maximum horsepower and make of car models with 3 cylinders\", When the question mentions \"car models\", When combining T1 and T2 for shared entities, When filtering for 3 cylinders, When finding the maximum horsepower, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for columns like T2.horsepower and T1.Make."
        },
        "217": {
            "condition": "When answering about \"largest amount of horsepower for models with 3 cylinders\"",
            "operation": " make sure the output order: T2.horsepower, T1.Make."
        },
        "218": {
            "condition": "When the question mentions \"make\"",
            "operation": " \"make\" actually means \"T1.Make in schema\"."
        },
        "219": {
            "condition": "When the question mentions \"largest\" by horsepower",
            "operation": " rank rows by T2.horsepower in descending order and keep the first 1 row."
        },
        "220": {
            "condition": "When combining CAR_NAMES AS T1 and CARS_DATA AS T2 for shared entities",
            "operation": " link rows where T1.MakeId = T2.Id exactly as shown; keep only matching pairs (inner match)."
        },
        "221": {
            "condition": "When answering about \"largest amount of horsepower for models with 3 cylinders\", When the question mentions \"make\", When the question mentions \"largest\" by horsepower, When combining CAR_NAMES AS T1 and CARS_DATA AS T2 for shared entities, When filtering for models with 3 cylinders",
            "operation": " include only rows where T2.cylinders = 3 exactly."
        },
        "222": {
            "condition": "When answering about \"which model saves the most gasoline\"",
            "operation": " make sure the output order: T1.Model"
        },
        "223": {
            "condition": "When the question mentions \"model\"",
            "operation": " \"model\" actually means \"T1.Model in CAR_NAMES table\""
        },
        "224": {
            "condition": "When combining T1 (CAR_NAMES) and T2 (CARS_DATA) for shared entities",
            "operation": " link rows where T1.MakeId = T2.Id exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "225": {
            "condition": "When answering about \"which model saves the most gasoline\", When the question mentions \"model\", When combining T1 (CAR_NAMES) and T2 (CARS_DATA) for shared entities, When the question mentions \"maximum miles per gallon\" or \"most gasoline\"",
            "operation": " rank rows by T2.mpg in descending order and keep the first 1 row"
        },
        "226": {
            "condition": "When the question asks for \"car model\"",
            "operation": " use \"t1.model\" from \"car_names as t1\" instead of \"car_model\" from \"cars\"."
        },
        "227": {
            "condition": "When combining car names with MPG data",
            "operation": " join \"car_names as t1\" with \"cars_data as t2\" where \"t1.makeid = t2.id\" and keep only matching pairs (inner match)."
        },
        "228": {
            "condition": "When ordering by MPG to find the highest value",
            "operation": " use \"t2.mpg\" from the joined \"cars_data\" table in descending order."
        },
        "229": {
            "condition": "When the question asks for \"car model\", When combining car names with MPG data, When ordering by MPG to find the highest value, When answering about the highest MPG car model",
            "operation": " make sure the output order shows only the top result."
        },
        "230": {
            "condition": "When the question asks for the car model with the highest MPG",
            "operation": " sort by the numeric MPG column in descending order and keep the first row."
        },
        "231": {
            "condition": "When handling the MPG column from the cars_data table",
            "operation": " use the exact column name \"MPG\" without casting since it already contains numeric values."
        },
        "232": {
            "condition": "When combining car_names and cars_data tables",
            "operation": " link rows using the exact join condition t1.MakeId = t2.Id as shown in the schema."
        },
        "233": {
            "condition": "When the question asks for the car model with the highest MPG, When handling the MPG column from the cars_data table, When combining car_names and cars_data tables, When answering about car models",
            "operation": " output the Model column from the car_names table as the result."
        },
        "234": {
            "condition": "When answering about \"average horsepower of cars before 1980\"",
            "operation": " use table \"CARS_DATA\" instead of \"cars\" in the FROM clause."
        },
        "235": {
            "condition": "When filtering for cars before 1980",
            "operation": " use the condition YEAR < 1980 instead of YEAR > 1980."
        },
        "236": {
            "condition": "When answering about \"average horsepower of cars before 1980\", When filtering for cars before 1980, When calculating average horsepower",
            "operation": " use the lowercase \"avg\" function instead of uppercase \"AVG\" for the aggregate calculation."
        },
        "237": {
            "condition": "When answering about \"average horsepower for all cars produced before 1980\"",
            "operation": " make sure the output order: AVG(horsepower)."
        },
        "238": {
            "condition": "When the question mentions \"cars\"",
            "operation": " \"cars\" actually means \"cars_data\" in schema."
        },
        "239": {
            "condition": "When answering about \"average horsepower for all cars produced before 1980\", When the question mentions \"cars\", When the question mentions \"before 1980\"",
            "operation": " use filter condition year < 1980 to select pre-1980 vehicles."
        },
        "240": {
            "condition": "When answering about \"average edispl of cars of model volvo\"",
            "operation": " make sure the output order: AVG(T2.edispl)"
        },
        "241": {
            "condition": "When the question mentions \"model volvo\"",
            "operation": " \"model volvo\" actually means \"T1.Model = 'volvo'\" in schema"
        },
        "242": {
            "condition": "When combining CAR_NAMES AS T1 and CARS_DATA AS T2 for shared entities",
            "operation": " link rows where T1.MakeId = T2.Id exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "243": {
            "condition": "When answering about \"average edispl of cars of model volvo\", When the question mentions \"model volvo\", When combining CAR_NAMES AS T1 and CARS_DATA AS T2 for shared entities, When computing average engine displacement",
            "operation": " use T2.edispl as the exact column token for the average calculation"
        },
        "244": {
            "condition": "When answering about \"average edispl for all volvos\"",
            "operation": " make sure the output order: avg(T2.edispl)."
        },
        "245": {
            "condition": "When the question mentions \"volvos\"",
            "operation": " \"volvos\" actually means \"T1.Model = 'volvo'\" in schema."
        },
        "246": {
            "condition": "When combining CAR_NAMES AS T1 and CARS_DATA AS T2 for shared entities",
            "operation": " link rows where T1.MakeId = T2.Id exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "247": {
            "condition": "When answering about \"average edispl for all volvos\", When the question mentions \"volvos\", When combining CAR_NAMES AS T1 and CARS_DATA AS T2 for shared entities, When computing average edispl",
            "operation": " use T2.edispl with explicit table qualification instead of unqualified edispl."
        },
        "248": {
            "condition": "When answering about maximum acceleration for different number of cylinders",
            "operation": " make sure the output order is Accelerate first, then Cylinders."
        },
        "249": {
            "condition": "When the question mentions \"acceleration\"",
            "operation": " \"acceleration\" actually means \"Accelerate\" in schema."
        },
        "250": {
            "condition": "When the question mentions \"cylinders\"",
            "operation": " \"cylinders\" actually means \"Cylinders\" in schema."
        },
        "251": {
            "condition": "When the question asks for maximum acceleration per cylinders",
            "operation": " organize results by Cylinders and compute maximum Accelerate per group."
        },
        "252": {
            "condition": "When answering about maximum acceleration for different number of cylinders, When the question mentions \"acceleration\", When the question mentions \"cylinders\", When the question asks for maximum acceleration per cylinders, When referencing the table",
            "operation": " use table name CARS_DATA exactly as specified in the schema."
        },
        "253": {
            "condition": "When the question asks for maximum acceleration grouped by cylinders",
            "operation": " use max(Accelerate) with exact capitalization and group by Cylinders with exact capitalization."
        },
        "254": {
            "condition": "When referencing the table",
            "operation": " use CARS_DATA as the exact table name instead of cars."
        },
        "255": {
            "condition": "When ordering output columns",
            "operation": " place the aggregate function max(Accelerate) before the grouping column Cylinders in the SELECT list."
        },
        "256": {
            "condition": "When the question asks for maximum acceleration grouped by cylinders, When referencing the table, When ordering output columns, When handling column references",
            "operation": " maintain consistent capitalization with Cylinders (not cylinders) and Accelerate (not accelerate) throughout the query."
        },
        "257": {
            "condition": "When referencing the table for car information",
            "operation": " use the exact table name \"CAR_NAMES\" instead of \"cars\"."
        },
        "258": {
            "condition": "When selecting and grouping by car model",
            "operation": " use the exact column name \"Model\" with proper case instead of \"model\"."
        },
        "259": {
            "condition": "When counting versions/makes of cars",
            "operation": " count all rows using count(*) but do not include this count column in the final output."
        },
        "260": {
            "condition": "When ordering results to find the model with most versions",
            "operation": " order by count(*) in descending direction."
        },
        "261": {
            "condition": "When referencing the table for car information, When selecting and grouping by car model, When counting versions/makes of cars, When ordering results to find the model with most versions, When limiting to the top result",
            "operation": " take only the first row after ordering by count(*) descending."
        },
        "262": {
            "condition": "When answering about \"model has the most different versions\"",
            "operation": " make sure the output order: only the \"Model\" column without any count aggregation."
        },
        "263": {
            "condition": "When the question mentions \"model\"",
            "operation": " \"model\" actually means \"Model\" in schema from table \"CAR_NAMES\"."
        },
        "264": {
            "condition": "When the question asks for \"most different versions\"",
            "operation": " count the number of occurrences per \"Model\" and keep only the top 1 result."
        },
        "265": {
            "condition": "When counting versions",
            "operation": " compute the number of rows using the implicit count of \"Model\" occurrences without an alias."
        },
        "266": {
            "condition": "When answering about \"model has the most different versions\", When the question mentions \"model\", When the question asks for \"most different versions\", When counting versions, When ranking for \"most\"",
            "operation": " sort rows by the count in descending order and keep the first 1 row."
        },
        "267": {
            "condition": "When referencing the cars table",
            "operation": " use the exact table name \"CARS_DATA\" as specified in the schema."
        },
        "268": {
            "condition": "When filtering for vehicles with more than 4 cylinders",
            "operation": " use the condition \"Cylinders > 4\" to count only rows where the Cylinders column value is strictly greater than 4."
        },
        "269": {
            "condition": "When referencing the cars table, When filtering for vehicles with more than 4 cylinders, When counting cars",
            "operation": " use the COUNT(*) function to count all rows that satisfy the specified condition."
        },
        "270": {
            "condition": "When referencing the cars table",
            "operation": " use the exact table name \"CARS_DATA\" with double quotes and proper case as shown in the schema."
        },
        "271": {
            "condition": "When filtering for cars with more than 4 cylinders",
            "operation": " use the condition \"Cylinders\" > 4 with the exact column name case and inequality direction."
        },
        "272": {
            "condition": "When referencing the cars table, When filtering for cars with more than 4 cylinders, When counting cars",
            "operation": " count all rows from \"CARS_DATA\" that satisfy the cylinder condition rather than counting rows with 4 or fewer cylinders."
        },
        "273": {
            "condition": "When answering about \"how many cars were produced in 1980\"",
            "operation": " use table \"CARS_DATA\" instead of \"cars\" to access the correct data source."
        },
        "274": {
            "condition": "When filtering for records from year 1980",
            "operation": " apply the condition YEAR = 1980 to select only records from that specific year."
        },
        "275": {
            "condition": "When answering about \"how many cars were produced in 1980\", When filtering for records from year 1980, When counting the number of cars produced",
            "operation": " count all records that satisfy the year condition using the appropriate counting method."
        },
        "276": {
            "condition": "When answering about \"how many cars were made in 1980\"",
            "operation": " use the exact table name \"CARS_DATA\" instead of \"cars\" to access the source data."
        },
        "277": {
            "condition": "When filtering for year 1980",
            "operation": " apply the exact condition YEAR = 1980 to select only records from that specific year."
        },
        "278": {
            "condition": "When answering about \"how many cars were made in 1980\", When filtering for year 1980, When counting the number of cars",
            "operation": " use count(*) to count all records that satisfy the year condition."
        },
        "279": {
            "condition": "When answering about \"car models produced by a maker\"",
            "operation": " make sure to join CAR_MAKERS (as T1) with MODEL_LIST (as T2) using the exact key equality T1.Id = T2.Maker."
        },
        "280": {
            "condition": "When the question mentions \"car models\"",
            "operation": " \"car models\" actually means \"rows in MODEL_LIST table\"."
        },
        "281": {
            "condition": "When the question asks for \"count of car models\"",
            "operation": " compute the number of rows using the canonical key from MODEL_LIST."
        },
        "282": {
            "condition": "When the question specifies \"maker with full name American Motor Company\"",
            "operation": " use the exact literal 'American Motor Company' with T1.FullName column."
        },
        "283": {
            "condition": "When answering about \"car models produced by a maker\", When the question mentions \"car models\", When the question asks for \"count of car models\", When the question specifies \"maker with full name American Motor Company\", When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Id = T2.Maker exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "284": {
            "condition": "When answering about \"number of car models created by a car maker\"",
            "operation": " join the car_makers table (T1) with the MODEL_LIST table (T2) using T1.Id = T2.Maker to link models to their makers."
        },
        "285": {
            "condition": "When the question mentions \"American Motor Company\"",
            "operation": " use the exact literal 'American Motor Company' and filter on T1.FullName = 'American Motor Company' to identify the correct car maker."
        },
        "286": {
            "condition": "When answering about \"number of car models created by a car maker\", When the question mentions \"American Motor Company\", When counting car models for a specific maker",
            "operation": " count the number of rows in the joined result where T1.FullName matches the specified maker name, as this represents the count of models associated with that maker."
        },
        "287": {
            "condition": "When answering about \"makers designed more than 3 car models\"",
            "operation": " make sure the output order: T1.FullName, T1.Id"
        },
        "288": {
            "condition": "When combining car_makers (T1) and MODEL_LIST (T2) for shared entities",
            "operation": " link rows where T1.Id = T2.Maker exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "289": {
            "condition": "When the question asks for \"count of car models per maker\"",
            "operation": " compute the number of rows using the grouping by T1.Id and count models per group"
        },
        "290": {
            "condition": "When filtering for makers with more than 3 models",
            "operation": " apply the count filter after grouping using count(*) > 3 instead of in the WHERE clause"
        },
        "291": {
            "condition": "When answering about \"makers designed more than 3 car models\", When combining car_makers (T1) and MODEL_LIST (T2) for shared entities, When the question asks for \"count of car models per maker\", When filtering for makers with more than 3 models, When selecting maker information",
            "operation": " use T1.FullName and T1.Id instead of maker_name and maker_id as these are the exact column tokens from the schema"
        },
        "292": {
            "condition": "When answering about \"names and ids of all makers with more than 3 models\"",
            "operation": " make sure the output order: T1.FullName, T1.Id."
        },
        "293": {
            "condition": "When the question mentions \"makers\"",
            "operation": " \"makers\" actually means \"CAR_MAKERS AS T1\" in schema."
        },
        "294": {
            "condition": "When the question mentions \"models\"",
            "operation": " \"models\" actually means \"MODEL_LIST AS T2\" in schema."
        },
        "295": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Id = T2.Maker; keep only matching pairs (inner match)."
        },
        "296": {
            "condition": "When the question asks for \"count of models per maker\"",
            "operation": " compute the number of rows using T2.Maker as the grouping key and count per group."
        },
        "297": {
            "condition": "When answering about \"names and ids of all makers with more than 3 models\", When the question mentions \"makers\", When the question mentions \"models\", When combining T1 and T2 for shared entities, When the question asks for \"count of models per maker\", When the question asks for \"more than 3 models\"",
            "operation": " filter groups where count(*) > 3 using HAVING clause after grouping."
        },
        "298": {
            "condition": "When answering about \"names and ids of all makers with more than 3 models\"",
            "operation": " make sure the output order: T1.Id, T1.FullName"
        },
        "299": {
            "condition": "When combining car_makers and model_list tables",
            "operation": " link rows where T1.Id = T2.Maker and keep only matching pairs (inner match)"
        },
        "300": {
            "condition": "When grouping by maker",
            "operation": " organize results by T1.Id and compute requested aggregates per group"
        },
        "301": {
            "condition": "When answering about \"names and ids of all makers with more than 3 models\", When combining car_makers and model_list tables, When grouping by maker, When counting models per maker",
            "operation": " compute the number of rows using the join relationship and filter for makers with COUNT(*) > 3"
        },
        "302": {
            "condition": "When counting models per maker",
            "operation": " use the exact join condition T1.Id = T2.Maker to link car_makers and model_list tables."
        },
        "303": {
            "condition": "When grouping by maker",
            "operation": " use T1.Id as the grouping key instead of other identifiers."
        },
        "304": {
            "condition": "When filtering for makers with more than 3 models",
            "operation": " apply the condition COUNT(*) > 3 exactly as specified."
        },
        "305": {
            "condition": "When selecting output columns",
            "operation": " maintain the exact order T1.Id, T1.FullName without reordering."
        },
        "306": {
            "condition": "When counting models per maker, When grouping by maker, When filtering for makers with more than 3 models, When selecting output columns, When using table aliases",
            "operation": " preserve T1 for car_makers and T2 for model_list without swapping or modifying them."
        },
        "307": {
            "condition": "When counting models per maker",
            "operation": " use the canonical key T1.Id for grouping and count all rows in the joined result using COUNT(*)"
        },
        "308": {
            "condition": "When filtering for makers with more than 3 models",
            "operation": " apply the condition COUNT(*) > 3 in the grouping filter"
        },
        "309": {
            "condition": "When selecting output columns for makers",
            "operation": " include both T1.Id and T1.FullName to show the maker's identifier and name"
        },
        "310": {
            "condition": "When counting models per maker, When filtering for makers with more than 3 models, When selecting output columns for makers, When combining car_makers and model_list tables",
            "operation": " link rows where T1.Id = T2.Maker using an inner join to match makers with their models"
        },
        "311": {
            "condition": "When answering about \"names and ids of all makers with more than 3 models\"",
            "operation": " make sure the output order: T1.FullName, T1.Id"
        },
        "312": {
            "condition": "When combining car_makers as T1 and model_list as T2",
            "operation": " link rows where T1.Id = T2.Maker exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "313": {
            "condition": "When answering about \"names and ids of all makers with more than 3 models\", When combining car_makers as T1 and model_list as T2, When the question asks for \"makers with more than 3 models\"",
            "operation": " organize results by T1.Id and compute COUNT(*) per group, then filter for groups where COUNT(*) > 3"
        },
        "314": {
            "condition": "When answering about \"distinctive models\"",
            "operation": " make sure the output order: T2.Model"
        },
        "315": {
            "condition": "When the question mentions \"maker with the full name General Motors\"",
            "operation": " \"maker\" actually means \"T3.FullName in schema\" and filter using T3.FullName = 'General Motors'"
        },
        "316": {
            "condition": "When the question mentions \"weighing more than 3500\"",
            "operation": " \"weighing\" actually means \"T4.weight in schema\" and filter using T4.weight > 3500"
        },
        "317": {
            "condition": "When combining tables for shared entities",
            "operation": " link rows where T1.Model = T2.Model and T2.Maker = T3.Id and T1.MakeId = T4.Id; keep only matching pairs (inner match)"
        },
        "318": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms"
        },
        "319": {
            "condition": "When answering about \"distinctive models\", When the question mentions \"maker with the full name General Motors\", When the question mentions \"weighing more than 3500\", When combining tables for shared entities, When choosing identifier delimiters, When handling text literals",
            "operation": " do not change case, spacing, or punctuation of 'General Motors'"
        },
        "320": {
            "condition": "When answering about \"different models\"",
            "operation": " make sure to eliminate duplicates by using DISTINCT on T2.Model."
        },
        "321": {
            "condition": "When the question mentions \"car maker General Motors\"",
            "operation": " \"General Motors\" actually means T3.FullName = 'General Motors' in the schema."
        },
        "322": {
            "condition": "When the question mentions \"weighed more than 3500\"",
            "operation": " this means T4.weight > 3500 in the schema."
        },
        "323": {
            "condition": "When combining multiple tables for this query",
            "operation": " link rows where T1.Model = T2.Model, T2.Maker = T3.Id, and T1.MakeId = T4.Id; keep only matching pairs (inner match)."
        },
        "324": {
            "condition": "When answering about \"different models\", When the question mentions \"car maker General Motors\", When the question mentions \"weighed more than 3500\", When combining multiple tables for this query, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for table aliases T1, T2, T3, T4."
        },
        "325": {
            "condition": "When answering about \"years cars were produced weighing no less than 3000 and no more than 4000\"",
            "operation": " make sure the output order: year."
        },
        "326": {
            "condition": "When the question asks for distinct years",
            "operation": " compute the number of unique values of the exact token \"year\"."
        },
        "327": {
            "condition": "When the question mentions \"cars\"",
            "operation": " \"cars\" actually means \"cars_data\" in schema."
        },
        "328": {
            "condition": "When answering about \"years cars were produced weighing no less than 3000 and no more than 4000\", When the question asks for distinct years, When the question mentions \"cars\", When filtering by weight between 3000 and 4000",
            "operation": " apply the condition weight between 3000 and 4000 inclusive to select vehicles within the specified weight range rather than outside it."
        },
        "329": {
            "condition": "When answering about \"different years in which there were cars produced that weighed less than 4000 and also cars that weighed more than 3000\"",
            "operation": " make sure the output order: year."
        },
        "330": {
            "condition": "When the question mentions \"cars\"",
            "operation": " \"cars\" actually means \"cars_data\" in schema."
        },
        "331": {
            "condition": "When filtering for weights that are both less than 4000 and more than 3000",
            "operation": " use weight values between 3000 and 4000 inclusive (3000 \u2264 weight \u2264 4000)."
        },
        "332": {
            "condition": "When answering about \"different years in which there were cars produced that weighed less than 4000 and also cars that weighed more than 3000\", When the question mentions \"cars\", When filtering for weights that are both less than 4000 and more than 3000, When selecting distinct years",
            "operation": " return only unique year values from the filtered results."
        },
        "333": {
            "condition": "When answering about \"horsepower of the car with the largest accelerate\"",
            "operation": " make sure the output order: T1.horsepower."
        },
        "334": {
            "condition": "When the question mentions \"largest accelerate\"",
            "operation": " rank rows by accelerate in descending direction and keep the first 1 row."
        },
        "335": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace unquoted forms with double quotes or backticks for columns like horsepower and accelerate."
        },
        "336": {
            "condition": "When answering about \"horsepower of the car with the largest accelerate\", When the question mentions \"largest accelerate\", When choosing identifier delimiters, When referring to table roles",
            "operation": " use the alias T1 for the CARS_DATA table as shown in the amends."
        },
        "337": {
            "condition": "When answering about \"horsepower of the car with the greatest accelerate\"",
            "operation": " make sure the output order: T1.horsepower."
        },
        "338": {
            "condition": "When the question mentions \"cars\"",
            "operation": " \"cars\" actually means \"CARS_DATA in schema\"."
        },
        "339": {
            "condition": "When the question mentions \"greatest accelerate\"",
            "operation": " rank rows by accelerate in descending direction and keep the first 1 row."
        },
        "340": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "341": {
            "condition": "When answering about \"horsepower of the car with the greatest accelerate\", When the question mentions \"cars\", When the question mentions \"greatest accelerate\", When choosing identifier delimiters, When referring to table roles",
            "operation": " do not rename or swap the alias T1 once set for this schema."
        },
        "342": {
            "condition": "When answering about \"model volvo\"",
            "operation": " use \"T2.Model\" = 'volvo' instead of \"model\" for filtering."
        },
        "343": {
            "condition": "When combining cars and CAR_NAMES tables",
            "operation": " link rows where T1.Id = T2.MakeId and keep only matching pairs (inner match)."
        },
        "344": {
            "condition": "When the question asks for \"car with the least accelerate\"",
            "operation": " rank rows by T1.accelerate in ascending order and keep the first 1 row."
        },
        "345": {
            "condition": "When answering about \"model volvo\", When combining cars and CAR_NAMES tables, When the question asks for \"car with the least accelerate\", When producing output",
            "operation": " include T1.cylinders as the result column."
        },
        "346": {
            "condition": "When the question mentions \"volvo model\"",
            "operation": " filter on T2.Model = 'volvo' exactly as specified (case-sensitive)."
        },
        "347": {
            "condition": "When combining cars and CAR_NAMES tables",
            "operation": " link rows where T1.Id = T2.MakeId exactly as shown and keep only matching pairs (inner match)."
        },
        "348": {
            "condition": "When the question asks for the version with least accelerate",
            "operation": " order rows by T1.accelerate in ascending order and keep only the first row."
        },
        "349": {
            "condition": "When the question mentions \"volvo model\", When combining cars and CAR_NAMES tables, When the question asks for the version with least accelerate, When answering about cylinders for a specific car",
            "operation": " output T1.cylinders as the result column."
        },
        "350": {
            "condition": "When referencing the cars table",
            "operation": " use the exact table name \"CARS_DATA\" instead of \"cars\"."
        },
        "351": {
            "condition": "When comparing acceleration values",
            "operation": " use the column \"Accelerate\" for the comparison condition."
        },
        "352": {
            "condition": "When finding the car with the largest horsepower",
            "operation": " select the \"Accelerate\" value from the row with the highest \"Horsepower\" by ordering by \"Horsepower DESC\" and taking the first result, rather than using MAX aggregate on horsepower."
        },
        "353": {
            "condition": "When referencing the cars table, When comparing acceleration values, When finding the car with the largest horsepower, When counting cars with larger acceleration",
            "operation": " count records where \"Accelerate\" is greater than the acceleration value from the car with the highest horsepower."
        },
        "354": {
            "condition": "When referencing the cars data table",
            "operation": " use the exact table name \"CARS_DATA\" instead of \"cars\"."
        },
        "355": {
            "condition": "When filtering by acceleration",
            "operation": " use the exact column name \"Accelerate\" with proper case."
        },
        "356": {
            "condition": "When finding the car with the most horsepower",
            "operation": " use \"ORDER BY Horsepower DESC LIMIT 1\" to get the single row with maximum horsepower rather than an aggregate function."
        },
        "357": {
            "condition": "When comparing acceleration values",
            "operation": " compare the \"Accelerate\" column value against the \"Accelerate\" value from the car with highest horsepower."
        },
        "358": {
            "condition": "When referencing the cars data table, When filtering by acceleration, When finding the car with the most horsepower, When comparing acceleration values, When counting cars",
            "operation": " count all rows from \"CARS_DATA\" where the acceleration condition is satisfied."
        },
        "359": {
            "condition": "When answering about \"countries with more than 2 car makers\"",
            "operation": " make sure to join table \"car_makers\" as \"t2\" with table \"countries\" as \"t1\" where \"t1.countryid\" equals \"t2.country\"."
        },
        "360": {
            "condition": "When counting car makers per country",
            "operation": " group the results by \"t1.countryid\" and count using the canonical key from the car_makers table."
        },
        "361": {
            "condition": "When answering about \"countries with more than 2 car makers\", When counting car makers per country, When filtering for countries with more than 2 car makers",
            "operation": " apply the condition \"count(*) > 2\" in the HAVING clause instead of using WHERE with a non-existent column."
        },
        "362": {
            "condition": "When counting countries with more than 2 car makers",
            "operation": " use the canonical key \"t1.CountryId\" for counting countries instead of counting grouped rows."
        },
        "363": {
            "condition": "When combining countries and car_makers tables",
            "operation": " link rows where \"t1.CountryId = t2.Country\" exactly as shown and keep only matching pairs (inner match)."
        },
        "364": {
            "condition": "When grouping by country",
            "operation": " organize results by \"t1.CountryId\" and compute the count of car makers per country."
        },
        "365": {
            "condition": "When filtering for countries with more than 2 car makers",
            "operation": " apply the condition \"COUNT(*) > 2\" to the grouped results."
        },
        "366": {
            "condition": "When counting countries with more than 2 car makers, When combining countries and car_makers tables, When grouping by country, When filtering for countries with more than 2 car makers, When the question asks \"how many countries\"",
            "operation": " count the distinct country identifiers that satisfy the condition of having more than 2 car makers."
        },
        "367": {
            "condition": "When answering about \"number of countries with more than 2 car makers\"",
            "operation": " make sure to join the car_makers table as T2 with countries as T1 using the exact key equality T1.countryid = T2.country."
        },
        "368": {
            "condition": "When grouping by country to count car makers",
            "operation": " organize results by T1.countryid and compute the count of car makers per country."
        },
        "369": {
            "condition": "When filtering for countries with more than 2 car makers",
            "operation": " apply the condition count(*) > 2 after grouping instead of before grouping."
        },
        "370": {
            "condition": "When answering about \"number of countries with more than 2 car makers\", When grouping by country to count car makers, When filtering for countries with more than 2 car makers, When counting car makers per country",
            "operation": " use the canonical counting approach by counting all rows in the car_makers table that match each country."
        },
        "371": {
            "condition": "When combining countries and car_makers tables",
            "operation": " link rows where countries.CountryId equals car_makers.Country exactly as shown in the amends (t1.CountryId = t2.Country); keep only matching pairs (inner match)."
        },
        "372": {
            "condition": "When grouping by country",
            "operation": " organize results by t1.CountryId and compute aggregates per country group."
        },
        "373": {
            "condition": "When filtering for countries with more than 2 car makers",
            "operation": " apply the condition COUNT(*) > 2 to filter country groups."
        },
        "374": {
            "condition": "When combining countries and car_makers tables, When grouping by country, When filtering for countries with more than 2 car makers, When counting the number of countries that satisfy the condition",
            "operation": " compute the count of distinct t1.CountryId values that meet the filtering criteria."
        },
        "375": {
            "condition": "When answering about \"cars with over 6 cylinders\"",
            "operation": " use table \"CARS_DATA\" instead of \"cars\"."
        },
        "376": {
            "condition": "When filtering for vehicles with more than six cylinders",
            "operation": " use condition \"Cylinders > 6\" instead of \"cylinders <= 6\"."
        },
        "377": {
            "condition": "When answering about \"cars with over 6 cylinders\", When filtering for vehicles with more than six cylinders, When counting records from the CARS_DATA table",
            "operation": " count all rows where the Cylinders value exceeds six."
        },
        "378": {
            "condition": "When answering about \"number of cars with over 6 cylinders\"",
            "operation": " make sure the output order: count of cars."
        },
        "379": {
            "condition": "When the question mentions \"cars\"",
            "operation": " \"cars\" actually means \"CARS_DATA\" in schema."
        },
        "380": {
            "condition": "When the question mentions \"cylinders\"",
            "operation": " \"cylinders\" actually means \"Cylinders\" in schema."
        },
        "381": {
            "condition": "When counting cars",
            "operation": " compute the number of rows using the canonical key for cars (CARS_DATA table records)."
        },
        "382": {
            "condition": "When answering about \"number of cars with over 6 cylinders\", When the question mentions \"cars\", When the question mentions \"cylinders\", When counting cars, When filtering for \"over 6 cylinders\"",
            "operation": " select records where Cylinders > 6."
        },
        "383": {
            "condition": "When answering about \"cars with 4 cylinders\"",
            "operation": " use T2.Cylinders = 4 as the filter condition."
        },
        "384": {
            "condition": "When joining CAR_NAMES and CARS_DATA tables",
            "operation": " link rows where T1.MakeId = T2.Id and keep only matching pairs (inner match)."
        },
        "385": {
            "condition": "When the question asks for \"largest horsepower\"",
            "operation": " rank rows by T2.horsepower in descending order and keep the first row."
        },
        "386": {
            "condition": "When answering about \"cars with 4 cylinders\", When joining CAR_NAMES and CARS_DATA tables, When the question asks for \"largest horsepower\", When selecting the model",
            "operation": " output T1.Model from the CAR_NAMES table instead of model from the cars table."
        },
        "387": {
            "condition": "When answering about \"4 cylinder cars\"",
            "operation": " filter rows where T2.Cylinders = 4."
        },
        "388": {
            "condition": "When combining CAR_NAMES and CARS_DATA tables",
            "operation": " link rows where T1.MakeId = T2.Id and keep only matching pairs (inner match)."
        },
        "389": {
            "condition": "When the question asks for \"which model has the most horsepower\"",
            "operation": " select T1.Model and order by T2.horsepower DESC to find the highest value."
        },
        "390": {
            "condition": "When the question mentions \"model\"",
            "operation": " \"model\" actually means T1.Model in the schema."
        },
        "391": {
            "condition": "When the question mentions \"horsepower\"",
            "operation": " \"horsepower\" actually means T2.horsepower in the schema."
        },
        "392": {
            "condition": "When answering about \"4 cylinder cars\", When combining CAR_NAMES and CARS_DATA tables, When the question asks for \"which model has the most horsepower\", When the question mentions \"model\", When the question mentions \"horsepower\", When producing output",
            "operation": " do not use aggregation functions like MAX() when the question asks for the model with the highest value, instead use direct column ordering."
        },
        "393": {
            "condition": "When querying about car makes",
            "operation": " join table \"CARS_DATA AS T1\" with table \"CAR_NAMES AS T2\" where T1.Id equals T2.MakeId to get complete car information."
        },
        "394": {
            "condition": "When filtering cars by horsepower",
            "operation": " compare T1.Horsepower to be greater than the minimum horsepower from all cars."
        },
        "395": {
            "condition": "When filtering by cylinder count",
            "operation": " ensure T1.Cylinders is not more than 3 cylinders."
        },
        "396": {
            "condition": "When selecting output columns",
            "operation": " include both T1.makeid and T2.Make (not make_name) in the results."
        },
        "397": {
            "condition": "When querying about car makes, When filtering cars by horsepower, When filtering by cylinder count, When selecting output columns, When referencing columns",
            "operation": " always use table aliases T1 for CARS_DATA columns and T2 for CAR_NAMES columns with proper qualification."
        },
        "398": {
            "condition": "When answering about cars that do not have minimum horsepower",
            "operation": " use a subquery to find the minimum horsepower value from cars_data table"
        },
        "399": {
            "condition": "When filtering for cars with less than 4 cylinders",
            "operation": " apply the condition cylinders < 4 to the cars_data table (T1)"
        },
        "400": {
            "condition": "When selecting make information",
            "operation": " select makeid and make from car_names table (T2) instead of make_id and name from cars table"
        },
        "401": {
            "condition": "When combining cars_data and car_names tables",
            "operation": " link rows where T1.id = T2.makeid using inner join"
        },
        "402": {
            "condition": "When filtering for cars that do not have minimum horsepower",
            "operation": " use horsepower > (SELECT MIN(horsepower) FROM cars_data) instead of != comparison"
        },
        "403": {
            "condition": "When answering about cars that do not have minimum horsepower, When filtering for cars with less than 4 cylinders, When selecting make information, When combining cars_data and car_names tables, When filtering for cars that do not have minimum horsepower, When using table aliases",
            "operation": " refer to cars_data as T1 and car_names as T2"
        },
        "404": {
            "condition": "When answering about maximum miles per gallon",
            "operation": " use the table \"cars_data\" instead of \"cars\" to ensure querying the correct data source."
        },
        "405": {
            "condition": "When filtering for cars with 8 cylinders or produced before 1980",
            "operation": " apply the condition cylinders = 8 OR year < 1980 to select the appropriate rows."
        },
        "406": {
            "condition": "When answering about maximum miles per gallon, When filtering for cars with 8 cylinders or produced before 1980, When computing the maximum value",
            "operation": " calculate the maximum of the mpg column from the filtered results."
        },
        "407": {
            "condition": "When answering about maximum mpg of cars",
            "operation": " use table \"cars_data\" instead of \"cars\" to access the correct data source"
        },
        "408": {
            "condition": "When answering about \"models lighter than 3500 but not built by Ford Motor Company\"",
            "operation": " make sure the output order: T1.model"
        },
        "409": {
            "condition": "When the question mentions \"models\"",
            "operation": " \"models\" actually means \"T1.model in schema\""
        },
        "410": {
            "condition": "When the question mentions \"lighter than 3500\"",
            "operation": " use T3.weight < 3500 as the filter condition"
        },
        "411": {
            "condition": "When the question mentions \"not built by Ford Motor Company\"",
            "operation": " use T4.FullName != 'Ford Motor Company' to exclude Ford vehicles"
        },
        "412": {
            "condition": "When combining multiple tables for this query",
            "operation": " link T1 and T2 using T1.Model = T2.Model, link T2 and T3 using T2.MakeId = T3.Id, and link T1 and T4 using T1.Maker = T4.Id, keeping only matching pairs (inner match)"
        },
        "413": {
            "condition": "When selecting distinct models",
            "operation": " use DISTINCT T1.model to avoid duplicate model names"
        },
        "414": {
            "condition": "When answering about \"models lighter than 3500 but not built by Ford Motor Company\", When the question mentions \"models\", When the question mentions \"lighter than 3500\", When the question mentions \"not built by Ford Motor Company\", When combining multiple tables for this query, When selecting distinct models, When handling the manufacturer name",
            "operation": " preserve the exact literal 'Ford Motor Company' with the exact case and spacing"
        },
        "415": {
            "condition": "When the question asks for \"different models\"",
            "operation": " use DISTINCT T1.model to eliminate duplicate model names."
        },
        "416": {
            "condition": "When combining tables for this query",
            "operation": " link MODEL_LIST AS T1 to CAR_NAMES AS T2 using T1.Model = T2.Model, then link CAR_NAMES AS T2 to CARS_DATA AS T3 using T2.MakeId = T3.Id, then link MODEL_LIST AS T1 to CAR_MAKERS AS T4 using T1.Maker = T4.Id, keeping only matching pairs (inner match)."
        },
        "417": {
            "condition": "When filtering for weight less than 3500",
            "operation": " use T3.weight < 3500 to reference the correct table."
        },
        "418": {
            "condition": "When excluding Ford Motor Company",
            "operation": " use T4.FullName != 'Ford Motor Company' with exact literal 'Ford Motor Company' to filter manufacturers."
        },
        "419": {
            "condition": "When the question asks for \"different models\", When combining tables for this query, When filtering for weight less than 3500, When excluding Ford Motor Company, When producing output",
            "operation": " return only the distinct model names from T1.model."
        },
        "420": {
            "condition": "When answering about countries without car makers",
            "operation": " use the exact column name \"CountryName\" from the countries table instead of \"name\"."
        },
        "421": {
            "condition": "When combining countries and car_makers tables",
            "operation": " link rows where T1.countryId = T2.Country to find matching pairs."
        },
        "422": {
            "condition": "When identifying countries without car makers",
            "operation": " use EXCEPT set operation to find countries that don't have matching entries in car_makers, which automatically handles deduplication without needing DISTINCT."
        },
        "423": {
            "condition": "When referring to the countries table",
            "operation": " use alias T1 consistently throughout the query."
        },
        "424": {
            "condition": "When answering about countries without car makers, When combining countries and car_makers tables, When identifying countries without car makers, When referring to the countries table, When referring to the car_makers table",
            "operation": " use alias T2 consistently throughout the query."
        },
        "425": {
            "condition": "When answering about \"countries with no car makers\"",
            "operation": " use EXCEPT set operation instead of NOT IN with a subquery."
        },
        "426": {
            "condition": "When selecting country names",
            "operation": " use \"CountryName\" instead of \"name\" as the output column."
        },
        "427": {
            "condition": "When referencing the countries table",
            "operation": " use explicit alias \"T1\" for the countries table."
        },
        "428": {
            "condition": "When combining countries and car makers tables",
            "operation": " link rows where T1.countryId = T2.Country to find matching pairs."
        },
        "429": {
            "condition": "When answering about \"countries with no car makers\", When selecting country names, When referencing the countries table, When combining countries and car makers tables, When finding countries without car makers",
            "operation": " use set semantics to exclude countries that have car makers from the full set of countries."
        },
        "430": {
            "condition": "When answering about car makers with models and car names",
            "operation": " combine car_makers as T1 with model_list as T2 where T1.id equals T2.maker, then combine with car_names as T3 where T2.model equals T3.model."
        },
        "431": {
            "condition": "When counting models per car maker",
            "operation": " group by T1.id and count using T2.model to find makers with at least 2 models."
        },
        "432": {
            "condition": "When counting car names per car maker",
            "operation": " group by T1.id and count using T3.model to find makers with more than 3 car names."
        },
        "433": {
            "condition": "When combining both conditions",
            "operation": " use INTERSECT to find car makers that satisfy both the model count and car name count requirements."
        },
        "434": {
            "condition": "When answering about car makers with models and car names, When counting models per car maker, When counting car names per car maker, When combining both conditions, When selecting output",
            "operation": " include T1.id and T1.maker for the final result."
        },
        "435": {
            "condition": "When answering about car makers that produce at least 2 models and make more than 3 cars",
            "operation": " make sure the output order: T1.Id, T1.Maker."
        },
        "436": {
            "condition": "When the question asks for \"ids and makers of all car makers\"",
            "operation": " select T1.Id and T1.Maker from the car_makers table."
        },
        "437": {
            "condition": "When the question mentions \"produce at least 2 models\"",
            "operation": " join MODEL_LIST AS T2 on T1.Id = T2.Maker and use HAVING count(*) >= 2 after grouping by T1.Id."
        },
        "438": {
            "condition": "When the question mentions \"make more than 3 cars\"",
            "operation": " join CAR_NAMES AS T3 on T2.model = T3.model and use HAVING count(*) > 3 after grouping."
        },
        "439": {
            "condition": "When combining both conditions for car makers",
            "operation": " use INTERSECT between the two queries to find makers satisfying both conditions."
        },
        "440": {
            "condition": "When using table aliases",
            "operation": " use T1 for car_makers, T2 for MODEL_LIST, and T3 for CAR_NAMES consistently."
        },
        "441": {
            "condition": "When answering about car makers that produce at least 2 models and make more than 3 cars, When the question asks for \"ids and makers of all car makers\", When the question mentions \"produce at least 2 models\", When the question mentions \"make more than 3 cars\", When combining both conditions for car makers, When using table aliases, When joining tables",
            "operation": " link car_makers to MODEL_LIST using T1.Id = T2.Maker, and link MODEL_LIST to CAR_NAMES using T2.model = T3.model."
        },
        "442": {
            "condition": "When answering about countries with car makers",
            "operation": " use explicit column references \"T1.countryId\" and \"T1.CountryName\" instead of ambiguous \"id\" and \"name\"."
        },
        "443": {
            "condition": "When the question mentions \"more than 3 car makers\"",
            "operation": " join \"CAR_MAKERS AS T2\" on \"T1.CountryId = T2.Country\", group by \"T1.countryId\", and use having condition count(*) > 3."
        },
        "444": {
            "condition": "When the question mentions \"produce the 'fiat' model\"",
            "operation": " join \"MODEL_LIST AS T3\" on \"T2.Id = T3.Maker\" with filter \"T3.Model = 'fiat'\"."
        },
        "445": {
            "condition": "When answering about countries with car makers, When the question mentions \"more than 3 car makers\", When the question mentions \"produce the 'fiat' model\", When combining conditions with \"or\"",
            "operation": " use UNION to combine results from both conditions (more than 3 car makers OR fiat model production)."
        },
        "446": {
            "condition": "When answering about countries with car makers",
            "operation": " join \"countries\" as T1 with \"car_makers\" as T2 where T1.countryid = T2.country to link countries to their car makers."
        },
        "447": {
            "condition": "When counting car makers per country",
            "operation": " group results by T1.countryid and count using T2.id to get the number of car makers for each country."
        },
        "448": {
            "condition": "When filtering for countries with more than 3 car makers",
            "operation": " use HAVING count(*) > 3 after grouping by T1.countryid."
        },
        "449": {
            "condition": "When answering about countries producing Fiat model",
            "operation": " join \"car_makers\" as T2 with \"model_list\" as T3 where T2.id = T3.maker and filter for T3.model = 'fiat' exactly."
        },
        "450": {
            "condition": "When combining both conditions with OR",
            "operation": " use UNION to combine results from the car maker count condition and the Fiat model condition."
        },
        "451": {
            "condition": "When answering about countries with car makers, When counting car makers per country, When filtering for countries with more than 3 car makers, When answering about countries producing Fiat model, When combining both conditions with OR, When selecting country information",
            "operation": " use T1.countryid and T1.countryname as the exact output columns for country IDs and names."
        }
    },
    "flight_2": {
        "0": {
            "condition": "When the question asks about an airline's country",
            "operation": " combine information from the flights table (T1) and airports table (T2) using their relationship keys."
        },
        "1": {
            "condition": "When identifying a specific airline by name",
            "operation": " use the exact literal \"JetBlue Airways\" with double quotes for string matching."
        },
        "2": {
            "condition": "When selecting the country information",
            "operation": " use the exact column name \"Country\" from the airports table (T2) with proper case sensitivity."
        },
        "3": {
            "condition": "When the question asks about an airline's country, When identifying a specific airline by name, When selecting the country information, When filtering for a specific airline",
            "operation": " use the column \"Airline\" from the flights table (T1) to identify airlines, not a generic \"name\" column."
        },
        "4": {
            "condition": "When the question asks about airline affiliation with a country",
            "operation": " use the exact table name \"AIRLINES\" with uppercase letters as shown in the schema."
        },
        "5": {
            "condition": "When identifying an airline by name",
            "operation": " use the exact column name \"Airline\" instead of \"name\" to reference the proper airline identification column."
        },
        "6": {
            "condition": "When matching airline names",
            "operation": " use the exact string literal \"JetBlue Airways\" with proper capitalization and spelling instead of \"Jetblue Airways\"."
        },
        "7": {
            "condition": "When the question asks about airline affiliation with a country, When identifying an airline by name, When matching airline names, When retrieving country information",
            "operation": " use the exact column name \"Country\" with proper case sensitivity instead of \"country\"."
        },
        "8": {
            "condition": "When the question asks for abbreviation of an airline",
            "operation": " use the exact column token \"Abbreviation\" from table \"AIRLINES\" with proper case sensitivity."
        },
        "9": {
            "condition": "When filtering for airline name \"JetBlue Airways\"",
            "operation": " use the exact column token \"Airline\" with double quotes around the literal value \"JetBlue Airways\"."
        },
        "10": {
            "condition": "When the question asks for abbreviation of an airline, When filtering for airline name \"JetBlue Airways\", When referencing table names",
            "operation": " use the exact table name \"AIRLINES\" with proper case sensitivity as shown in the schema."
        },
        "11": {
            "condition": "When the question asks for an abbreviation corresponding to an airline name",
            "operation": " use column \"Abbreviation\" from table \"AIRLINES\" to retrieve the abbreviation."
        },
        "12": {
            "condition": "When matching airline names in the database",
            "operation": " use column \"Airline\" with the exact literal value \"JetBlue Airways\" to identify the correct airline."
        },
        "13": {
            "condition": "When handling string literals for airline names",
            "operation": " use double quotes around \"JetBlue Airways\" to maintain proper formatting and case sensitivity."
        },
        "14": {
            "condition": "When the question asks for an abbreviation corresponding to an airline name, When matching airline names in the database, When handling string literals for airline names, When referencing database objects",
            "operation": " use uppercase table name \"AIRLINES\" instead of lowercase to match the schema's naming convention."
        },
        "15": {
            "condition": "When the question asks for airline names and abbreviations",
            "operation": " use column aliases \"Airline\" and \"Abbreviation\" for the output columns."
        },
        "16": {
            "condition": "When referencing the airlines table",
            "operation": " use the exact table name \"AIRLINES\" in uppercase."
        },
        "17": {
            "condition": "When filtering for country \"USA\"",
            "operation": " use double quotes around the literal value as \"USA\"."
        },
        "18": {
            "condition": "When the question asks for airline names and abbreviations, When referencing the airlines table, When filtering for country \"USA\", When the question specifies \"in USA\"",
            "operation": " filter rows where the country column equals \"USA\" exactly."
        },
        "19": {
            "condition": "When the question asks for airline names and abbreviations",
            "operation": " use column aliases \"Airline\" and \"Abbreviation\" as the output columns."
        },
        "20": {
            "condition": "When referencing the airlines table",
            "operation": " use the exact table name \"AIRLINES\" with proper case."
        },
        "21": {
            "condition": "When the question asks for airline names and abbreviations, When referencing the airlines table, When filtering for airlines in the USA",
            "operation": " use the exact country value \"USA\" instead of 'United States' to match the standardized country code format."
        },
        "22": {
            "condition": "When the question asks for airport code and name",
            "operation": " use the exact column names \"AirportCode\" and \"AirportName\" from the airports table."
        },
        "23": {
            "condition": "When filtering by city name \"Anthony\"",
            "operation": " use double quotes around the literal value as \"Anthony\" instead of single quotes."
        },
        "24": {
            "condition": "When the question asks for airport code and name, When filtering by city name \"Anthony\", When selecting from the airports table",
            "operation": " ensure the output columns are ordered as \"AirportCode\" first, then \"AirportName\" to match the question's request order."
        },
        "25": {
            "condition": "When the question asks for airport code and airport name",
            "operation": " use the exact column names \"AirportCode\" and \"AirportName\" from the airports table."
        },
        "26": {
            "condition": "When filtering by city name \"Anthony\"",
            "operation": " use double quotes around the literal value as \"Anthony\" to maintain proper string formatting."
        },
        "27": {
            "condition": "When the question asks for airport code and airport name, When filtering by city name \"Anthony\", When answering about airport information for a specific city",
            "operation": " retrieve data from the airports table where the city column matches the exact specified value."
        },
        "28": {
            "condition": "When answering about \"how many airlines\"",
            "operation": " make sure to count records from the \"AIRLINES\" table instead of the \"flights\" table."
        },
        "29": {
            "condition": "When answering about \"how many airlines\", When counting entities",
            "operation": " use lowercase \"count(*)\" for consistency with the schema requirements."
        },
        "30": {
            "condition": "When answering about \"total number of airlines\"",
            "operation": " query the \"AIRLINES\" table instead of the \"flights\" table."
        },
        "31": {
            "condition": "When answering about \"total number of airlines\", When counting airlines",
            "operation": " count records from the \"AIRLINES\" table using the canonical key for airlines."
        },
        "32": {
            "condition": "When counting airports",
            "operation": " use the exact table name \"AIRPORTS\" with uppercase letters as shown in the schema."
        },
        "33": {
            "condition": "When filtering for airports in the USA",
            "operation": " use the exact literal value 'USA' with uppercase letters in the country column condition."
        },
        "34": {
            "condition": "When counting airports, When filtering for airports in the USA, When performing the count",
            "operation": " use COUNT(*) to count all rows that match the specified conditions."
        },
        "35": {
            "condition": "When counting entities from a table",
            "operation": " use lowercase count(*) function instead of uppercase COUNT(*) to maintain consistent function casing"
        },
        "36": {
            "condition": "When answering about \"how many airports\"",
            "operation": " count all records in the \"AIRPORTS\" table without any country filter."
        },
        "37": {
            "condition": "When the question asks for \"count of airports\"",
            "operation": " compute the number of rows using all records from the \"AIRPORTS\" table."
        },
        "38": {
            "condition": "When answering about \"how many airports\", When the question asks for \"count of airports\", When handling text literals",
            "operation": " do not include any country filter condition like 'country = \"USA\"' as the question does not specify any country restriction."
        },
        "39": {
            "condition": "When answering about \"number of airports\"",
            "operation": " query the \"AIRPORTS\" table instead of the \"flights\" table."
        },
        "40": {
            "condition": "When answering about \"number of airports\", When counting records",
            "operation": " use lowercase \"count(*)\" instead of uppercase \"COUNT(*)\" to match the correct formatting."
        },
        "41": {
            "condition": "When answering about \"how many flights\"",
            "operation": " make sure to query the \"FLIGHTS\" table instead of the \"passengers\" table."
        },
        "42": {
            "condition": "When answering about \"how many flights\", When counting records",
            "operation": " use lowercase \"count(*)\" for consistency with the schema requirements."
        },
        "43": {
            "condition": "When answering about \"number of flights\"",
            "operation": " query the \"FLIGHTS\" table instead of the \"passengers\" table."
        },
        "44": {
            "condition": "When answering about \"number of flights\", When counting flights",
            "operation": " use lowercase \"count(*)\" to count all records from the \"FLIGHTS\" table."
        },
        "45": {
            "condition": "When the question asks about airline abbreviation 'UAL'",
            "operation": " use the exact string literal \"UAL\" with double quotes for filtering."
        },
        "46": {
            "condition": "When retrieving airline information",
            "operation": " use the exact table name \"AIRLINES\" with proper case sensitivity."
        },
        "47": {
            "condition": "When the question asks about airline abbreviation 'UAL', When retrieving airline information, When selecting the airline name",
            "operation": " use the exact column name \"Airline\" instead of generic \"name\"."
        },
        "48": {
            "condition": "When answering about \"airline with abbreviation 'UAL'\"",
            "operation": " make sure the output order: \"Airline\" column."
        },
        "49": {
            "condition": "When the question mentions \"airline with abbreviation 'UAL'\"",
            "operation": " use table name \"AIRLINES\" with proper casing."
        },
        "50": {
            "condition": "When filtering for abbreviation value",
            "operation": " use double quotes \"UAL\" instead of single quotes for the string literal."
        },
        "51": {
            "condition": "When filtering on abbreviation column",
            "operation": " use column name \"Abbreviation\" with proper casing instead of lowercase."
        },
        "52": {
            "condition": "When answering about \"airline with abbreviation 'UAL'\", When the question mentions \"airline with abbreviation 'UAL'\", When filtering for abbreviation value, When filtering on abbreviation column, When selecting columns",
            "operation": " specify \"Airline\" column explicitly instead of using wildcard *."
        },
        "53": {
            "condition": "When referencing the airlines table",
            "operation": " use exact table name \"AIRLINES\" with uppercase letters."
        },
        "54": {
            "condition": "When counting airlines",
            "operation": " use lowercase function \"count(*)\" instead of uppercase \"COUNT(*)\"."
        },
        "55": {
            "condition": "When referencing the airlines table, When counting airlines, When filtering airlines by country",
            "operation": " use column name \"Country\" with exact case and value \"USA\" with double quotes instead of 'United States'."
        },
        "56": {
            "condition": "When answering about \"number of airlines in the USA\"",
            "operation": " use count(*) instead of COUNT(*) for consistent lowercase function naming."
        },
        "57": {
            "condition": "When referencing the airlines table",
            "operation": " use AIRLINES instead of airlines to match the actual table name case."
        },
        "58": {
            "condition": "When answering about \"number of airlines in the USA\", When referencing the airlines table, When filtering for airlines from the United States",
            "operation": " use Country = \"USA\" instead of country = 'United States' to use the correct column name with proper capitalization and the standardized country code value."
        },
        "59": {
            "condition": "When the question asks about airport location details",
            "operation": " use the exact column names \"City\" and \"Country\" from the airports table."
        },
        "60": {
            "condition": "When filtering for a specific airport by name",
            "operation": " use the exact column name \"AirportName\" and match the literal value \"Alton\" exactly with double quotes."
        },
        "61": {
            "condition": "When the question asks about airport location details, When filtering for a specific airport by name, When producing output columns",
            "operation": " maintain the order City then Country as specified in the question."
        },
        "62": {
            "condition": "When the question asks for city and country information",
            "operation": " use the exact column names \"City\" and \"Country\" with proper capitalization."
        },
        "63": {
            "condition": "When filtering for an airport by name",
            "operation": " use the column \"AirportName\" instead of \"name\" to match the airport name."
        },
        "64": {
            "condition": "When the question asks for city and country information, When filtering for an airport by name, When specifying the literal value \"Alton\"",
            "operation": " use double quotes around the exact string literal \"Alton\" instead of single quotes."
        },
        "65": {
            "condition": "When the question asks for \"airport name\"",
            "operation": " use the exact column token \"AirportName\" from the airports table."
        },
        "66": {
            "condition": "When filtering for airport code 'AKO'",
            "operation": " use the exact column token \"AirportCode\" and the exact string literal \"AKO\" with double quotes."
        },
        "67": {
            "condition": "When the question asks for \"airport name\", When filtering for airport code 'AKO', When answering about airport information",
            "operation": " make sure to select from the airports table only."
        },
        "68": {
            "condition": "When the question asks for the name of an airport",
            "operation": " use the exact column token \"AirportName\" from the airports table."
        },
        "69": {
            "condition": "When filtering by airport code",
            "operation": " use the exact literal value 'AKO' with the correct case and quotes as specified in the question."
        },
        "70": {
            "condition": "When the question asks for the name of an airport, When filtering by airport code, When the question specifies a particular airport code",
            "operation": " filter using AirportCode = \"AKO\" to match exactly the requested code."
        },
        "71": {
            "condition": "When the question asks for airport names",
            "operation": " use the exact column token \"AirportName\" from the airports table."
        },
        "72": {
            "condition": "When filtering by city",
            "operation": " use the exact column token \"City\" from the airports table."
        },
        "73": {
            "condition": "When the question asks for airport names, When filtering by city, When using the literal value 'Aberdeen'",
            "operation": " preserve the exact case and spacing as shown in the schema, and use double quotes around the literal value."
        },
        "74": {
            "condition": "When the question asks for airport names",
            "operation": " use the exact column token \"AirportName\" from the airports table."
        },
        "75": {
            "condition": "When filtering by city name \"Aberdeen\"",
            "operation": " use the exact string literal \"Aberdeen\" with double quotes as shown in the schema."
        },
        "76": {
            "condition": "When referencing the airports table",
            "operation": " use the uppercase identifier \"AIRPORTS\" as specified in the amends."
        },
        "77": {
            "condition": "When the question asks for airport names, When filtering by city name \"Aberdeen\", When referencing the airports table, When filtering by city",
            "operation": " use the exact column token \"City\" from the airports table."
        },
        "78": {
            "condition": "When the question asks about flights departing from an airport",
            "operation": " use the column \"SourceAirport\" from the flights table to identify departure airports."
        },
        "79": {
            "condition": "When filtering for a specific airport code like 'APG'",
            "operation": " use double quotes around the literal value exactly as 'APG' (not single quotes)."
        },
        "80": {
            "condition": "When the question asks about flights departing from an airport, When filtering for a specific airport code like 'APG', When counting flights",
            "operation": " count the number of rows in the flights table that match the departure condition using the canonical key from the flights table."
        },
        "81": {
            "condition": "When counting flights departing from a specific airport",
            "operation": " use the \"SourceAirport\" column instead of \"destination\" column to filter for departure airports."
        },
        "82": {
            "condition": "When using the literal value \"APG\"",
            "operation": " use double quotes around the literal value exactly as \"APG\" instead of single quotes."
        },
        "83": {
            "condition": "When counting flights departing from a specific airport, When using the literal value \"APG\", When counting flights",
            "operation": " maintain the count(*) aggregate function and table source FLIGHTS while ensuring the column reference matches the intended logic of counting flights departing from rather than arriving at the specified airport."
        },
        "84": {
            "condition": "When the question asks about flights with destination ATO",
            "operation": " use the exact column name \"DestAirport\" from the flights table instead of \"destination\"."
        },
        "85": {
            "condition": "When comparing airport codes in the flights table",
            "operation": " use double quotes \"ATO\" for the literal value instead of single quotes 'ATO'."
        },
        "86": {
            "condition": "When the question asks about flights with destination ATO, When comparing airport codes in the flights table, When counting flights",
            "operation": " use count(*) on the flights table to get the total number of flights matching the destination condition."
        },
        "87": {
            "condition": "When the question asks about \"flights into ATO\"",
            "operation": " use the exact table name \"FLIGHTS\" with uppercase letters as shown in the schema."
        },
        "88": {
            "condition": "When filtering for destination airport",
            "operation": " use the exact column name \"DestAirport\" instead of \"destination\" to match the schema."
        },
        "89": {
            "condition": "When specifying the airport code value",
            "operation": " use double quotes \"ATO\" instead of single quotes to maintain exact literal formatting."
        },
        "90": {
            "condition": "When the question asks about \"flights into ATO\", When filtering for destination airport, When specifying the airport code value, When counting flights",
            "operation": " count all rows where \"DestAirport\" equals \"ATO\" using the proper column reference."
        },
        "91": {
            "condition": "When answering about \"flights depart from City Aberdeen\"",
            "operation": " make sure to join the flights table (T1) with the airports table (T2) using T1.SourceAirport = T2.AirportCode."
        },
        "92": {
            "condition": "When the question mentions \"City Aberdeen\"",
            "operation": " \"Aberdeen\" actually means T2.City = \"Aberdeen\" in the airports table."
        },
        "93": {
            "condition": "When counting flights",
            "operation": " compute the number of rows using the canonical key from the flights table."
        },
        "94": {
            "condition": "When answering about \"flights depart from City Aberdeen\", When the question mentions \"City Aberdeen\", When counting flights, When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.SourceAirport = T2.AirportCode exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "95": {
            "condition": "When answering about \"number of flights departing from Aberdeen\"",
            "operation": " make sure the output order: count of flights."
        },
        "96": {
            "condition": "When the question mentions \"Aberdeen\"",
            "operation": " \"Aberdeen\" actually means \"T2.City = 'Aberdeen'\" in schema."
        },
        "97": {
            "condition": "When combining T1 (flights) and T2 (airports) for shared entities",
            "operation": " link rows where T1.SourceAirport = T2.AirportCode exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "98": {
            "condition": "When answering about \"number of flights departing from Aberdeen\", When the question mentions \"Aberdeen\", When combining T1 (flights) and T2 (airports) for shared entities, When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the canonical key token for flights (T1.SourceAirport or appropriate flight identifier)."
        },
        "99": {
            "condition": "When answering about flights arriving in a specific city",
            "operation": " join FLIGHTS AS T1 with AIRPORTS AS T2 on T1.DestAirport = T2.AirportCode to correlate flight destinations with city information."
        },
        "100": {
            "condition": "When the question mentions \"Aberdeen city\"",
            "operation": " filter on T2.City = \"Aberdeen\" to identify flights arriving in Aberdeen."
        },
        "101": {
            "condition": "When answering about flights arriving in a specific city, When the question mentions \"Aberdeen city\", When counting flights",
            "operation": " compute the number of rows using the joined table relationship between T1 and T2 where destination city matches the specified location."
        },
        "102": {
            "condition": "When answering about \"flights arriving in Aberdeen\"",
            "operation": " make sure the output order:COUNT(*)"
        },
        "103": {
            "condition": "When the question mentions \"Aberdeen\"",
            "operation": " \"Aberdeen\" actually means \"City = 'Aberdeen'\" in schema"
        },
        "104": {
            "condition": "When combining T1 (FLIGHTS) and T2 (AIRPORTS) for shared entities",
            "operation": " link rows where T1.DestAirport = T2.AirportCode exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "105": {
            "condition": "When answering about \"flights arriving in Aberdeen\", When the question mentions \"Aberdeen\", When combining T1 (FLIGHTS) and T2 (AIRPORTS) for shared entities, When the question asks for \"number of flights\"",
            "operation": " compute the number of rows using the canonical key for flights"
        },
        "106": {
            "condition": "When answering about flights departing from City 'Aberdeen' and arriving at City 'Ashley'",
            "operation": " join AIRPORTS as T2 on T1.DestAirport = T2.AirportCode and AIRPORTS as T3 on T1.SourceAirport = T3.AirportCode."
        },
        "107": {
            "condition": "When filtering for departure city",
            "operation": " use T3.City = \"Aberdeen\" instead of direct departure_city filtering."
        },
        "108": {
            "condition": "When filtering for destination city",
            "operation": " use T2.City = \"Ashley\" instead of direct arrival_city filtering."
        },
        "109": {
            "condition": "When answering about flights departing from City 'Aberdeen' and arriving at City 'Ashley', When filtering for departure city, When filtering for destination city, When counting flights",
            "operation": " use the canonical key from the flights table (T1) to count the number of matching flight records."
        },
        "110": {
            "condition": "When answering about flights between cities",
            "operation": " join AIRPORTS AS T2 on T1.DestAirport = T2.AirportCode and AIRPORTS AS T3 on T1.SourceAirport = T3.AirportCode to validate city names against airport codes."
        },
        "111": {
            "condition": "When the question mentions \"from Aberdeen\"",
            "operation": " filter on T3.City = \"Aberdeen\" instead of filtering departure_city directly on the flights table."
        },
        "112": {
            "condition": "When the question mentions \"to Ashley\"",
            "operation": " filter on T2.City = \"Ashley\" instead of filtering arrival_city directly on the flights table."
        },
        "113": {
            "condition": "When answering about flights between cities, When the question mentions \"from Aberdeen\", When the question mentions \"to Ashley\", When combining tables for shared entities",
            "operation": " link rows where T1.DestAirport = T2.AirportCode and T1.SourceAirport = T3.AirportCode; keep only matching pairs (inner match)."
        },
        "114": {
            "condition": "When answering about \"how many flights does airline 'JetBlue Airways' have\"",
            "operation": " make sure to join the AIRLINES table as T2 to the flights table as T1 using the exact join condition T1.Airline = T2.uid."
        },
        "115": {
            "condition": "When filtering for airline 'JetBlue Airways'",
            "operation": " use the exact literal \"JetBlue Airways\" with double quotes and filter on T2.Airline instead of directly on the flights table."
        },
        "116": {
            "condition": "When answering about \"how many flights does airline 'JetBlue Airways' have\", When filtering for airline 'JetBlue Airways', When counting flights",
            "operation": " count using the canonical key from the flights table (T1) after properly joining with the airlines reference table."
        },
        "117": {
            "condition": "When answering about \"number of Jetblue Airways flights\"",
            "operation": " make sure the output order: count of flights."
        },
        "118": {
            "condition": "When the question mentions \"Jetblue Airways\"",
            "operation": " \"Jetblue Airways\" actually means \"T2.Airline = 'JetBlue Airways'\" in schema."
        },
        "119": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Airline = T2.uid exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "120": {
            "condition": "When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the canonical key token for flights (e.g., T1's primary key)."
        },
        "121": {
            "condition": "When answering about \"number of Jetblue Airways flights\", When the question mentions \"Jetblue Airways\", When combining T1 and T2 for shared entities, When the question asks for \"count of flights\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for identifiers like \"JetBlue Airways\"."
        },
        "122": {
            "condition": "When answering about \"'United Airlines' flights to Airport 'ASY'\"",
            "operation": " make sure the output order: count of flights"
        },
        "123": {
            "condition": "When the question mentions \"'United Airlines'\"",
            "operation": " \"'United Airlines'\" actually means \"T1.Airline = 'United Airlines'\" in schema"
        },
        "124": {
            "condition": "When the question mentions \"go to Airport 'ASY'\"",
            "operation": " \"Airport 'ASY'\" actually means \"T2.DestAirport = 'ASY'\" in schema"
        },
        "125": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T2.Airline = T1.uid exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "126": {
            "condition": "When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the canonical key token for flights (e.g., T2.uid or appropriate flight identifier)"
        },
        "127": {
            "condition": "When answering about \"'United Airlines' flights to Airport 'ASY'\", When the question mentions \"'United Airlines'\", When the question mentions \"go to Airport 'ASY'\", When combining T1 and T2 for shared entities, When the question asks for \"count of flights\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for table names like \"AIRLINES\" and \"FLIGHTS\""
        },
        "128": {
            "condition": "When answering about \"United Airlines flights arriving in ASY Airport\"",
            "operation": " make sure the output order: count of flights"
        },
        "129": {
            "condition": "When the question mentions \"United Airlines\"",
            "operation": " \"United Airlines\" actually means \"T1.Airline = 'United Airlines'\" in schema"
        },
        "130": {
            "condition": "When the question mentions \"arriving in ASY Airport\"",
            "operation": " \"ASY Airport\" actually means \"T2.DestAirport = 'ASY'\" in schema"
        },
        "131": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T2.Airline = T1.uid exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "132": {
            "condition": "When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the canonical key token for flights (e.g., T2.flight_id or equivalent primary key)"
        },
        "133": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for identifiers like \"T2.DestAirport\""
        },
        "134": {
            "condition": "When answering about \"United Airlines flights arriving in ASY Airport\", When the question mentions \"United Airlines\", When the question mentions \"arriving in ASY Airport\", When combining T1 and T2 for shared entities, When the question asks for \"count of flights\", When choosing identifier delimiters, When handling text literals",
            "operation": " do not change case, spacing, or punctuation for values like 'United Airlines' and 'ASY'"
        },
        "135": {
            "condition": "When answering about \"United Airlines flights depart from Airport AHD\"",
            "operation": " make sure the output order: count of flights"
        },
        "136": {
            "condition": "When the question mentions \"United Airlines\"",
            "operation": " \"United Airlines\" actually means \"T1.Airline = \\\"United Airlines\\\"\" in schema"
        },
        "137": {
            "condition": "When the question mentions \"depart from Airport AHD\"",
            "operation": " \"AHD\" actually means \"T2.SourceAirport = \\\"AHD\\\"\" in schema"
        },
        "138": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T2.Airline = T1.uid exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "139": {
            "condition": "When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the canonical key token for flights (e.g., T2 flight records)"
        },
        "140": {
            "condition": "When handling text literals",
            "operation": " do not change case, spacing, or punctuation - use exact literals \\\"United Airlines\\\" and \\\"AHD\\\""
        },
        "141": {
            "condition": "When answering about \"United Airlines flights depart from Airport AHD\", When the question mentions \"United Airlines\", When the question mentions \"depart from Airport AHD\", When combining T1 and T2 for shared entities, When the question asks for \"count of flights\", When handling text literals, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms - use double quotes for identifiers and literals"
        },
        "142": {
            "condition": "When answering about \"number of United Airlines flights leaving from AHD Airport\"",
            "operation": " make sure the output order: count of flights"
        },
        "143": {
            "condition": "When the question mentions \"United Airlines\"",
            "operation": " \"United Airlines\" actually means \"T1.Airline = \\\"United Airlines\\\"\" in schema"
        },
        "144": {
            "condition": "When the question mentions \"leaving from AHD Airport\"",
            "operation": " \"AHD Airport\" actually means \"T2.SourceAirport = \\\"AHD\\\"\" in schema"
        },
        "145": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T2.Airline = T1.uid exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "146": {
            "condition": "When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the canonical key token for flights"
        },
        "147": {
            "condition": "When handling text literals",
            "operation": " do not change case, spacing, or punctuation - use exact literals \\\"United Airlines\\\" and \\\"AHD\\\""
        },
        "148": {
            "condition": "When answering about \"number of United Airlines flights leaving from AHD Airport\", When the question mentions \"United Airlines\", When the question mentions \"leaving from AHD Airport\", When combining T1 and T2 for shared entities, When the question asks for \"count of flights\", When handling text literals, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms - use double quotes for identifiers and literals"
        },
        "149": {
            "condition": "When answering about \"United Airlines flights to Aberdeen\"",
            "operation": " make sure the output order: count of flights"
        },
        "150": {
            "condition": "When the question mentions \"United Airlines\"",
            "operation": " \"United Airlines\" actually means \"T3.Airline = \\\"United Airlines\\\"\" in schema"
        },
        "151": {
            "condition": "When the question mentions \"City 'Aberdeen'\"",
            "operation": " \"Aberdeen\" actually means \"T2.City = \\\"Aberdeen\\\"\" in schema"
        },
        "152": {
            "condition": "When combining T1 (flights) and T2 (AIRPORTS) for shared entities",
            "operation": " link rows where T1.DestAirport = T2.AirportCode; keep only matching pairs (inner match)"
        },
        "153": {
            "condition": "When combining T1 (flights) and T3 (AIRLINES) for shared entities",
            "operation": " link rows where T3.uid = T1.Airline; keep only matching pairs (inner match)"
        },
        "154": {
            "condition": "When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the canonical key token for flights (e.g., T1's primary key)"
        },
        "155": {
            "condition": "When answering about \"United Airlines flights to Aberdeen\", When the question mentions \"United Airlines\", When the question mentions \"City 'Aberdeen'\", When combining T1 (flights) and T2 (AIRPORTS) for shared entities, When combining T1 (flights) and T3 (AIRLINES) for shared entities, When the question asks for \"count of flights\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for identifiers like \\\"United Airlines\\\" and \\\"Aberdeen\\\""
        },
        "156": {
            "condition": "When answering about \"United Airlines flights that arrive in Aberdeen\"",
            "operation": " make sure the output order: count of flights"
        },
        "157": {
            "condition": "When the question mentions \"United Airlines\"",
            "operation": " \"United Airlines\" actually means \"Airline = 'United Airlines' in the AIRLINES table\""
        },
        "158": {
            "condition": "When the question mentions \"arrive in Aberdeen\"",
            "operation": " \"Aberdeen\" actually means \"City = 'Aberdeen' in the AIRPORTS table\""
        },
        "159": {
            "condition": "When combining flights and AIRPORTS tables",
            "operation": " link rows where flights.DestAirport = AIRPORTS.AirportCode and keep only matching pairs (inner match)"
        },
        "160": {
            "condition": "When combining flights and AIRLINES tables",
            "operation": " link rows where flights.Airline = AIRLINES.uid and keep only matching pairs (inner match)"
        },
        "161": {
            "condition": "When counting flights",
            "operation": " compute the number of rows using the canonical key for flights"
        },
        "162": {
            "condition": "When filtering for United Airlines",
            "operation": " use the exact literal 'United Airlines' with the correct case and spacing"
        },
        "163": {
            "condition": "When answering about \"United Airlines flights that arrive in Aberdeen\", When the question mentions \"United Airlines\", When the question mentions \"arrive in Aberdeen\", When combining flights and AIRPORTS tables, When combining flights and AIRLINES tables, When counting flights, When filtering for United Airlines, When filtering for Aberdeen",
            "operation": " use the exact literal 'Aberdeen' with the correct case and spacing"
        },
        "164": {
            "condition": "When answering about \"city with most number of arriving flights\"",
            "operation": " make sure the output order: T1.City, count(*)"
        },
        "165": {
            "condition": "When the question mentions \"arriving flights\"",
            "operation": " \"arriving flights\" actually means \"FLIGHTS.DestAirport in schema\""
        },
        "166": {
            "condition": "When combining AIRPORTS and FLIGHTS tables",
            "operation": " link rows where AIRPORTS.AirportCode = FLIGHTS.DestAirport exactly as shown; keep only matching pairs (inner match)"
        },
        "167": {
            "condition": "When the question asks for \"most number\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row"
        },
        "168": {
            "condition": "When the question says \"by city\"",
            "operation": " organize results by T1.City and compute count per group"
        },
        "169": {
            "condition": "When answering about \"city with most number of arriving flights\", When the question mentions \"arriving flights\", When combining AIRPORTS and FLIGHTS tables, When the question asks for \"most number\", When the question says \"by city\", When the question asks for \"count of arriving flights\"",
            "operation": " compute the number of rows using the canonical key FLIGHTS.DestAirport"
        },
        "170": {
            "condition": "When answering about \"most frequent destination airport by city\"",
            "operation": " make sure the output order: City"
        },
        "171": {
            "condition": "When the question mentions \"destination airport\"",
            "operation": " \"destination airport\" actually means \"DestAirport in FLIGHTS table\""
        },
        "172": {
            "condition": "When combining airports and FLIGHTS tables",
            "operation": " link rows where airports.AirportCode = FLIGHTS.DestAirport exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "173": {
            "condition": "When the question asks for \"most frequent\"",
            "operation": " rank cities by flight count in descending order and keep the first 1 row."
        },
        "174": {
            "condition": "When the question asks for \"count of flights per city\"",
            "operation": " compute the number of rows using the FLIGHTS table records per City grouping."
        },
        "175": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "176": {
            "condition": "When answering about \"most frequent destination airport by city\", When the question mentions \"destination airport\", When combining airports and FLIGHTS tables, When the question asks for \"most frequent\", When the question asks for \"count of flights per city\", When choosing identifier delimiters, When handling text literals",
            "operation": " do not change case, spacing, or punctuation from the schema sample values like 'Aberdeen '."
        },
        "177": {
            "condition": "When answering about \"city with most number of departing flights\"",
            "operation": " make sure the output order: T1.City, count(*)"
        },
        "178": {
            "condition": "When combining AIRPORTS and FLIGHTS tables",
            "operation": " link rows where T1.AirportCode = T2.SourceAirport and keep only matching pairs (inner match)"
        },
        "179": {
            "condition": "When the question mentions \"most number of departing flights\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row"
        },
        "180": {
            "condition": "When the question asks for \"count of departing flights\"",
            "operation": " compute the number of rows using the canonical key from the joined tables"
        },
        "181": {
            "condition": "When answering about \"city with most number of departing flights\", When combining AIRPORTS and FLIGHTS tables, When the question mentions \"most number of departing flights\", When the question asks for \"count of departing flights\", When the question says \"per city\"",
            "operation": " organize results by T1.City and compute count per group"
        },
        "182": {
            "condition": "When answering about \"most frequent source airport city\"",
            "operation": " make sure the output order: T1.City."
        },
        "183": {
            "condition": "When the question mentions \"source airport\"",
            "operation": " \"source airport\" actually means \"T2.SourceAirport in schema\"."
        },
        "184": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.AirportCode = T2.SourceAirport exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "185": {
            "condition": "When the question asks for \"most frequent\"",
            "operation": " rank rows by count of flights in descending order and keep the first 1 row."
        },
        "186": {
            "condition": "When answering about \"most frequent source airport city\", When the question mentions \"source airport\", When combining T1 and T2 for shared entities, When the question asks for \"most frequent\", When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the T2.SourceAirport as the counting key."
        },
        "187": {
            "condition": "When answering about \"airport with highest number of flights\"",
            "operation": " select \"T1.AirportCode\" from the \"AIRPORTS\" table."
        },
        "188": {
            "condition": "When combining \"AIRPORTS\" as T1 and \"FLIGHTS\" as T2",
            "operation": " link rows where \"T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport\" to include both arrivals and departures."
        },
        "189": {
            "condition": "When grouping by airport",
            "operation": " use \"GROUP BY T1.AirportCode\" to aggregate flight counts per airport."
        },
        "190": {
            "condition": "When counting flights per airport",
            "operation": " use \"count(*)\" to count all flight records associated with each airport."
        },
        "191": {
            "condition": "When ranking airports by flight count",
            "operation": " order by \"count(*) DESC\" to get the highest count first."
        },
        "192": {
            "condition": "When answering about \"airport with highest number of flights\", When combining \"AIRPORTS\" as T1 and \"FLIGHTS\" as T2, When grouping by airport, When counting flights per airport, When ranking airports by flight count, When selecting the top airport",
            "operation": " use \"LIMIT 1\" to return only the airport with the highest flight count."
        },
        "193": {
            "condition": "When answering about \"airport with the most flights\"",
            "operation": " make sure the output order: T1.AirportCode."
        },
        "194": {
            "condition": "When combining AIRPORTS (T1) and FLIGHTS (T2) for shared entities",
            "operation": " link rows where T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport; keep only matching pairs (inner match)."
        },
        "195": {
            "condition": "When the question asks for \"count of flights per airport\"",
            "operation": " compute the number of rows using count(*) per T1.AirportCode group."
        },
        "196": {
            "condition": "When the question mentions \"most flights\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "197": {
            "condition": "When answering about \"airport with the most flights\", When combining AIRPORTS (T1) and FLIGHTS (T2) for shared entities, When the question asks for \"count of flights per airport\", When the question mentions \"most flights\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "198": {
            "condition": "When answering about \"fewest number of flights\"",
            "operation": " make sure the output order: T1.AirportCode."
        },
        "199": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport; keep only matching pairs (inner match)."
        },
        "200": {
            "condition": "When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using count(*) to count all flights."
        },
        "201": {
            "condition": "When the question says \"per airport\"",
            "operation": " organize results by T1.AirportCode and compute requested aggregates per group."
        },
        "202": {
            "condition": "When answering about \"fewest number of flights\", When combining T1 and T2 for shared entities, When the question asks for \"count of flights\", When the question says \"per airport\", When the question mentions \"fewest\"",
            "operation": " rank rows by flight count in ascending order and keep the first 1 row."
        },
        "203": {
            "condition": "When answering about \"airport with the least flights\"",
            "operation": " make sure the output order: T1.AirportCode."
        },
        "204": {
            "condition": "When the question mentions \"airport code\"",
            "operation": " \"airport code\" actually means \"T1.AirportCode in schema\"."
        },
        "205": {
            "condition": "When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the canonical key from the FLIGHTS table."
        },
        "206": {
            "condition": "When combining T1 (airports) and T2 (FLIGHTS) for shared entities",
            "operation": " link rows where T1.AirportCode = T2.DestAirport OR T1.AirportCode = T2.SourceAirport; keep only matching pairs."
        },
        "207": {
            "condition": "When the question asks for \"least flights\"",
            "operation": " rank rows by count of flights in ascending order and keep the first 1 row."
        },
        "208": {
            "condition": "When answering about \"airport with the least flights\", When the question mentions \"airport code\", When the question asks for \"count of flights\", When combining T1 (airports) and T2 (FLIGHTS) for shared entities, When the question asks for \"least flights\", When the question says \"per airport\"",
            "operation": " organize results by T1.AirportCode and compute requested aggregates per group."
        },
        "209": {
            "condition": "When answering about \"which airline has most number of flights\"",
            "operation": " make sure to join tables \"AIRLINES\" as T1 and \"FLIGHTS\" as T2 where T1.uid = T2.Airline."
        },
        "210": {
            "condition": "When selecting the airline name",
            "operation": " use T1.Airline instead of just airline."
        },
        "211": {
            "condition": "When counting flights",
            "operation": " count all rows from T2 using count(*)."
        },
        "212": {
            "condition": "When ordering results to find the highest count",
            "operation": " sort by count(*) in descending order."
        },
        "213": {
            "condition": "When answering about \"which airline has most number of flights\", When selecting the airline name, When counting flights, When ordering results to find the highest count, When limiting results to get the top result",
            "operation": " take only the first row after descending ordering."
        },
        "214": {
            "condition": "When answering about \"which airline has most number of flights\"",
            "operation": " make sure the output order contains only the airline name column."
        },
        "215": {
            "condition": "When combining airlines table T1 and flights table T2",
            "operation": " link rows where T1.uid = T2.Airline exactly as shown and keep only matching pairs (inner match)."
        },
        "216": {
            "condition": "When counting flights per airline",
            "operation": " compute the number of rows using the join relationship between T1 and T2."
        },
        "217": {
            "condition": "When answering about \"which airline has most number of flights\", When combining airlines table T1 and flights table T2, When counting flights per airline, When the question asks for the airline with the most flights",
            "operation": " rank airlines by flight count in descending order and keep only the first row."
        },
        "218": {
            "condition": "When answering about \"What airline serves the most flights\"",
            "operation": " make sure the output order: T1.Airline"
        },
        "219": {
            "condition": "When combining T1 (AIRLINES) and T2 (FLIGHTS) for shared entities",
            "operation": " link rows where T1.uid = T2.Airline exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "220": {
            "condition": "When the question mentions \"most flights\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row"
        },
        "221": {
            "condition": "When counting flights",
            "operation": " compute the number of rows using the join relationship between T1 and T2"
        },
        "222": {
            "condition": "When answering about \"What airline serves the most flights\", When combining T1 (AIRLINES) and T2 (FLIGHTS) for shared entities, When the question mentions \"most flights\", When counting flights, When selecting airline information",
            "operation": " use T1.Airline instead of any airline column from T2 (FLIGHTS) table"
        },
        "223": {
            "condition": "When answering about \"What airline serves the most flights?\"",
            "operation": " make sure the output order: T1.Airline only without the count value."
        },
        "224": {
            "condition": "When combining airlines T1 and flights T2",
            "operation": " link rows where T1.uid = T2.Airline exactly as shown and keep only matching pairs (inner match)."
        },
        "225": {
            "condition": "When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the join relationship between airlines and flights."
        },
        "226": {
            "condition": "When the question mentions \"most flights\"",
            "operation": " rank airlines by flight count in descending order and keep only the first 1 row."
        },
        "227": {
            "condition": "When answering about \"What airline serves the most flights?\", When combining airlines T1 and flights T2, When the question asks for \"count of flights\", When the question mentions \"most flights\", When grouping by airline",
            "operation": " organize results by T1.Airline and compute flight counts per airline."
        },
        "228": {
            "condition": "When answering about \"the airline that has fewest number of flights\"",
            "operation": " join AIRLINES AS T1 with FLIGHTS AS T2 on T1.uid = T2.Airline to link airline and flight data."
        },
        "229": {
            "condition": "When counting flights per airline",
            "operation": " group by T1.Airline and count using count(*) to get the number of flights for each airline."
        },
        "230": {
            "condition": "When finding the airline with the fewest flights",
            "operation": " order by count(*) in ascending order and keep only the first row."
        },
        "231": {
            "condition": "When answering about \"the airline that has fewest number of flights\", When counting flights per airline, When finding the airline with the fewest flights, When selecting output columns",
            "operation": " return T1.Abbreviation and T1.Country for the airline with the fewest flights."
        },
        "232": {
            "condition": "When answering about \"abbreviation of the airline has the fewest flights and what country is it in\"",
            "operation": " make sure the output order: T1.Abbreviation, T1.Country."
        },
        "233": {
            "condition": "When the question mentions \"airline\"",
            "operation": " use T1 as the base table for airlines information."
        },
        "234": {
            "condition": "When the question mentions \"flights\"",
            "operation": " use T2 as the flights table that must be joined to airlines."
        },
        "235": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.uid = T2.Airline and keep only matching pairs (inner match)."
        },
        "236": {
            "condition": "When the question asks for \"fewest flights\"",
            "operation": " count the number of rows using count(*) after grouping by T1.Airline and order by this count in ascending order."
        },
        "237": {
            "condition": "When the question asks for \"the airline with the fewest flights\"",
            "operation": " take only the first row after ordering by count(*) ascending."
        },
        "238": {
            "condition": "When answering about \"abbreviation of the airline has the fewest flights and what country is it in\", When the question mentions \"airline\", When the question mentions \"flights\", When combining T1 and T2 for shared entities, When the question asks for \"fewest flights\", When the question asks for \"the airline with the fewest flights\", When grouping results by airline",
            "operation": " organize results by T1.Airline and compute count(*) per group."
        },
        "239": {
            "condition": "When answering about airlines with flights departing from a specific airport",
            "operation": " make sure the output order: T1.Airline"
        },
        "240": {
            "condition": "When the question mentions \"departing from airport 'AHD'\"",
            "operation": " \"AHD\" actually means \"T2.SourceAirport = 'AHD'\" in schema"
        },
        "241": {
            "condition": "When combining airlines (T1) and flights (T2) for shared entities",
            "operation": " link rows where T1.uid = T2.Airline exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "242": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms"
        },
        "243": {
            "condition": "When answering about airlines with flights departing from a specific airport, When the question mentions \"departing from airport 'AHD'\", When combining airlines (T1) and flights (T2) for shared entities, When choosing identifier delimiters, When handling text literals",
            "operation": " do not change case, spacing, or punctuation - use 'AHD' exactly as specified"
        },
        "244": {
            "condition": "When answering about airlines with flights from a specific source airport",
            "operation": " join the airlines table (as T1) with the flights table (as T2) using the key relationship T1.uid = T2.Airline."
        },
        "245": {
            "condition": "When the question mentions \"airlines\"",
            "operation": " select T1.Airline instead of airline_name."
        },
        "246": {
            "condition": "When the question specifies source airport \"AHD\"",
            "operation": " filter using T2.SourceAirport = \"AHD\" with double quotes around the literal."
        },
        "247": {
            "condition": "When answering about airlines with flights from a specific source airport, When the question mentions \"airlines\", When the question specifies source airport \"AHD\", When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.uid = T2.Airline exactly and keep only matching pairs (inner match)."
        },
        "248": {
            "condition": "When answering about airlines with flights arriving at airport 'AHD'",
            "operation": " select \"T1.Airline\" from the \"AIRLINES\" table."
        },
        "249": {
            "condition": "When combining airline and flight information",
            "operation": " join \"AIRLINES AS T1\" with \"FLIGHTS AS T2\" where \"T1.uid = T2.Airline\" and keep only matching pairs (inner match)."
        },
        "250": {
            "condition": "When filtering for destination airport",
            "operation": " use the condition \"T2.DestAirport = 'AHD'\" to identify flights arriving at the specified airport."
        },
        "251": {
            "condition": "When answering about airlines with flights arriving at airport 'AHD', When combining airline and flight information, When filtering for destination airport, When handling text literals",
            "operation": " preserve the exact value 'AHD' with the specified case and quotes."
        },
        "252": {
            "condition": "When answering about airlines with flights to a specific destination",
            "operation": " join the airlines table (as T1) with the flights table (as T2) using the condition T1.uid = T2.Airline."
        },
        "253": {
            "condition": "When the question mentions \"destination airport AHD\"",
            "operation": " use the exact literal \"AHD\" and filter on T2.DestAirport = \"AHD\"."
        },
        "254": {
            "condition": "When selecting airline information",
            "operation": " use T1.Airline instead of airline_name to get the correct column."
        },
        "255": {
            "condition": "When answering about airlines with flights to a specific destination, When the question mentions \"destination airport AHD\", When selecting airline information, When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.uid = T2.Airline exactly and keep only matching pairs (inner match)."
        },
        "256": {
            "condition": "When the question asks for airlines that serve both airports 'APG' and 'CVO'",
            "operation": " use INTERSECT to combine results from two separate queries instead of joining the same table multiple times."
        },
        "257": {
            "condition": "When referencing airline names",
            "operation": " use the exact identifier \"T1.Airline\" instead of a.name."
        },
        "258": {
            "condition": "When joining tables",
            "operation": " use the exact key equality \"T1.uid = T2.Airline\" instead of a.id = f1.airline_id."
        },
        "259": {
            "condition": "When filtering by departure airport",
            "operation": " use the exact identifier \"T2.SourceAirport\" instead of f1.departure_airport and preserve the exact literals 'APG' and 'CVO' with proper case and quotes."
        },
        "260": {
            "condition": "When using INTERSECT",
            "operation": " do not include DISTINCT keyword since INTERSECT inherently returns distinct results."
        },
        "261": {
            "condition": "When the question asks for airlines that serve both airports 'APG' and 'CVO', When referencing airline names, When joining tables, When filtering by departure airport, When using INTERSECT, When structuring the query",
            "operation": " use two separate SELECT statements combined with INTERSECT instead of a single query with multiple joins."
        },
        "262": {
            "condition": "When answering about airlines with departing flights from both APG and CVO airports",
            "operation": " use INTERSECT logic to find airlines serving both airports instead of joining the same table twice."
        },
        "263": {
            "condition": "When selecting airline names",
            "operation": " use T1.Airline instead of a.name."
        },
        "264": {
            "condition": "When combining airline and flight information",
            "operation": " link rows where T1.uid = T2.Airline."
        },
        "265": {
            "condition": "When filtering by departure airport",
            "operation": " use T2.SourceAirport instead of departure_airport."
        },
        "266": {
            "condition": "When specifying airport codes",
            "operation": " use double quotes around \"APG\" and \"CVO\" instead of single quotes."
        },
        "267": {
            "condition": "When answering about airlines with departing flights from both APG and CVO airports, When selecting airline names, When combining airline and flight information, When filtering by departure airport, When specifying airport codes, When returning unique results",
            "operation": " remove DISTINCT modifier since INTERSECT inherently returns unique results."
        },
        "268": {
            "condition": "When joining Airlines and Flights tables",
            "operation": " use T1.uid = T2.Airline as the join condition instead of Airline_ID matching."
        },
        "269": {
            "condition": "When filtering for flights from airport CVO",
            "operation": " use T2.SourceAirport = \"CVO\" with double quotes around the column name and exact literal value."
        },
        "270": {
            "condition": "When finding airlines that serve CVO but not APG",
            "operation": " use an EXCEPT operation to exclude airlines that also serve APG instead of using contradictory WHERE conditions."
        },
        "271": {
            "condition": "When using table aliases",
            "operation": " consistently use T1 for Airlines table and T2 for Flights table throughout the query."
        },
        "272": {
            "condition": "When joining Airlines and Flights tables, When filtering for flights from airport CVO, When finding airlines that serve CVO but not APG, When using table aliases, When handling airport codes",
            "operation": " preserve the exact literal values 'CVO' and 'APG' with single quotes as shown in the question."
        },
        "273": {
            "condition": "When combining AIRLINES and FLIGHTS tables",
            "operation": " link rows where T1.uid = T2.Airline and keep only matching pairs (inner match)."
        },
        "274": {
            "condition": "When filtering for departures from CVO airport",
            "operation": " use T2.SourceAirport = \"CVO\" instead of departure_airport = 'CVO'."
        },
        "275": {
            "condition": "When excluding airlines that serve APG airport",
            "operation": " use EXCEPT to remove airlines that have T2.SourceAirport = \"APG\" instead of using a contradictory condition."
        },
        "276": {
            "condition": "When selecting airline names",
            "operation": " use T1.Airline from the joined result instead of airline directly from flights."
        },
        "277": {
            "condition": "When combining AIRLINES and FLIGHTS tables, When filtering for departures from CVO airport, When excluding airlines that serve APG airport, When selecting airline names, When ensuring unique results",
            "operation": " do not use DISTINCT modifier since EXCEPT inherently returns unique results."
        },
        "278": {
            "condition": "When answering about \"airlines that have at least 10 flights\"",
            "operation": " make sure the output order: T1.Airline."
        },
        "279": {
            "condition": "When the question mentions \"airlines\"",
            "operation": " \"airlines\" actually means \"T1.Airline in schema\"."
        },
        "280": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.uid = T2.Airline exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "281": {
            "condition": "When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the canonical key token for flights (e.g., T2.Airline)."
        },
        "282": {
            "condition": "When answering about \"airlines that have at least 10 flights\", When the question mentions \"airlines\", When combining T1 and T2 for shared entities, When the question asks for \"count of flights\", When the question says \"at least 10\"",
            "operation": " include only groups where the count is greater than 10."
        },
        "283": {
            "condition": "When answering about \"airlines with at least 10 flights\"",
            "operation": " make sure the output order: T1.Airline"
        },
        "284": {
            "condition": "When the question mentions \"airlines\"",
            "operation": " \"airlines\" actually means \"T1.Airline in schema\""
        },
        "285": {
            "condition": "When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the canonical key token for flights (e.g., T2.Airline)."
        },
        "286": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.uid = T2.Airline; keep only matching pairs (inner match)."
        },
        "287": {
            "condition": "When answering about \"airlines with at least 10 flights\", When the question mentions \"airlines\", When the question asks for \"count of flights\", When combining T1 and T2 for shared entities, When the question asks for \"at least 10 flights\"",
            "operation": " ensure the count of flights per airline is greater than 10."
        },
        "288": {
            "condition": "When answering about \"airlines that have fewer than 200 flights\"",
            "operation": " make sure the output order: T1.Airline"
        },
        "289": {
            "condition": "When combining AIRLINES (T1) and FLIGHTS (T2) for shared entities",
            "operation": " link rows where T1.uid = T2.Airline exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "290": {
            "condition": "When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the canonical key from FLIGHTS table"
        },
        "291": {
            "condition": "When filtering for airlines with fewer than 200 flights",
            "operation": " apply the condition count(*) < 200 to filter groups"
        },
        "292": {
            "condition": "When answering about \"airlines that have fewer than 200 flights\", When combining AIRLINES (T1) and FLIGHTS (T2) for shared entities, When the question asks for \"count of flights\", When filtering for airlines with fewer than 200 flights, When grouping by airline",
            "operation": " organize results by T1.Airline and compute requested aggregates per group"
        },
        "293": {
            "condition": "When answering about \"airlines with less than 200 flights\"",
            "operation": " make sure the output order: T1.Airline"
        },
        "294": {
            "condition": "When the question mentions \"airlines\"",
            "operation": " \"airlines\" actually means \"T1.Airline in schema\""
        },
        "295": {
            "condition": "When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the canonical key token for flights (T2.Airline)"
        },
        "296": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.uid = T2.Airline exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "297": {
            "condition": "When the question says \"per airline\"/\"by airline\"",
            "operation": " organize results by T1.Airline and compute count of flights per group"
        },
        "298": {
            "condition": "When answering about \"airlines with less than 200 flights\", When the question mentions \"airlines\", When the question asks for \"count of flights\", When combining T1 and T2 for shared entities, When the question says \"per airline\"/\"by airline\", When filtering aggregated results",
            "operation": " apply the condition count(*) < 200 after grouping instead of before grouping"
        },
        "299": {
            "condition": "When answering about flight numbers of an airline",
            "operation": " make sure the output order: T1.FlightNo"
        },
        "300": {
            "condition": "When the question mentions \"United Airlines\"",
            "operation": " \"United Airlines\" actually means T2.Airline = \"United Airlines\" in schema"
        },
        "301": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T2.uid = T1.Airline and keep only matching pairs (inner match)"
        },
        "302": {
            "condition": "When answering about flight numbers of an airline, When the question mentions \"United Airlines\", When combining T1 and T2 for shared entities, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for identifiers like \"United Airlines\""
        },
        "303": {
            "condition": "When answering about flight numbers for United Airlines flights",
            "operation": " make sure the output order: T1.FlightNo."
        },
        "304": {
            "condition": "When the question mentions \"United Airlines\"",
            "operation": " \"United Airlines\" actually means T2.Airline = \"United Airlines\" in schema."
        },
        "305": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T2.uid = T1.Airline exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "306": {
            "condition": "When answering about flight numbers for United Airlines flights, When the question mentions \"United Airlines\", When combining T1 and T2 for shared entities, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "307": {
            "condition": "When answering about flight numbers",
            "operation": " use column \"FlightNo\" from table \"FLIGHTS\" as the output column."
        },
        "308": {
            "condition": "When the question mentions \"departing from Airport\"",
            "operation": " this corresponds to filtering where column \"SourceAirport\" equals the exact literal \"APG\"."
        },
        "309": {
            "condition": "When answering about flight numbers, When the question mentions \"departing from Airport\", When selecting from the flights table",
            "operation": " use the exact table name \"FLIGHTS\" with proper case and quoting as shown in the schema."
        },
        "310": {
            "condition": "When answering about \"flight numbers of flights leaving from APG\"",
            "operation": " make sure the output order: FlightNo."
        },
        "311": {
            "condition": "When the question mentions \"flight numbers\"",
            "operation": " \"flight numbers\" actually means \"FlightNo in schema\"."
        },
        "312": {
            "condition": "When the question mentions \"leaving from APG\"",
            "operation": " \"leaving from APG\" actually means \"SourceAirport = \\\"APG\\\" in schema\"."
        },
        "313": {
            "condition": "When answering about \"flight numbers of flights leaving from APG\", When the question mentions \"flight numbers\", When the question mentions \"leaving from APG\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for identifiers like \\\"APG\\\"."
        },
        "314": {
            "condition": "When the question asks for flight numbers",
            "operation": " use the exact column token \"FlightNo\" from the FLIGHTS table."
        },
        "315": {
            "condition": "When the question mentions flights arriving at an airport",
            "operation": " filter using the destination airport column \"DestAirport\" instead of departure airport."
        },
        "316": {
            "condition": "When filtering for airport \"APG\"",
            "operation": " use the exact literal value \"APG\" with double quotes as shown in the schema."
        },
        "317": {
            "condition": "When the question asks for flight numbers, When the question mentions flights arriving at an airport, When filtering for airport \"APG\", When referencing the flights table",
            "operation": " use the exact table name \"FLIGHTS\" with uppercase letters as specified in the amends."
        },
        "318": {
            "condition": "When answering about \"flight numbers of flights landing at APG\"",
            "operation": " make sure the output order: \"FlightNo\"."
        },
        "319": {
            "condition": "When the question mentions \"flight numbers\"",
            "operation": " \"flight numbers\" actually means \"FlightNo\" in schema."
        },
        "320": {
            "condition": "When the question mentions \"landing at APG\"",
            "operation": " \"landing at APG\" actually means \"DestAirport = 'APG'\" in schema."
        },
        "321": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "322": {
            "condition": "When answering about \"flight numbers of flights landing at APG\", When the question mentions \"flight numbers\", When the question mentions \"landing at APG\", When choosing identifier delimiters, When handling text literals",
            "operation": " do not change case, spacing, or punctuation of 'APG'."
        },
        "323": {
            "condition": "When answering about \"flight numbers of flights departing from City 'Aberdeen '\"",
            "operation": " make sure the output order: T1.FlightNo."
        },
        "324": {
            "condition": "When the question mentions \"departing from City 'Aberdeen '\"",
            "operation": " \"City 'Aberdeen '\" actually means \"T2.City = 'Aberdeen'\" in schema."
        },
        "325": {
            "condition": "When combining T1 (flights) and T2 (AIRPORTS) for shared entities",
            "operation": " link rows where T1.SourceAirport = T2.AirportCode exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "326": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for identifiers like \"T1.SourceAirport\" and \"T2.AirportCode\"."
        },
        "327": {
            "condition": "When answering about \"flight numbers of flights departing from City 'Aberdeen '\", When the question mentions \"departing from City 'Aberdeen '\", When combining T1 (flights) and T2 (AIRPORTS) for shared entities, When choosing identifier delimiters, When handling text literals",
            "operation": " do not change case, spacing, or punctuation for 'Aberdeen'."
        },
        "328": {
            "condition": "When answering about \"flights leaving from Aberdeen\"",
            "operation": " make sure the output order: T1.FlightNo."
        },
        "329": {
            "condition": "When the question mentions \"Aberdeen\"",
            "operation": " \"Aberdeen\" actually means \"T2.City = 'Aberdeen'\" in schema."
        },
        "330": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.SourceAirport = T2.AirportCode exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "331": {
            "condition": "When answering about \"flights leaving from Aberdeen\", When the question mentions \"Aberdeen\", When combining T1 and T2 for shared entities, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for T1.FlightNo, T1.SourceAirport, T2.AirportCode, and T2.City."
        },
        "332": {
            "condition": "When answering about \"flights arriving at City 'Aberdeen'\"",
            "operation": " make sure to join the flights table (T1) with the airports table (T2) using T1.DestAirport = T2.AirportCode to get city information."
        },
        "333": {
            "condition": "When the question mentions \"arriving at City 'Aberdeen'\"",
            "operation": " filter for T2.City = \"Aberdeen\" exactly as specified."
        },
        "334": {
            "condition": "When the question asks for \"flight numbers\"",
            "operation": " output T1.FlightNo with the exact table alias T1."
        },
        "335": {
            "condition": "When answering about \"flights arriving at City 'Aberdeen'\", When the question mentions \"arriving at City 'Aberdeen'\", When the question asks for \"flight numbers\", When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.DestAirport = T2.AirportCode exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "336": {
            "condition": "When answering about flights arriving in a city",
            "operation": " join the flights table (T1) with the airports table (T2) using T1.DestAirport = T2.AirportCode to match destination airports."
        },
        "337": {
            "condition": "When the question mentions \"flight numbers\"",
            "operation": " use the exact column T1.FlightNo instead of flight_number."
        },
        "338": {
            "condition": "When answering about flights arriving in a city, When the question mentions \"flight numbers\", When filtering for flights arriving in Aberdeen",
            "operation": " use the exact literal \"Aberdeen\" with T2.City = \"Aberdeen\" to filter by destination city rather than departure city."
        },
        "339": {
            "condition": "When answering about flights landing in specific cities",
            "operation": " join the flights table (T1) with the airports table (T2) using T1.DestAirport = T2.AirportCode to connect flight destinations to airport information."
        },
        "340": {
            "condition": "When the question mentions cities \"Aberdeen\" or \"Abilene\"",
            "operation": " filter using T2.city = \"Aberdeen\" OR T2.city = \"Abilene\" with exact case and spelling."
        },
        "341": {
            "condition": "When answering about flights landing in specific cities, When the question mentions cities \"Aberdeen\" or \"Abilene\", When counting flights",
            "operation": " count all rows from the joined result that match the city filter condition."
        },
        "342": {
            "condition": "When answering about \"flights landing in Aberdeen or Abilene\"",
            "operation": " make sure to join Flights as T1 with Airports as T2 using T1.DestAirport = T2.AirportCode instead of querying only the flights table."
        },
        "343": {
            "condition": "When the question mentions \"Aberdeen\" or \"Abilene\"",
            "operation": " these city names actually mean T2.city = \"Aberdeen\" OR T2.city = \"Abilene\" in the schema, not destination = 'Aberdeen' AND destination = 'Abilene'."
        },
        "344": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.DestAirport = T2.AirportCode exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "345": {
            "condition": "When answering about \"flights landing in Aberdeen or Abilene\", When the question mentions \"Aberdeen\" or \"Abilene\", When combining T1 and T2 for shared entities, When the question asks for \"count of flights\"",
            "operation": " compute the number of rows using the canonical key for flights."
        },
        "346": {
            "condition": "When answering about airports without flights",
            "operation": " use \"AirportName\" instead of \"name\" in the SELECT clause."
        },
        "347": {
            "condition": "When identifying airports by their code",
            "operation": " use \"AirportCode\" instead of \"airport_id\" in the WHERE condition."
        },
        "348": {
            "condition": "When checking for departure airports in flights",
            "operation": " use \"SourceAirport\" instead of \"departure_airport\"."
        },
        "349": {
            "condition": "When checking for arrival airports in flights",
            "operation": " use \"DestAirport\" instead of \"arrival_airport\"."
        },
        "350": {
            "condition": "When combining flight departure and arrival checks",
            "operation": " use a single UNION operation instead of separate subqueries to scan the Flights table only once."
        },
        "351": {
            "condition": "When referencing table names",
            "operation": " use \"Airports\" and \"Flights\" with proper capitalization instead of lowercase names."
        },
        "352": {
            "condition": "When answering about airports without flights, When identifying airports by their code, When checking for departure airports in flights, When checking for arrival airports in flights, When combining flight departure and arrival checks, When referencing table names, When finding airports without any flights",
            "operation": " check that \"AirportCode\" is not in the combined set of \"SourceAirport\" and \"DestAirport\" values from the Flights table."
        },
        "353": {
            "condition": "When answering about airports without departing or arriving flights",
            "operation": " select \"AirportName\" from \"Airports\" instead of all columns."
        },
        "354": {
            "condition": "When filtering airports by flight activity",
            "operation": " use \"AirportCode\" as the main filter key instead of airport_id."
        },
        "355": {
            "condition": "When checking for unused airports",
            "operation": " combine both source and destination airport checks into a single UNION operation selecting \"SourceAirport\" and \"DestAirport\" from \"Flights\" instead of separate NOT IN clauses."
        },
        "356": {
            "condition": "When referencing table names",
            "operation": " use exact capitalization \"Airports\" and \"Flights\" as shown in the schema."
        },
        "357": {
            "condition": "When answering about airports without departing or arriving flights, When filtering airports by flight activity, When checking for unused airports, When referencing table names, When identifying airports not used in flights",
            "operation": " find airports where \"AirportCode\" is not present in the combined set of \"SourceAirport\" and \"DestAirport\" values from \"Flights\"."
        }
    },
    "employee_hire_evaluation": {
        "0": {
            "condition": "When answering about \"how many employees\"",
            "operation": " make sure to count records from the \"employee\" table instead of the \"customers\" table."
        },
        "1": {
            "condition": "When answering about \"how many employees\", When counting entities",
            "operation": " use the canonical counting method for all records in the specified table."
        },
        "2": {
            "condition": "When the question asks to count employees",
            "operation": " use the table name \"employee\" exactly as specified in the schema, not \"employees\"."
        },
        "3": {
            "condition": "When counting all records in a table",
            "operation": " do not apply any WHERE clause filters unless explicitly specified in the question."
        },
        "4": {
            "condition": "When the question asks to count employees, When counting all records in a table, When writing SQL functions",
            "operation": " use lowercase \"count(*)\" for consistency with the correct SQL dialect shown in the amends."
        },
        "5": {
            "condition": "When the question asks to sort employee names by age in ascending order",
            "operation": " use ORDER BY age ASC instead of DESC."
        },
        "6": {
            "condition": "When the question asks to sort employee names by age in ascending order, When referencing the employee table",
            "operation": " use the exact table name \"employee\" instead of \"employees\"."
        },
        "7": {
            "condition": "When the question asks for employee names",
            "operation": " use the exact table name \"employee\" instead of \"employees\" as shown in the schema."
        },
        "8": {
            "condition": "When the question asks for employee names, When the question specifies sorting in ascending order of age",
            "operation": " use ascending order for the \"age\" column instead of descending order."
        },
        "9": {
            "condition": "When the question asks for \"number of employees from each city\"",
            "operation": " organize results by the token for \"city\" and compute the count of employees per group."
        },
        "10": {
            "condition": "When producing output columns",
            "operation": " place the count result before the city column in the output order."
        },
        "11": {
            "condition": "When the question asks for \"number of employees from each city\", When producing output columns, When referring to the employee table",
            "operation": " use the exact table name \"employee\" instead of \"employees\"."
        },
        "12": {
            "condition": "When the question asks for \"count of employees for each city\"",
            "operation": " organize results by the exact token \"city\" and compute the count using the canonical key for employees."
        },
        "13": {
            "condition": "When producing output columns",
            "operation": " place the count result before the city column in the output order."
        },
        "14": {
            "condition": "When the question asks for \"count of employees for each city\", When producing output columns, When referring to the employee table",
            "operation": " use the exact table name \"employee\" (not \"employees\")."
        },
        "15": {
            "condition": "When referencing the employee data table",
            "operation": " use the exact table name \"employee\" (singular) instead of \"employees\" (plural)."
        },
        "16": {
            "condition": "When filtering for employees under age 30",
            "operation": " use the condition age < 30."
        },
        "17": {
            "condition": "When grouping results by city",
            "operation": " use the column \"city\" for grouping."
        },
        "18": {
            "condition": "When counting employees per city",
            "operation": " use count(*) to count all rows in each group."
        },
        "19": {
            "condition": "When filtering for cities with more than one employee",
            "operation": " use the condition count(*) > 1 in the HAVING clause."
        },
        "20": {
            "condition": "When referencing the employee data table, When filtering for employees under age 30, When grouping results by city, When counting employees per city, When filtering for cities with more than one employee, When selecting output columns",
            "operation": " include only the \"city\" column in the results."
        },
        "21": {
            "condition": "When the question asks about \"employees\"",
            "operation": " use the exact table name \"employee\" (singular form) instead of \"employees\"."
        },
        "22": {
            "condition": "When filtering for employees under age 30",
            "operation": " use the condition \"age < 30\" exactly as specified."
        },
        "23": {
            "condition": "When grouping results by city",
            "operation": " use the column \"city\" for grouping."
        },
        "24": {
            "condition": "When counting employees per city",
            "operation": " use count(*) to count all rows in each group."
        },
        "25": {
            "condition": "When filtering groups to show cities with more than one employee",
            "operation": " use the condition \"count(*) > 1\" to only include cities with multiple employees."
        },
        "26": {
            "condition": "When the question asks about \"employees\", When filtering for employees under age 30, When grouping results by city, When counting employees per city, When filtering groups to show cities with more than one employee, When selecting output columns",
            "operation": " include only \"city\" in the result set."
        },
        "27": {
            "condition": "When the question asks for \"number of shops in each location\"",
            "operation": " select \"LOCATION\" and count all rows per location group."
        },
        "28": {
            "condition": "When grouping by location",
            "operation": " use \"GROUP BY LOCATION\" instead of grouping by shop_id."
        },
        "29": {
            "condition": "When referencing the shops table",
            "operation": " use the exact table name \"shop\" instead of \"shops\"."
        },
        "30": {
            "condition": "When the question asks for \"number of shops in each location\", When grouping by location, When referencing the shops table, When counting shops",
            "operation": " use count(*) to count all records in each location group."
        },
        "31": {
            "condition": "When answering about \"number of shops in each location\"",
            "operation": " make sure the output order: count(*) column first, then LOCATION column."
        },
        "32": {
            "condition": "When the question asks for \"number of shops\"",
            "operation": " compute the count of all rows using count(*)."
        },
        "33": {
            "condition": "When answering about \"number of shops in each location\", When the question asks for \"number of shops\", When the question says \"in each location\"",
            "operation": " organize results by the LOCATION column and compute the count per group."
        },
        "34": {
            "condition": "When the question asks for \"count of shops\" per location",
            "operation": " compute the number of rows using the canonical key from the shop table."
        },
        "35": {
            "condition": "When the question mentions \"location\"",
            "operation": " use the exact column token \"LOCATION\" with the correct case."
        },
        "36": {
            "condition": "When the question asks for results \"per location\"",
            "operation": " organize results by grouping on the exact column \"LOCATION\"."
        },
        "37": {
            "condition": "When referring to the shops table",
            "operation": " use the exact table name \"shop\" instead of \"shops\"."
        },
        "38": {
            "condition": "When the question asks for \"count of shops\" per location, When the question mentions \"location\", When the question asks for results \"per location\", When referring to the shops table, When producing output columns",
            "operation": " maintain the order of location first followed by count."
        },
        "39": {
            "condition": "When answering about \"shops in each location\"",
            "operation": " make sure the output order: count of shops first, then location"
        },
        "40": {
            "condition": "When the question asks for \"count of shops\"",
            "operation": " compute the number of rows using the canonical key for shops"
        },
        "41": {
            "condition": "When answering about \"shops in each location\", When the question asks for \"count of shops\", When the question says \"per location\"/\"by location\"",
            "operation": " organize results by the LOCATION column and compute count per group"
        },
        "42": {
            "condition": "When answering about \"manager name and district of the shop with largest number of products\"",
            "operation": " make sure the output order: manager_name, district."
        },
        "43": {
            "condition": "When the question mentions \"shop\"",
            "operation": " \"shop\" actually means table \"shop\" in schema."
        },
        "44": {
            "condition": "When the question mentions \"number of products\"",
            "operation": " \"number of products\" actually means column \"number_products\" in schema."
        },
        "45": {
            "condition": "When answering about \"manager name and district of the shop with largest number of products\", When the question mentions \"shop\", When the question mentions \"number of products\", When the question asks for \"largest\" number of products",
            "operation": " rank rows by \"number_products\" in descending order and keep the first 1 row."
        },
        "46": {
            "condition": "When the question asks about shops",
            "operation": " use table \"shop\" instead of \"shops\"."
        },
        "47": {
            "condition": "When ordering by product count",
            "operation": " use column \"number_products\" instead of \"product_count\"."
        },
        "48": {
            "condition": "When the question asks about shops, When ordering by product count, When finding the shop with the largest number of products",
            "operation": " order by \"number_products\" in descending order and keep only the first result."
        },
        "49": {
            "condition": "When answering about \"minimum and maximum number of products of all stores\"",
            "operation": " use table \"shop\" instead of \"stores\" and column \"Number_products\" instead of \"product_count\"."
        },
        "50": {
            "condition": "When answering about \"minimum and maximum number of products of all stores\", When computing aggregates across all stores",
            "operation": " calculate the minimum value of \"Number_products\" and the maximum value of \"Number_products\" from the \"shop\" table."
        },
        "51": {
            "condition": "When the question asks for minimum and maximum number of products",
            "operation": " use the exact column name \"Number_products\" from the shop table, not \"products\"."
        },
        "52": {
            "condition": "When referencing the table containing product information",
            "operation": " use the exact table name \"shop\" instead of the pluralized form \"shops\"."
        },
        "53": {
            "condition": "When the question asks for minimum and maximum number of products, When referencing the table containing product information, When the question does not specify column aliases for output",
            "operation": " return the aggregate results without column aliases, maintaining the natural output order of minimum value first followed by maximum value."
        },
        "54": {
            "condition": "When the question mentions \"shops\"",
            "operation": " use the exact table name \"shop\" instead of \"shops\"."
        },
        "55": {
            "condition": "When ordering by number of products in descending order",
            "operation": " use the column \"number_products\" directly instead of attempting to count products."
        },
        "56": {
            "condition": "When selecting output columns",
            "operation": " maintain the exact column order \"name\", \"location\", and \"district\" as specified in the question."
        },
        "57": {
            "condition": "When the question mentions \"shops\", When ordering by number of products in descending order, When selecting output columns, When producing the result set",
            "operation": " sort all rows by \"number_products\" in descending order."
        },
        "58": {
            "condition": "When the question refers to \"shops\"",
            "operation": " use the exact table name \"shop\" instead of \"shops\"."
        },
        "59": {
            "condition": "When ordering by number of products",
            "operation": " use the existing column \"number_products\" directly rather than attempting to count products through aggregation."
        },
        "60": {
            "condition": "When the question asks to sort in descending order",
            "operation": " order by \"number_products\" in descending direction."
        },
        "61": {
            "condition": "When the question refers to \"shops\", When ordering by number of products, When the question asks to sort in descending order, When returning shop information",
            "operation": " output the columns \"name\", \"location\", and \"district\" in that order."
        },
        "62": {
            "condition": "When the question mentions \"stores\"",
            "operation": " use the exact table name \"shop\" instead of \"stores\"."
        },
        "63": {
            "condition": "When computing the average number of products",
            "operation": " use the lowercase function \"avg\" instead of uppercase \"AVG\"."
        },
        "64": {
            "condition": "When the question mentions \"stores\", When computing the average number of products, When filtering shops by number of products exceeding the average",
            "operation": " compare \"number_products\" against the average of \"number_products\" across all shops."
        },
        "65": {
            "condition": "When the question mentions \"shop names\"",
            "operation": " use the exact column token \"name\" from the \"shop\" table."
        },
        "66": {
            "condition": "When the question asks for shops where \"number products is above the average\"",
            "operation": " compare the \"number_products\" column value directly against the average of \"number_products\" across all shops, without using COUNT() function."
        },
        "67": {
            "condition": "When computing the average for comparison",
            "operation": " calculate the average of \"number_products\" from the \"shop\" table using avg() function."
        },
        "68": {
            "condition": "When the question mentions \"shop names\", When the question asks for shops where \"number products is above the average\", When computing the average for comparison, When referencing tables",
            "operation": " use \"shop\" table instead of \"shops\" in both main query and subquery."
        },
        "69": {
            "condition": "When answering about \"employee who was awarded the most times\"",
            "operation": " make sure the output order: t1.name."
        },
        "70": {
            "condition": "When combining employee and evaluation tables",
            "operation": " link rows where t1.Employee_ID = t2.Employee_ID and keep only matching pairs (inner match)."
        },
        "71": {
            "condition": "When counting evaluation records per employee",
            "operation": " compute the number of rows using count(*) grouped by t2.Employee_ID."
        },
        "72": {
            "condition": "When answering about \"employee who was awarded the most times\", When combining employee and evaluation tables, When counting evaluation records per employee, When the question mentions \"most times\"",
            "operation": " rank employees by count(*) in descending order and keep the first 1 row."
        },
        "73": {
            "condition": "When answering about \"employee who received the most awards in evaluations\"",
            "operation": " make sure the output order: t1.name."
        },
        "74": {
            "condition": "When the question mentions \"employee name\"",
            "operation": " \"employee name\" actually means \"t1.name in schema\"."
        },
        "75": {
            "condition": "When combining employee and evaluation tables for shared entities",
            "operation": " link rows where t1.Employee_ID = t2.Employee_ID; keep only matching pairs (inner match)."
        },
        "76": {
            "condition": "When the question asks for \"most awards\" (highest count)",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "77": {
            "condition": "When answering about \"employee who received the most awards in evaluations\", When the question mentions \"employee name\", When combining employee and evaluation tables for shared entities, When the question asks for \"most awards\" (highest count), When the question says \"per employee\"/\"by employee\"",
            "operation": " organize results by t2.Employee_ID and compute requested aggregates per group."
        },
        "78": {
            "condition": "When answering about \"the employee who got the highest one time bonus\"",
            "operation": " make sure the output order: t1.name."
        },
        "79": {
            "condition": "When combining employee and evaluation tables",
            "operation": " link rows where t1.Employee_ID = t2.Employee_ID and keep only matching pairs (inner match)."
        },
        "80": {
            "condition": "When the question mentions \"highest\" bonus",
            "operation": " rank rows by t2.bonus in descending order and keep the first 1 row."
        },
        "81": {
            "condition": "When answering about \"the employee who got the highest one time bonus\", When combining employee and evaluation tables, When the question mentions \"highest\" bonus, When selecting employee names",
            "operation": " use t1.name with table alias instead of just name."
        },
        "82": {
            "condition": "When answering about \"which employee received the biggest bonus\"",
            "operation": " make sure the output order: t1.name."
        },
        "83": {
            "condition": "When the question mentions \"employee name\"",
            "operation": " \"employee name\" actually means \"t1.name in schema\"."
        },
        "84": {
            "condition": "When the question mentions \"biggest bonus\"",
            "operation": " rank rows by t2.bonus in descending direction and keep the first 1 row."
        },
        "85": {
            "condition": "When combining employee and evaluation tables for shared entities",
            "operation": " link rows where t1.Employee_ID = t2.Employee_ID exactly as shown; keep only matching pairs (inner match)."
        },
        "86": {
            "condition": "When answering about \"which employee received the biggest bonus\", When the question mentions \"employee name\", When the question mentions \"biggest bonus\", When combining employee and evaluation tables for shared entities, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "87": {
            "condition": "When selecting employee names",
            "operation": " use the exact table name \"employee\" instead of \"employees\" and select the \"name\" column."
        },
        "88": {
            "condition": "When identifying employees who never won any award in the evaluation",
            "operation": " use a NOT IN subquery that filters by \"Employee_ID\" from the \"evaluation\" table instead of checking award_count."
        },
        "89": {
            "condition": "When combining employee and evaluation data",
            "operation": " use \"Employee_ID\" as the matching key between tables, where employee.Employee_ID is not found in evaluation.Employee_ID."
        },
        "90": {
            "condition": "When selecting employee names, When identifying employees who never won any award in the evaluation, When combining employee and evaluation data, When handling employee identifiers",
            "operation": " use the exact column name \"Employee_ID\" with proper case and formatting as shown in the schema."
        },
        "91": {
            "condition": "When the question asks for employee names who never received any evaluation",
            "operation": " select \"name\" from table \"employee\" (T1) instead of \"employees\"."
        },
        "92": {
            "condition": "When checking for employees without evaluations",
            "operation": " use a NOT IN condition with \"Employee_ID\" compared against a subquery that selects \"Employee_ID\" from table \"evaluation\" (T2)."
        },
        "93": {
            "condition": "When combining employee and evaluation data",
            "operation": " link using the exact key equality \"T1.Employee_ID = T2.Employee_ID\" to find employees missing from the evaluation table entirely."
        },
        "94": {
            "condition": "When the question asks for employee names who never received any evaluation, When checking for employees without evaluations, When combining employee and evaluation data, When filtering for employees without evaluations",
            "operation": " do not use direct null checks on evaluation_score, instead implement a correlated exclusion pattern to identify employees with no evaluation records."
        },
        "95": {
            "condition": "When answering about \"shop hiring the largest number of employees\"",
            "operation": " make sure the output order: t2.name"
        },
        "96": {
            "condition": "When the question mentions \"shop name\"",
            "operation": " \"name\" actually means \"t2.name in schema\""
        },
        "97": {
            "condition": "When combining hiring table and shops table for shared entities",
            "operation": " link rows where t1.shop_id = t2.shop_id exactly as shown; keep only matching pairs (inner match)"
        },
        "98": {
            "condition": "When the question asks for \"count of employees hired per shop\"",
            "operation": " compute the number of rows using count(*) grouped by t1.shop_id"
        },
        "99": {
            "condition": "When answering about \"shop hiring the largest number of employees\", When the question mentions \"shop name\", When combining hiring table and shops table for shared entities, When the question asks for \"count of employees hired per shop\", When the question mentions \"largest number\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row"
        },
        "100": {
            "condition": "When answering about \"which shop has the most employees\"",
            "operation": " make sure the output order: t2.name."
        },
        "101": {
            "condition": "When the question mentions \"shop name\"",
            "operation": " \"shop name\" actually means \"t2.name in schema\"."
        },
        "102": {
            "condition": "When combining hiring AS t1 and shop AS t2 for shared entities",
            "operation": " link rows where t1.shop_id = t2.shop_id exactly as shown; keep only matching pairs (inner match)."
        },
        "103": {
            "condition": "When the question asks for \"count of employees\" per shop",
            "operation": " compute the number of rows using t1.shop_id as the grouping key and count(*) as the aggregate."
        },
        "104": {
            "condition": "When answering about \"which shop has the most employees\", When the question mentions \"shop name\", When combining hiring AS t1 and shop AS t2 for shared entities, When the question asks for \"count of employees\" per shop, When the question mentions \"most employees\" or \"highest\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "105": {
            "condition": "When the question asks about shops that do not hire any employee",
            "operation": " use the table name \"shop\" instead of \"shops\" in the FROM clause."
        },
        "106": {
            "condition": "When checking for shops without hiring records",
            "operation": " use a NOT IN condition on shop_id instead of filtering with employee_id IS NULL."
        },
        "107": {
            "condition": "When correlating between main query and subquery",
            "operation": " use shop_id as the linking key between the shop table and hiring table."
        },
        "108": {
            "condition": "When the question asks about shops that do not hire any employee, When checking for shops without hiring records, When correlating between main query and subquery, When identifying shops without hiring records",
            "operation": " check for shops not present in the hiring table rather than checking for null employee IDs."
        },
        "109": {
            "condition": "When the question asks for shop names",
            "operation": " use the exact column name \"name\" from the \"shop\" table instead of \"shop_name\" from \"shops\"."
        },
        "110": {
            "condition": "When identifying shops with no employees",
            "operation": " use a subquery with NOT IN to filter shops that are not present in the hiring table instead of checking for employee_count = 0."
        },
        "111": {
            "condition": "When the question asks for shop names, When identifying shops with no employees, When linking between the shop table and hiring table",
            "operation": " use the exact column \"shop_id\" in both the main query and subquery for proper comparison."
        },
        "112": {
            "condition": "When answering about \"number of employees hired in each shop\"",
            "operation": " make sure the output order: shop name, then count of employees."
        },
        "113": {
            "condition": "When the question mentions \"shop name\"",
            "operation": " \"shop name\" actually means \"t2.name\" in schema."
        },
        "114": {
            "condition": "When combining hiring as T1 and shop as T2 for shared entities",
            "operation": " link rows where T1.shop_id = T2.shop_id exactly as shown; keep only matching pairs (inner match)."
        },
        "115": {
            "condition": "When the question asks for \"count of employees\"",
            "operation": " compute the number of rows using the canonical key from the hiring table."
        },
        "116": {
            "condition": "When answering about \"number of employees hired in each shop\", When the question mentions \"shop name\", When combining hiring as T1 and shop as T2 for shared entities, When the question asks for \"count of employees\", When the question says \"per shop\"/\"by shop\"",
            "operation": " organize results by t2.name and compute the count per group."
        },
        "117": {
            "condition": "When answering about \"number of employees hired in each shop\"",
            "operation": " make sure the output order: count(*) first, then shop name."
        },
        "118": {
            "condition": "When referring to the shop name column",
            "operation": " use lowercase \"t2.name\" instead of uppercase \"t2.Name\" for both SELECT and GROUP BY clauses."
        },
        "119": {
            "condition": "When answering about \"number of employees hired in each shop\", When referring to the shop name column, When counting employees per shop",
            "operation": " use count(*) to count all rows in the hiring table for each shop group."
        },
        "120": {
            "condition": "When answering about \"number of employees per shop\"",
            "operation": " make sure the output order: shop name first, then employee count."
        },
        "121": {
            "condition": "When the question mentions \"shop name\"",
            "operation": " \"shop name\" actually means \"t2.name\" in schema."
        },
        "122": {
            "condition": "When the question asks for \"number of employees\"",
            "operation": " compute the count of all rows from the hiring table (t1) per shop."
        },
        "123": {
            "condition": "When combining hiring as t1 and shop as t2",
            "operation": " link rows where t1.shop_id = t2.shop_id exactly as shown; keep only matching pairs (inner match)."
        },
        "124": {
            "condition": "When answering about \"number of employees per shop\", When the question mentions \"shop name\", When the question asks for \"number of employees\", When combining hiring as t1 and shop as t2, When the question says \"per shop\"",
            "operation": " organize results by t2.name and compute employee count per group."
        },
        "125": {
            "condition": "When the question asks for \"total bonus\"",
            "operation": " use the exact column name \"bonus\" from the evaluation table."
        },
        "126": {
            "condition": "When referencing the table containing bonus data",
            "operation": " use the exact table name \"evaluation\" (singular form) instead of \"evaluations\"."
        },
        "127": {
            "condition": "When the question asks for \"total bonus\", When referencing the table containing bonus data, When calculating the sum of bonus amounts",
            "operation": " aggregate using the SUM function on the \"bonus\" column from the evaluation table."
        },
        "128": {
            "condition": "When the question asks for \"total amount of bonus\"",
            "operation": " use the exact column token \"bonus\" for aggregation instead of \"salary\"."
        },
        "129": {
            "condition": "When referencing the evaluation data",
            "operation": " use the exact table name \"evaluation\" instead of \"evaluations\"."
        },
        "130": {
            "condition": "When the question asks for \"total amount of bonus\", When referencing the evaluation data, When calculating the total bonus amount",
            "operation": " compute the sum of all values in the \"bonus\" column from the \"evaluation\" table."
        },
        "131": {
            "condition": "When answering about \"hiring\"",
            "operation": " query the \"hiring\" table instead of the \"employees\" table."
        },
        "132": {
            "condition": "When the question asks for \"all the information about hiring\"",
            "operation": " select all columns from the \"hiring\" table without any filtering conditions."
        },
        "133": {
            "condition": "When answering about \"hiring\", When the question asks for \"all the information about hiring\", When the question does not specify any filtering criteria",
            "operation": " do not apply any WHERE clause filters to the query."
        },
        "134": {
            "condition": "When answering about \"all the information about hiring\"",
            "operation": " query the \"hiring\" table instead of the \"employees\" table."
        },
        "135": {
            "condition": "When the question asks for \"all the information\"",
            "operation": " select all columns from the table without any filtering conditions."
        },
        "136": {
            "condition": "When answering about \"all the information about hiring\", When the question asks for \"all the information\", When the question mentions \"hiring\"",
            "operation": " \"hiring\" refers to the \"hiring\" table in the schema."
        },
        "137": {
            "condition": "When the question mentions \"stores\"",
            "operation": " use table \"shop\" instead."
        },
        "138": {
            "condition": "When the question mentions \"products\"",
            "operation": " use column \"Number_products\" instead."
        },
        "139": {
            "condition": "When finding districts with both stores having less than 3000 products and stores having more than 10000 products",
            "operation": " use INTERSECT between two separate queries - one for \"Number_products < 3000\" and another for \"Number_products > 10000\" - instead of combining both conditions in a single WHERE clause."
        },
        "140": {
            "condition": "When the question mentions \"stores\", When the question mentions \"products\", When finding districts with both stores having less than 3000 products and stores having more than 10000 products, When selecting districts",
            "operation": " ensure the output column is \"district\" from the \"shop\" table."
        },
        "141": {
            "condition": "When the question mentions \"shops\"",
            "operation": " use table \"shop\" instead of \"shops\" and column \"Number_products\" instead of \"products_sold\"."
        },
        "142": {
            "condition": "When finding districts with both shops selling less than 3000 products and shops selling more than 10000 products",
            "operation": " use INTERSECT to combine results from two separate queries - one for districts with shops having \"Number_products\" < 3000 and another for districts with shops having \"Number_products\" > 10000."
        },
        "143": {
            "condition": "When filtering shops by product count",
            "operation": " use exact numeric comparisons \"Number_products\" < 3000 and \"Number_products\" > 10000 with the literal values as specified."
        },
        "144": {
            "condition": "When the question mentions \"shops\", When finding districts with both shops selling less than 3000 products and shops selling more than 10000 products, When filtering shops by product count, When the question asks about districts containing both types of shops",
            "operation": " do not use AND with contradictory filters on the same row, as no shop can simultaneously have both \"Number_products\" < 3000 and \"Number_products\" > 10000."
        },
        "145": {
            "condition": "When the question asks for \"different store locations\"",
            "operation": " count the number of unique values using the exact column token \"LOCATION\" from the correct table."
        },
        "146": {
            "condition": "When the question mentions \"store locations\"",
            "operation": " the correct data source is table \"shop\" instead of \"stores\"."
        },
        "147": {
            "condition": "When the question asks for \"different store locations\", When the question mentions \"store locations\", When counting distinct locations",
            "operation": " use DISTINCT on the \"LOCATION\" column to count unique values rather than all rows."
        },
        "148": {
            "condition": "When the question asks to count distinct store locations",
            "operation": " use the exact column token \"LOCATION\" from the shop table."
        },
        "149": {
            "condition": "When counting distinct values",
            "operation": " compute the number of unique values of the exact token \"LOCATION\"."
        },
        "150": {
            "condition": "When the schema specifies table \"shop\"",
            "operation": " use table \"shop\" instead of any other table name like \"stores\"."
        },
        "151": {
            "condition": "When the question asks to count distinct store locations, When counting distinct values, When the schema specifies table \"shop\", When answering about \"number of distinct store locations\"",
            "operation": " make sure the output order: count of distinct LOCATION values."
        }
    },
    "cre_Doc_Template_Mgt": {
        "0": {
            "condition": "When counting documents",
            "operation": " use the exact table name \"Documents\" with proper case instead of lowercase \"documents\"."
        },
        "1": {
            "condition": "When counting documents, When using the count function",
            "operation": " use lowercase \"count(*)\" instead of uppercase \"COUNT(*)\" to match function casing."
        },
        "2": {
            "condition": "When counting documents",
            "operation": " use the exact table name \"Documents\" with proper case instead of lowercase \"documents\"."
        },
        "3": {
            "condition": "When counting documents, When using the count function",
            "operation": " use lowercase \"count(*)\" instead of uppercase \"COUNT(*)\" for consistency with the correct SQL dialect."
        },
        "4": {
            "condition": "When answering about \"List document IDs, document names, and document descriptions for all documents\"",
            "operation": " make sure the output order: document_id, document_name, document_description."
        },
        "5": {
            "condition": "When the question mentions \"document IDs\"",
            "operation": " \"document IDs\" actually means \"document_id in schema\"."
        },
        "6": {
            "condition": "When the question mentions \"document names\"",
            "operation": " \"document names\" actually means \"document_name in schema\"."
        },
        "7": {
            "condition": "When the question mentions \"document descriptions\"",
            "operation": " \"document descriptions\" actually means \"document_description in schema\"."
        },
        "8": {
            "condition": "When answering about \"List document IDs, document names, and document descriptions for all documents\", When the question mentions \"document IDs\", When the question mentions \"document names\", When the question mentions \"document descriptions\", When referencing the documents table",
            "operation": " use the exact identifier \"Documents\" with the correct case instead of \"documents\"."
        },
        "9": {
            "condition": "When answering about \"ids, names, and descriptions for all documents\"",
            "operation": " make sure the output order: document_id, document_name, document_description."
        },
        "10": {
            "condition": "When the question mentions \"ids\"",
            "operation": " \"ids\" actually means \"document_id in schema\"."
        },
        "11": {
            "condition": "When the question mentions \"names\"",
            "operation": " \"names\" actually means \"document_name in schema\"."
        },
        "12": {
            "condition": "When the question mentions \"descriptions\"",
            "operation": " \"descriptions\" actually means \"document_description in schema\"."
        },
        "13": {
            "condition": "When answering about \"ids, names, and descriptions for all documents\", When the question mentions \"ids\", When the question mentions \"names\", When the question mentions \"descriptions\", When referring to the documents table",
            "operation": " use the exact table name \"Documents\" with proper capitalization."
        },
        "14": {
            "condition": "When referencing the Documents table",
            "operation": " use the exact table name \"Documents\" with double quotes and capital D."
        },
        "15": {
            "condition": "When filtering by document description",
            "operation": " use the exact column name \"Document_Description\" with double quotes and capital D and capital D."
        },
        "16": {
            "condition": "When pattern matching for text containing the letter 'w'",
            "operation": " use double quotes around the pattern \"%w%\" for consistency with the SQL format."
        },
        "17": {
            "condition": "When referencing the Documents table, When filtering by document description, When pattern matching for text containing the letter 'w', When selecting document information",
            "operation": " include both \"document_name\" and \"template_id\" columns in the output."
        },
        "18": {
            "condition": "When the question asks for document names",
            "operation": " use \"document_name\" instead of \"name\" in the output."
        },
        "19": {
            "condition": "When filtering documents by description containing the letter w",
            "operation": " use \"Document_Description\" instead of \"description\" and match using the pattern \"%w%\"."
        },
        "20": {
            "condition": "When referencing the documents table",
            "operation": " use \"Documents\" instead of \"documents\" with proper case sensitivity."
        },
        "21": {
            "condition": "When the question asks for document names, When filtering documents by description containing the letter w, When referencing the documents table, When using string patterns in filters",
            "operation": " use double quotes \"%w%\" instead of single quotes for the LIKE pattern."
        },
        "22": {
            "condition": "When the question asks for \"description\"",
            "operation": " use the exact column name \"Document_Description\" instead of \"description\" to match the schema."
        },
        "23": {
            "condition": "When referencing the documents table",
            "operation": " use the exact table name \"Documents\" with proper case sensitivity."
        },
        "24": {
            "condition": "When the question asks for \"description\", When referencing the documents table, When filtering for document named \"Robbin CV\"",
            "operation": " use double quotes \"Robbin CV\" for the string literal to match the required formatting."
        },
        "25": {
            "condition": "When the question asks for document description",
            "operation": " use the exact column name \"Document_Description\" instead of \"description\"."
        },
        "26": {
            "condition": "When filtering by document name",
            "operation": " use the exact column name \"document_name\" and the exact literal value \"Robbin CV\" with double quotes."
        },
        "27": {
            "condition": "When referencing the documents table",
            "operation": " use the exact table name \"Documents\" with proper capitalization."
        },
        "28": {
            "condition": "When the question asks for document description, When filtering by document name, When referencing the documents table, When answering about document details",
            "operation": " make sure the output order is document_id, template_id, Document_Description."
        },
        "29": {
            "condition": "When counting different templates used by documents",
            "operation": " count distinct values of \"template_id\" from the \"Documents\" table."
        },
        "30": {
            "condition": "When counting different templates used by documents, When referring to the documents table",
            "operation": " use the exact identifier \"Documents\" with proper case sensitivity as shown in the schema."
        },
        "31": {
            "condition": "When counting the number of different templates used for documents",
            "operation": " count distinct values of template_id from the Documents table instead of counting all rows."
        },
        "32": {
            "condition": "When counting the number of different templates used for documents, When referencing the Documents table",
            "operation": " use the exact identifier \"Documents\" with proper case instead of \"documents\"."
        },
        "33": {
            "condition": "When answering about \"documents using template with type code 'PPT'\"",
            "operation": " join table \"Documents\" as T1 with table \"Templates\" as T2 using the exact key equality T1.Template_ID = T2.Template_ID and keep only matching pairs (inner match)."
        },
        "34": {
            "condition": "When the question mentions \"template with type code 'PPT'\"",
            "operation": " filter for rows where T2.Template_Type_Code exactly equals 'PPT' (preserving case and quotes)."
        },
        "35": {
            "condition": "When answering about \"documents using template with type code 'PPT'\", When the question mentions \"template with type code 'PPT'\", When the question asks for \"count of documents\"",
            "operation": " compute the number of rows using the canonical key from the documents table."
        },
        "36": {
            "condition": "When answering about \"documents that use the PPT template type\"",
            "operation": " join the documents table (T1) with the Templates table (T2) using the exact key equality T1.Template_ID = T2.Template_ID, keeping only matching pairs (inner match)."
        },
        "37": {
            "condition": "When filtering for PPT template type",
            "operation": " filter on T2.Template_Type_Code = 'PPT' exactly as specified, preserving the exact literal value 'PPT'."
        },
        "38": {
            "condition": "When answering about \"documents that use the PPT template type\", When filtering for PPT template type, When counting documents",
            "operation": " compute the number of rows using the canonical key from the documents table after applying the join and filter conditions."
        },
        "39": {
            "condition": "When answering about \"template used by the most documents\"",
            "operation": " make sure the output order: T1.template_id, T2.Template_Type_Code."
        },
        "40": {
            "condition": "When the question mentions \"type code\"",
            "operation": " \"type code\" actually means \"Template_Type_Code in schema\"."
        },
        "41": {
            "condition": "When combining Documents (T1) and Templates (T2) tables",
            "operation": " link rows where T1.template_id = T2.template_id and keep only matching pairs (inner match)."
        },
        "42": {
            "condition": "When the question asks for \"most documents\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "43": {
            "condition": "When answering about \"template used by the most documents\", When the question mentions \"type code\", When combining Documents (T1) and Templates (T2) tables, When the question asks for \"most documents\", When the question asks for count of documents per template",
            "operation": " compute the number of rows using count(*) per T1.template_id group."
        },
        "44": {
            "condition": "When answering about \"template used for the greatest number of documents\"",
            "operation": " make sure the output order: T1.template_id, T2.Template_Type_Code."
        },
        "45": {
            "condition": "When the question mentions \"id\"",
            "operation": " \"id\" actually means \"T1.template_id in schema\"."
        },
        "46": {
            "condition": "When the question mentions \"type code\"",
            "operation": " \"type code\" actually means \"T2.Template_Type_Code in schema\"."
        },
        "47": {
            "condition": "When combining Documents AS T1 and Templates AS T2 for shared entities",
            "operation": " link rows where T1.template_id = T2.template_id; keep only matching pairs (inner match)."
        },
        "48": {
            "condition": "When the question asks for \"count of documents\"",
            "operation": " compute the number of rows using the canonical key token for documents (T1.template_id)."
        },
        "49": {
            "condition": "When the question mentions \"greatest number\" or \"most frequently used\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "50": {
            "condition": "When answering about \"template used for the greatest number of documents\", When the question mentions \"id\", When the question mentions \"type code\", When combining Documents AS T1 and Templates AS T2 for shared entities, When the question asks for \"count of documents\", When the question mentions \"greatest number\" or \"most frequently used\", When the question asks for \"per template\"/\"by template\"",
            "operation": " organize results by T1.template_id and compute requested aggregates per group."
        },
        "51": {
            "condition": "When counting occurrences of template_id in the documents table",
            "operation": " use COUNT(*) to count all rows for each template_id."
        },
        "52": {
            "condition": "When identifying templates used in more than a single document",
            "operation": " filter for template_ids where the count is greater than 1 (not equal to 1)."
        },
        "53": {
            "condition": "When counting occurrences of template_id in the documents table, When identifying templates used in more than a single document, When answering about template ids of templates used in multiple documents",
            "operation": " output only the template_id column."
        },
        "54": {
            "condition": "When answering about \"templates not used by any document\"",
            "operation": " use EXCEPT set operation instead of NOT IN with a subquery to handle potential NULL values correctly."
        },
        "55": {
            "condition": "When selecting template identifiers",
            "operation": " reference \"template_id\" in both SELECT clauses of the EXCEPT operation instead of mixing \"id\" and \"template_id\"."
        },
        "56": {
            "condition": "When answering about \"templates not used by any document\", When selecting template identifiers, When referring to table names",
            "operation": " capitalize them consistently as \"Templates\" and \"Documents\" instead of using lowercase versions."
        },
        "57": {
            "condition": "When answering about \"template IDs not used in any documents\"",
            "operation": " use the EXCEPT set operation to find IDs present in Templates but absent from Documents."
        },
        "58": {
            "condition": "When selecting template identifiers",
            "operation": " use \"template_id\" as the output column name instead of \"id\"."
        },
        "59": {
            "condition": "When answering about \"template IDs not used in any documents\", When selecting template identifiers, When referencing database tables",
            "operation": " use exact table names \"Templates\" and \"Documents\" with proper capitalization instead of lowercase versions."
        },
        "60": {
            "condition": "When the question asks for template ids, version numbers, and template type codes",
            "operation": " include \"template_id\", \"version_number\", and \"template_type_code\" in the output columns."
        },
        "61": {
            "condition": "When referring to the templates table",
            "operation": " use the exact table name \"Templates\" with capital T instead of lowercase \"templates\"."
        },
        "62": {
            "condition": "When the question asks for template ids, version numbers, and template type codes, When referring to the templates table, When answering about all templates",
            "operation": " make sure the output order includes template_id, version_number, and template_type_code as specified in the question."
        },
        "63": {
            "condition": "When selecting columns for template information",
            "operation": " use exact column names \"template_id\", \"version_number\", and \"template_type_code\" instead of generic names like id, version, or type."
        },
        "64": {
            "condition": "When referencing the templates table",
            "operation": " use the exact table name \"Templates\" with proper case and quotes as shown in the schema."
        },
        "65": {
            "condition": "When the question asks for all templates without filtering conditions",
            "operation": " do not apply any WHERE filters like version > 5."
        },
        "66": {
            "condition": "When selecting columns for template information, When referencing the templates table, When the question asks for all templates without filtering conditions, When the question does not specify any ordering requirements",
            "operation": " do not include any ORDER BY clauses like ORDER BY id DESC."
        },
        "67": {
            "condition": "When the question asks for \"template type codes\"",
            "operation": " use the exact column name \"template_type_code\" from the Templates table."
        },
        "68": {
            "condition": "When the question asks for \"distinct\" values",
            "operation": " ensure only unique values of template_type_code are returned."
        },
        "69": {
            "condition": "When the question asks for \"template type codes\", When the question asks for \"distinct\" values, When referencing the Templates table",
            "operation": " use the exact case-sensitive name \"Templates\" as shown in the schema."
        },
        "70": {
            "condition": "When the question asks for \"different template type codes\"",
            "operation": " select distinct \"template_type_code\" from \"Templates\"."
        },
        "71": {
            "condition": "When referring to the templates table",
            "operation": " use the exact identifier \"Templates\" with proper case sensitivity."
        },
        "72": {
            "condition": "When the question asks for \"different template type codes\", When referring to the templates table, When deduplicating values",
            "operation": " use DISTINCT instead of GROUP BY for retrieving unique values."
        },
        "73": {
            "condition": "When selecting template identifiers",
            "operation": " use \"template_id\" instead of \"id\" as the output column."
        },
        "74": {
            "condition": "When referring to the templates table",
            "operation": " use the exact table name \"Templates\" with proper capitalization."
        },
        "75": {
            "condition": "When filtering for template type codes \"PP\" or \"PPT\"",
            "operation": " use OR logic with the exact string literals \"PP\" and \"PPT\" in double quotes, not AND logic that would require both conditions simultaneously."
        },
        "76": {
            "condition": "When selecting template identifiers, When referring to the templates table, When filtering for template type codes \"PP\" or \"PPT\", When comparing template type codes",
            "operation": " use the exact column name \"template_type_code\" with the specified values \"PP\" or \"PPT\"."
        },
        "77": {
            "condition": "When the question asks for template ids",
            "operation": " use the exact column name \"template_id\" from the Templates table."
        },
        "78": {
            "condition": "When the question mentions templates",
            "operation": " use the exact table name \"Templates\" with proper casing."
        },
        "79": {
            "condition": "When the question asks for templates with code PP or PPT",
            "operation": " filter on column \"template_type_code\" with exact values \"PP\" and \"PPT\" using double quotes."
        },
        "80": {
            "condition": "When the question asks for template ids, When the question mentions templates, When the question asks for templates with code PP or PPT, When answering about template ids",
            "operation": " make sure the output order: template_id."
        },
        "81": {
            "condition": "When referencing the Templates table",
            "operation": " use the exact identifier \"Templates\" with proper case sensitivity."
        },
        "82": {
            "condition": "When filtering by template type code",
            "operation": " use the exact column name \"template_type_code\" instead of \"template_type\"."
        },
        "83": {
            "condition": "When comparing with the literal value CV",
            "operation": " use double quotes \"CV\" instead of single quotes to match the required string format."
        },
        "84": {
            "condition": "When referencing the Templates table, When filtering by template type code, When comparing with the literal value CV, When counting templates",
            "operation": " count all rows from the Templates table that satisfy the condition template_type_code = \"CV\"."
        },
        "85": {
            "condition": "When referencing the templates table",
            "operation": " use the exact identifier \"Templates\" with proper case sensitivity."
        },
        "86": {
            "condition": "When filtering by template type",
            "operation": " use the column \"template_type_code\" instead of \"type\"."
        },
        "87": {
            "condition": "When comparing against the literal value CV",
            "operation": " use double quotes \"CV\" instead of single quotes."
        },
        "88": {
            "condition": "When referencing the templates table, When filtering by template type, When comparing against the literal value CV, When counting templates",
            "operation": " count all rows from the Templates table where template_type_code equals \"CV\"."
        },
        "89": {
            "condition": "When the question asks for \"template type codes\"",
            "operation": " output the exact column \"template_type_code\" from table \"Templates\"."
        },
        "90": {
            "condition": "When the question asks for \"number of templates for each\"",
            "operation": " count the number of rows using the canonical key from table \"Templates\" grouped by \"template_type_code\"."
        },
        "91": {
            "condition": "When choosing identifier delimiters",
            "operation": " use the exact case-sensitive table name \"Templates\" as shown in the schema, not \"templates\"."
        },
        "92": {
            "condition": "When the question asks for \"template type codes\", When the question asks for \"number of templates for each\", When choosing identifier delimiters, When grouping by \"template_type_code\"",
            "operation": " ensure the output column in the SELECT list matches the grouping column \"template_type_code\" exactly, not \"template_type\"."
        },
        "93": {
            "condition": "When answering about \"which template type code has most number of templates\"",
            "operation": " make sure the output order includes only template_type_code."
        },
        "94": {
            "condition": "When counting templates",
            "operation": " compute the number of rows using the count(*) function."
        },
        "95": {
            "condition": "When the question mentions \"most number\" or \"highest count\"",
            "operation": " rank rows by count(*) in descending order and keep the first 1 row."
        },
        "96": {
            "condition": "When answering about \"which template type code has most number of templates\", When counting templates, When the question mentions \"most number\" or \"highest count\", When grouping by template_type_code",
            "operation": " organize results by template_type_code and compute count(*) per group."
        },
        "97": {
            "condition": "When answering about \"the type code of the template type that the most templates belong to\"",
            "operation": " make sure the output order: template_type_code."
        },
        "98": {
            "condition": "When the question asks for \"count of templates\"",
            "operation": " compute the number of rows using the canonical key token for templates (e.g., Templates.template_type_code)."
        },
        "99": {
            "condition": "When the question says \"per template_type_code\"/\"by template_type_code\"",
            "operation": " organize results by template_type_code and compute requested aggregates per group."
        },
        "100": {
            "condition": "When answering about \"the type code of the template type that the most templates belong to\", When the question asks for \"count of templates\", When the question says \"per template_type_code\"/\"by template_type_code\", When the question mentions \"most templates\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "101": {
            "condition": "When answering about template type codes with less than three templates",
            "operation": " make sure the output order includes only template_type_code."
        },
        "102": {
            "condition": "When counting templates per template type code",
            "operation": " use the aggregate function count(*) directly in the HAVING condition rather than using an alias."
        },
        "103": {
            "condition": "When filtering for template type codes with less than three templates",
            "operation": " use the condition count(*) < 3 instead of count(*) > 3."
        },
        "104": {
            "condition": "When answering about template type codes with less than three templates, When counting templates per template type code, When filtering for template type codes with less than three templates, When referring to the templates table",
            "operation": " use the exact table name \"Templates\" with capital T instead of lowercase \"templates\"."
        },
        "105": {
            "condition": "When counting templates per template type",
            "operation": " use the exact column \"template_type_code\" for grouping and count all rows using COUNT(*)"
        },
        "106": {
            "condition": "When filtering for template types with fewer than 3 templates",
            "operation": " use the condition COUNT(*) < 3 in the HAVING clause"
        },
        "107": {
            "condition": "When counting templates per template type, When filtering for template types with fewer than 3 templates, When the question asks for template type codes",
            "operation": " output only the \"template_type_code\" column"
        },
        "108": {
            "condition": "When finding the smallest version number",
            "operation": " use MIN(\"version_number\") instead of MAX(\"version_number\")."
        },
        "109": {
            "condition": "When retrieving the template type code associated with the smallest version number",
            "operation": " include \"template_type_code\" in the output columns."
        },
        "110": {
            "condition": "When ordering results to find the smallest version number",
            "operation": " sort by \"version_number\" in ascending order."
        },
        "111": {
            "condition": "When finding the smallest version number, When retrieving the template type code associated with the smallest version number, When ordering results to find the smallest version number, When limiting results to only the smallest version number",
            "operation": " keep only the first row using LIMIT 1."
        },
        "112": {
            "condition": "When answering about template type code for a document",
            "operation": " select T1.template_type_code from the Templates table instead of from the documents table."
        },
        "113": {
            "condition": "When combining Templates and Documents tables",
            "operation": " join Templates AS T1 with Documents AS T2 using ON T1.template_id = T2.template_id to link template information to documents."
        },
        "114": {
            "condition": "When answering about template type code for a document, When combining Templates and Documents tables, When filtering by document name",
            "operation": " use T2.document_name = \"Data base\" instead of name = 'Data base' to match the exact document name literal with correct column reference."
        },
        "115": {
            "condition": "When answering about template type code for a document",
            "operation": " make sure the output order: T1.template_type_code"
        },
        "116": {
            "condition": "When the question mentions \"document named Data base\"",
            "operation": " \"Data base\" actually means T2.document_name = \"Data base\" in schema"
        },
        "117": {
            "condition": "When combining Templates (T1) and Documents (T2) for shared entities",
            "operation": " link rows where T1.template_id = T2.template_id; keep only matching pairs (inner match)"
        },
        "118": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms"
        },
        "119": {
            "condition": "When answering about template type code for a document, When the question mentions \"document named Data base\", When combining Templates (T1) and Documents (T2) for shared entities, When choosing identifier delimiters, When handling text literals",
            "operation": " do not change case, spacing, or punctuation - use exact literal \"Data base\" with double quotes"
        },
        "120": {
            "condition": "When answering about \"document names using templates with template type code BK\"",
            "operation": " make sure the output order: T2.document_name"
        },
        "121": {
            "condition": "When combining Templates as T1 and Documents as T2 for shared entities",
            "operation": " link rows where T1.template_id = T2.template_id and keep only matching pairs (inner match)."
        },
        "122": {
            "condition": "When filtering for template type code BK",
            "operation": " use T1.template_type_code = \"BK\" with exact double quotes around the literal value."
        },
        "123": {
            "condition": "When answering about \"document names using templates with template type code BK\", When combining Templates as T1 and Documents as T2 for shared entities, When filtering for template type code BK, When selecting document names",
            "operation": " reference the column as T2.document_name to specify the table source."
        },
        "124": {
            "condition": "When answering about \"names of documents that use templates with code BK\"",
            "operation": " make sure the output order: T2.document_name."
        },
        "125": {
            "condition": "When the question mentions \"documents\"",
            "operation": " use table \"Documents AS T2\" with exact alias T2."
        },
        "126": {
            "condition": "When the question mentions \"templates with code BK\"",
            "operation": " use table \"Templates AS T1\" with exact alias T1 and filter on T1.template_type_code = \"BK\" with exact literal \"BK\"."
        },
        "127": {
            "condition": "When answering about \"names of documents that use templates with code BK\", When the question mentions \"documents\", When the question mentions \"templates with code BK\", When combining T1 and T2 for shared template relationships",
            "operation": " link rows where T1.template_id = T2.template_id exactly as shown; keep only matching pairs (inner match)."
        },
        "128": {
            "condition": "When answering about \"template type codes and number of documents using each type\"",
            "operation": " make sure the output order: T1.template_type_code, count of documents per template type."
        },
        "129": {
            "condition": "When combining Templates (T1) and Documents (T2) for shared entities",
            "operation": " link rows where T1.template_id = T2.template_id exactly as shown; keep only matching pairs (inner match)."
        },
        "130": {
            "condition": "When the question asks for \"number of documents using each type\"",
            "operation": " compute the count of documents using T2.template_id as the counting key per template type group."
        },
        "131": {
            "condition": "When the question mentions \"template type codes\"",
            "operation": " \"template type codes\" actually means T1.template_type_code in schema."
        },
        "132": {
            "condition": "When answering about \"template type codes and number of documents using each type\", When combining Templates (T1) and Documents (T2) for shared entities, When the question asks for \"number of documents using each type\", When the question mentions \"template type codes\", When the question says \"per template type\"",
            "operation": " organize results by T1.template_type_code and compute document count per group."
        },
        "133": {
            "condition": "When combining Templates and Documents tables",
            "operation": " link rows where T1.template_id equals T2.template_id using an inner join to only include matching pairs."
        },
        "134": {
            "condition": "When counting documents per template type",
            "operation": " count all joined rows using count(*) rather than counting specific columns."
        },
        "135": {
            "condition": "When outputting results",
            "operation": " show template_type_code and the count without column aliases."
        },
        "136": {
            "condition": "When combining Templates and Documents tables, When counting documents per template type, When outputting results, When referencing column identifiers",
            "operation": " use lowercase template_type_code and template_id to match the schema's naming convention."
        },
        "137": {
            "condition": "When answering about \"different template type codes and how many documents use each type\"",
            "operation": " make sure to join Templates table as T1 to Documents table as T2 on T1.template_id = T2.template_id instead of querying only one table."
        },
        "138": {
            "condition": "When selecting template type codes",
            "operation": " use T1.template_type_code in both SELECT and GROUP BY instead of unqualified template_type_code."
        },
        "139": {
            "condition": "When counting documents per template type",
            "operation": " count using the join result without column aliases instead of using document_count alias."
        },
        "140": {
            "condition": "When answering about \"different template type codes and how many documents use each type\", When selecting template type codes, When counting documents per template type, When producing the final result",
            "operation": " do not include ORDER BY clause as the question does not require sorting."
        },
        "141": {
            "condition": "When answering about \"template type code used by most documents\"",
            "operation": " join Templates as T1 to Documents as T2 on T1.template_id = T2.template_id to link template information with document records."
        },
        "142": {
            "condition": "When counting documents per template type",
            "operation": " count the number of rows using the canonical key from the join."
        },
        "143": {
            "condition": "When grouping by template type",
            "operation": " organize results by T1.template_type_code to get counts per template type."
        },
        "144": {
            "condition": "When finding the most used template type",
            "operation": " order the results by count in descending order to identify the highest count."
        },
        "145": {
            "condition": "When answering about \"template type code used by most documents\", When counting documents per template type, When grouping by template type, When finding the most used template type, When selecting output columns",
            "operation": " return only T1.template_type_code as the result."
        },
        "146": {
            "condition": "When answering about \"most commonly used template type in documents\"",
            "operation": " make sure the output order: T1.template_type_code"
        },
        "147": {
            "condition": "When combining Templates table (T1) and Documents table (T2)",
            "operation": " link rows where T1.template_id = T2.template_id and keep only matching pairs (inner match)"
        },
        "148": {
            "condition": "When counting documents per template type",
            "operation": " compute the number of rows using the join relationship between T1 and T2"
        },
        "149": {
            "condition": "When the question asks for the most common template type",
            "operation": " rank template types by document count in descending order and keep the first 1 row"
        },
        "150": {
            "condition": "When answering about \"most commonly used template type in documents\", When combining Templates table (T1) and Documents table (T2), When counting documents per template type, When the question asks for the most common template type, When selecting template_type_code",
            "operation": " use T1.template_type_code with table alias qualification instead of unqualified template_type_code"
        },
        "151": {
            "condition": "When answering about \"template type codes that are not used by any document\"",
            "operation": " use an EXCEPT set operation between two queries instead of GROUP BY with HAVING COUNT(*) > 0."
        },
        "152": {
            "condition": "When identifying template types from the Templates table",
            "operation": " select template_type_code from Templates AS T1."
        },
        "153": {
            "condition": "When identifying template types used in documents",
            "operation": " select template_type_code from Templates AS T1 JOIN Documents AS T2 ON T1.template_id = T2.template_id."
        },
        "154": {
            "condition": "When combining tables for template usage",
            "operation": " link rows where T1.template_id = T2.template_id exactly and keep only matching pairs (inner match)."
        },
        "155": {
            "condition": "When answering about \"template type codes that are not used by any document\", When identifying template types from the Templates table, When identifying template types used in documents, When combining tables for template usage, When finding unused template types",
            "operation": " compute the set difference between all template_type_code values from Templates and those used in Documents."
        },
        "156": {
            "condition": "When answering about \"codes of template types that are not used for any document\"",
            "operation": " make sure the output order: template_type_code."
        },
        "157": {
            "condition": "When the question mentions \"template types\"",
            "operation": " \"template types\" actually means \"Templates table in schema\"."
        },
        "158": {
            "condition": "When the question mentions \"not used for any document\"",
            "operation": " use EXCEPT set operation to find template_type_code values that exist in Templates but not in Documents."
        },
        "159": {
            "condition": "When combining T1 (Templates) and T2 (Documents) for shared entities",
            "operation": " link rows where T1.template_id = T2.template_id; keep only matching pairs (inner match)."
        },
        "160": {
            "condition": "When answering about \"codes of template types that are not used for any document\", When the question mentions \"template types\", When the question mentions \"not used for any document\", When combining T1 (Templates) and T2 (Documents) for shared entities, When producing output",
            "operation": " do not reorder columns beyond template_type_code as required by the question."
        },
        "161": {
            "condition": "When answering about \"template type codes and descriptions\"",
            "operation": " make sure the output order: template_type_code, template_type_description."
        },
        "162": {
            "condition": "When the question mentions \"template type codes\"",
            "operation": " \"template type codes\" actually means \"template_type_code in Ref_template_types\"."
        },
        "163": {
            "condition": "When the question mentions \"descriptions\"",
            "operation": " \"descriptions\" actually means \"template_type_description in Ref_template_types\"."
        },
        "164": {
            "condition": "When answering about \"template type codes and descriptions\", When the question mentions \"template type codes\", When the question mentions \"descriptions\", When selecting from the template types table",
            "operation": " use table \"Ref_template_types\" instead of \"template_types\"."
        },
        "165": {
            "condition": "When answering about \"type codes and descriptions for all template types\"",
            "operation": " use table \"Ref_template_types\" as the base table T1."
        },
        "166": {
            "condition": "When selecting the type code column",
            "operation": " use \"template_type_code\" from T1 instead of \"type_code\"."
        },
        "167": {
            "condition": "When selecting the description column",
            "operation": " use \"template_type_description\" from T1 instead of \"description\"."
        },
        "168": {
            "condition": "When answering about \"type codes and descriptions for all template types\", When selecting the type code column, When selecting the description column, When retrieving all records",
            "operation": " do not apply any null filtering condition on type codes."
        },
        "169": {
            "condition": "When referencing the template types table",
            "operation": " use \"Ref_template_types\" instead of \"template_types\" as the exact table name."
        },
        "170": {
            "condition": "When filtering for template type code \"AD\"",
            "operation": " use double quotes \"AD\" instead of single quotes 'AD' for the exact string literal."
        },
        "171": {
            "condition": "When referencing the template types table, When filtering for template type code \"AD\", When selecting template type descriptions",
            "operation": " use the column \"template_type_description\" from the \"Ref_template_types\" table."
        },
        "172": {
            "condition": "When answering about template type descriptions",
            "operation": " make sure the output order: template_type_description."
        },
        "173": {
            "condition": "When the question mentions \"template type with the code AD\"",
            "operation": " \"AD\" actually means \"template_type_code = \\\"AD\\\"\" in schema."
        },
        "174": {
            "condition": "When answering about template type descriptions, When the question mentions \"template type with the code AD\", When selecting from template types",
            "operation": " use table \"Ref_template_types\" instead of \"template_types\"."
        },
        "175": {
            "condition": "When answering about template type code for a specific template type description",
            "operation": " reference the table \"Ref_template_types\" instead of \"template_types\""
        },
        "176": {
            "condition": "When answering about template type code for a specific template type description, When filtering by template type description \"Book\"",
            "operation": " use double quotes \"Book\" instead of single quotes 'Book' for the string literal"
        },
        "177": {
            "condition": "When answering about \"Return the type code of the template type with the description 'Book'\"",
            "operation": " make sure the output order: template_type_code."
        },
        "178": {
            "condition": "When the question mentions \"type code\"",
            "operation": " \"type code\" actually means \"template_type_code in schema\"."
        },
        "179": {
            "condition": "When the question mentions \"template type\"",
            "operation": " \"template type\" actually means \"Ref_template_types in schema\"."
        },
        "180": {
            "condition": "When the question mentions \"description\"",
            "operation": " \"description\" actually means \"template_type_description in schema\"."
        },
        "181": {
            "condition": "When filtering for the literal \"Book\"",
            "operation": " use exact string literal \"Book\" with double quotes as shown in the schema."
        },
        "182": {
            "condition": "When answering about \"Return the type code of the template type with the description 'Book'\", When the question mentions \"type code\", When the question mentions \"template type\", When the question mentions \"description\", When filtering for the literal \"Book\", When selecting from the template types table",
            "operation": " use table name Ref_template_types instead of template_types."
        },
        "183": {
            "condition": "When answering about \"distinct template type descriptions for templates ever used by any document\"",
            "operation": " make sure the output order: T1.template_type_description."
        },
        "184": {
            "condition": "When the question mentions \"template type descriptions\"",
            "operation": " \"template type descriptions\" actually means \"T1.template_type_description in schema\"."
        },
        "185": {
            "condition": "When combining T1 (Ref_template_types) and T2 (Templates) for shared entities",
            "operation": " link rows where T1.template_type_code = T2.template_type_code exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "186": {
            "condition": "When combining T2 (Templates) and T3 (Documents) for shared entities",
            "operation": " link rows where T2.Template_ID = T3.template_ID exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "187": {
            "condition": "When answering about \"distinct template type descriptions for templates ever used by any document\", When the question mentions \"template type descriptions\", When combining T1 (Ref_template_types) and T2 (Templates) for shared entities, When combining T2 (Templates) and T3 (Documents) for shared entities, When the question asks for \"distinct template type descriptions\"",
            "operation": " compute the number of unique values of the exact token T1.template_type_description."
        },
        "188": {
            "condition": "When answering about \"different descriptions for templates used in a document\"",
            "operation": " make sure the output order: T1.template_type_description."
        },
        "189": {
            "condition": "When the question mentions \"descriptions for templates\"",
            "operation": " \"descriptions\" actually means \"T1.template_type_description\" in schema."
        },
        "190": {
            "condition": "When combining T1, T2, and T3 for shared entities",
            "operation": " link rows where T1.template_type_code = T2.template_type_code and T2.Template_ID = T3.template_ID; keep only matching pairs (inner match)."
        },
        "191": {
            "condition": "When answering about \"different descriptions for templates used in a document\", When the question mentions \"descriptions for templates\", When combining T1, T2, and T3 for shared entities, When the question asks for \"different descriptions\"",
            "operation": " compute the number of unique values of T1.template_type_description."
        },
        "192": {
            "condition": "When the question asks for template ids with template type description \"Presentation\"",
            "operation": " join Ref_template_types AS T1 and Templates AS T2 using T1.template_type_code = T2.template_type_code."
        },
        "193": {
            "condition": "When filtering for template type description",
            "operation": " use T1.template_type_description = \"Presentation\" exactly as specified."
        },
        "194": {
            "condition": "When selecting template ids",
            "operation": " use T2.template_id with the table alias to specify the source table."
        },
        "195": {
            "condition": "When the question asks for template ids with template type description \"Presentation\", When filtering for template type description, When selecting template ids, When combining T1 and T2",
            "operation": " perform an inner match where T1.template_type_code equals T2.template_type_code to link template types with their corresponding templates."
        },
        "196": {
            "condition": "When answering about templates with description 'Presentation'",
            "operation": " make sure the output order: T2.template_id."
        },
        "197": {
            "condition": "When the question mentions 'templates'",
            "operation": " use Templates AS T2 as the main entity table."
        },
        "198": {
            "condition": "When the question mentions 'description'",
            "operation": " \"description\" actually means \"template_type_description in Ref_template_types table\"."
        },
        "199": {
            "condition": "When combining Ref_template_types AS T1 and Templates AS T2 for shared template types",
            "operation": " link rows where T1.template_type_code = T2.template_type_code exactly; keep only matching pairs (inner match)."
        },
        "200": {
            "condition": "When answering about templates with description 'Presentation', When the question mentions 'templates', When the question mentions 'description', When combining Ref_template_types AS T1 and Templates AS T2 for shared template types, When filtering for 'Presentation'",
            "operation": " use exact literal \"Presentation\" with double quotes for T1.template_type_description."
        },
        "201": {
            "condition": "When counting paragraphs",
            "operation": " use the \"Paragraphs\" table as the data source instead of the \"sentences\" table."
        },
        "202": {
            "condition": "When counting paragraphs, When the question asks to count the number of paragraphs",
            "operation": " count all records from the \"Paragraphs\" table."
        },
        "203": {
            "condition": "When answering about \"paragraphs for document with name 'Summer Show'\"",
            "operation": " combine tables paragraphs (T1) and Documents (T2) using the join condition T1.document_ID = T2.document_ID, keeping only matching pairs (inner match)."
        },
        "204": {
            "condition": "When the question mentions \"document with name 'Summer Show'\"",
            "operation": " apply the filter T2.document_name = 'Summer Show' exactly as specified (case-sensitive)."
        },
        "205": {
            "condition": "When answering about \"paragraphs for document with name 'Summer Show'\", When the question mentions \"document with name 'Summer Show'\", When the question asks for \"how many paragraphs\"",
            "operation": " count the number of rows using the canonical key from the paragraphs table after applying the join and filter conditions."
        },
        "206": {
            "condition": "When counting paragraphs for a specific document",
            "operation": " join the paragraphs table (T1) with the Documents table (T2) using the condition T1.document_ID = T2.document_ID to establish the relationship between paragraphs and documents."
        },
        "207": {
            "condition": "When filtering by document name 'Summer Show'",
            "operation": " apply the filter document_name = 'Summer Show' to the Documents table (T2) instead of the paragraphs table, since document_name is a column of Documents."
        },
        "208": {
            "condition": "When counting paragraphs for a specific document, When filtering by document name 'Summer Show', When counting paragraphs",
            "operation": " count the number of rows in the paragraphs table (T1) that are linked to documents matching the specified name condition."
        },
        "209": {
            "condition": "When selecting columns for paragraph details",
            "operation": " use \"other_details\" instead of all columns (*)."
        },
        "210": {
            "condition": "When filtering for text containing 'Korea'",
            "operation": " use \"paragraph_text\" column instead of \"text\" column."
        },
        "211": {
            "condition": "When selecting columns for paragraph details, When filtering for text containing 'Korea', When pattern matching for 'Korea'",
            "operation": " use LIKE operator with lowercase 'korea' for case-insensitive matching instead of exact case-sensitive matching with uppercase 'Korea'."
        },
        "212": {
            "condition": "When selecting details about paragraphs",
            "operation": " return only the \"other_details\" column instead of all columns."
        },
        "213": {
            "condition": "When filtering for text containing 'Korea'",
            "operation": " use the exact column name \"paragraph_text\" instead of \"text\"."
        },
        "214": {
            "condition": "When selecting details about paragraphs, When filtering for text containing 'Korea', When matching the text pattern 'Korea'",
            "operation": " use case-sensitive matching with pattern 'korea' instead of case-insensitive matching with pattern '%Korea%'."
        },
        "215": {
            "condition": "When the question asks for details about paragraphs containing specific text",
            "operation": " use the exact table name \"Paragraphs\" and column name \"other_details\" as shown in the schema."
        },
        "216": {
            "condition": "When searching for text patterns in \"paragraph_text\"",
            "operation": " use lowercase 'like' operator with exact literal 'korea' (case-insensitive matching) and ensure no trailing spaces in the search pattern."
        },
        "217": {
            "condition": "When the question asks for details about paragraphs containing specific text, When searching for text patterns in \"paragraph_text\", When the question mentions \"details for the paragraph\"",
            "operation": " return the \"other_details\" column from the matching rows."
        },
        "218": {
            "condition": "When answering about \"paragraph ids and texts for the document with name 'Welcome to NY'\"",
            "operation": " make sure the output order: paragraph_id, paragraph_text."
        },
        "219": {
            "condition": "When the question mentions \"document with name 'Welcome to NY'\"",
            "operation": " filter on T2.Document_Name = 'Welcome to NY' exactly as specified."
        },
        "220": {
            "condition": "When combining paragraphs table T1 and Documents table T2",
            "operation": " link rows where T1.document_id = T2.document_id and keep only matching pairs (inner match)."
        },
        "221": {
            "condition": "When answering about \"paragraph ids and texts for the document with name 'Welcome to NY'\", When the question mentions \"document with name 'Welcome to NY'\", When combining paragraphs table T1 and Documents table T2, When the question asks for \"paragraph texts\"",
            "operation": " use T1.paragraph_text instead of text to use the correct column name."
        },
        "222": {
            "condition": "When answering about \"paragraphs in a document titled 'Welcome to NY'\"",
            "operation": " make sure to join tables T1 (paragraphs) and T2 (Documents) using T1.document_id = T2.document_id to properly link paragraphs to their documents."
        },
        "223": {
            "condition": "When the question mentions \"texts of paragraphs\"",
            "operation": " \"text\" actually means \"T1.paragraph_text\" in the schema."
        },
        "224": {
            "condition": "When filtering for document title",
            "operation": " use T2.Document_Name = 'Welcome to NY' with exact case and spacing to match the specified document name."
        },
        "225": {
            "condition": "When selecting output columns",
            "operation": " include T1.paragraph_id and T1.paragraph_text in that order."
        },
        "226": {
            "condition": "When answering about \"paragraphs in a document titled 'Welcome to NY'\", When the question mentions \"texts of paragraphs\", When filtering for document title, When selecting output columns, When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.document_id = T2.document_id exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "227": {
            "condition": "When the question asks for paragraph texts",
            "operation": " select \"paragraph_text\" from table T1 instead of \"text\"."
        },
        "228": {
            "condition": "When joining tables for document relationships",
            "operation": " combine T1 (paragraphs) and T2 (Documents) using LEFT JOIN where T1.document_id equals T2.document_id."
        },
        "229": {
            "condition": "When the question asks for paragraph texts, When joining tables for document relationships, When filtering for document name \"Customer reviews\"",
            "operation": " use T2.document_name = \"Customer reviews\" instead of document_title = 'Customer reviews'."
        },
        "230": {
            "condition": "When answering about \"paragraph texts for the document with the name 'Customer reviews'\"",
            "operation": " make sure the output order: T1.paragraph_text."
        },
        "231": {
            "condition": "When the question mentions \"document with the name 'Customer reviews'\"",
            "operation": " \"name\" actually means \"T2.document_name in schema\" and use the exact literal \"Customer reviews\"."
        },
        "232": {
            "condition": "When combining T1 (Paragraphs) and T2 (Documents) for shared entities",
            "operation": " link rows where T1.document_id = T2.document_id; keep only matching pairs (inner match)."
        },
        "233": {
            "condition": "When answering about \"paragraph texts for the document with the name 'Customer reviews'\", When the question mentions \"document with the name 'Customer reviews'\", When combining T1 (Paragraphs) and T2 (Documents) for shared entities, When selecting paragraph text",
            "operation": " reference T1.paragraph_text from the Paragraphs table instead of directly selecting from documents table."
        },
        "234": {
            "condition": "When answering about \"document ids, names and the number of paragraphs in each document\"",
            "operation": " make sure the output order: document_id, document_name, count of paragraphs."
        },
        "235": {
            "condition": "When combining Paragraphs as T1 and Documents as T2 for shared entities",
            "operation": " link rows where T1.document_id = T2.document_id exactly as shown; keep only matching pairs (inner match)."
        },
        "236": {
            "condition": "When the question asks for \"count of paragraphs\"",
            "operation": " compute the number of rows using count(*) from the Paragraphs table."
        },
        "237": {
            "condition": "When the question asks for document names",
            "operation": " use T2.document_name instead of name."
        },
        "238": {
            "condition": "When answering about \"document ids, names and the number of paragraphs in each document\", When combining Paragraphs as T1 and Documents as T2 for shared entities, When the question asks for \"count of paragraphs\", When the question asks for document names, When grouping by document",
            "operation": " organize results by T1.document_id only, not both document_id and name."
        },
        "239": {
            "condition": "When combining documents and paragraphs tables",
            "operation": " link rows where T1.document_id equals T2.document_id and keep only matching pairs (inner match)."
        },
        "240": {
            "condition": "When counting paragraphs per document",
            "operation": " count all rows using count(*) rather than counting specific column values."
        },
        "241": {
            "condition": "When grouping by document identifier",
            "operation": " group by T1.document_id only since document_name is functionally dependent on document_id."
        },
        "242": {
            "condition": "When selecting output columns",
            "operation": " include T1.document_id, T2.document_name, and the count of paragraphs."
        },
        "243": {
            "condition": "When combining documents and paragraphs tables, When counting paragraphs per document, When grouping by document identifier, When selecting output columns, When the question asks for \"number of paragraphs in each\"",
            "operation": " do not include an alias for the count column."
        },
        "244": {
            "condition": "When selecting document identifiers and names",
            "operation": " use T1.document_id and T2.document_name instead of document_id and name."
        },
        "245": {
            "condition": "When combining Paragraphs and Documents tables",
            "operation": " use FROM Paragraphs AS T1 JOIN Documents AS T2 with join condition ON T1.document_id = T2.document_id to link matching rows."
        },
        "246": {
            "condition": "When counting paragraphs per document",
            "operation": " add GROUP BY T1.document_id to organize results by document."
        },
        "247": {
            "condition": "When ordering by paragraph count",
            "operation": " use count(*) DESC instead of paragraph_count DESC to rank documents by actual paragraph count."
        },
        "248": {
            "condition": "When selecting document identifiers and names, When combining Paragraphs and Documents tables, When counting paragraphs per document, When ordering by paragraph count, When finding the document with greatest number of paragraphs",
            "operation": " take only the top ranked document after ordering by paragraph count in descending order."
        },
        "249": {
            "condition": "When answering about \"document with the most paragraphs\"",
            "operation": " make sure the output order: T1.document_id, T2.document_name."
        },
        "250": {
            "condition": "When the question mentions \"id\"",
            "operation": " \"id\" actually means \"T1.document_id in schema\"."
        },
        "251": {
            "condition": "When the question mentions \"name\"",
            "operation": " \"name\" actually means \"T2.document_name in schema\"."
        },
        "252": {
            "condition": "When combining T1 (Paragraphs) and T2 (Documents) for shared entities",
            "operation": " link rows where T1.document_id = T2.document_id; keep only matching pairs (inner match)."
        },
        "253": {
            "condition": "When the question asks for \"count of paragraphs per document\"",
            "operation": " organize results by T1.document_id and compute count(*) per group."
        },
        "254": {
            "condition": "When answering about \"document with the most paragraphs\", When the question mentions \"id\", When the question mentions \"name\", When combining T1 (Paragraphs) and T2 (Documents) for shared entities, When the question asks for \"count of paragraphs per document\", When the question mentions \"most paragraphs\" or \"highest paragraph count\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "255": {
            "condition": "When answering about \"document id with least number of paragraphs\"",
            "operation": " make sure the output order: document_id."
        },
        "256": {
            "condition": "When the question asks for \"least number of paragraphs\" per document",
            "operation": " organize results by document_id and compute count of paragraphs per group."
        },
        "257": {
            "condition": "When counting paragraphs per document",
            "operation": " compute the number of rows using count(*) for each document_id group."
        },
        "258": {
            "condition": "When answering about \"document id with least number of paragraphs\", When the question asks for \"least number of paragraphs\" per document, When counting paragraphs per document, When finding the document with the minimum paragraph count",
            "operation": " rank rows by paragraph count in ascending order and keep the first 1 row."
        },
        "259": {
            "condition": "When counting paragraphs per document",
            "operation": " count the number of rows using the canonical key for paragraphs (count(*)) instead of using an alias."
        },
        "260": {
            "condition": "When ordering by paragraph count",
            "operation": " reference the aggregate function count(*) directly in the ORDER BY clause instead of using an alias."
        },
        "261": {
            "condition": "When selecting output columns",
            "operation": " include only document_id in the SELECT list and omit any alias for the count."
        },
        "262": {
            "condition": "When counting paragraphs per document, When ordering by paragraph count, When selecting output columns, When finding the document with the least number of paragraphs",
            "operation": " order by count(*) in ascending order and keep only the first result."
        },
        "263": {
            "condition": "When answering about \"the document with the fewest paragraphs\"",
            "operation": " make sure the output order: document_id."
        },
        "264": {
            "condition": "When counting paragraphs per document",
            "operation": " group by \"document_id\" and compute count(*) for each group."
        },
        "265": {
            "condition": "When finding the document with the fewest paragraphs",
            "operation": " order the results by count(*) in ascending order and keep only the first row."
        },
        "266": {
            "condition": "When answering about \"the document with the fewest paragraphs\", When counting paragraphs per document, When finding the document with the fewest paragraphs, When selecting from the Paragraphs table",
            "operation": " use \"document_id\" as the output column instead of \"id\" from documents table."
        },
        "267": {
            "condition": "When answering about \"document id with 1 to 2 paragraphs\"",
            "operation": " make sure the output order: document_id."
        },
        "268": {
            "condition": "When counting paragraphs per document",
            "operation": " compute the number of paragraphs using count(*) grouped by document_id."
        },
        "269": {
            "condition": "When filtering for documents with exactly 1 or 2 paragraphs",
            "operation": " use a condition that keeps only groups where the paragraph count is between 1 and 2 inclusive."
        },
        "270": {
            "condition": "When answering about \"document id with 1 to 2 paragraphs\", When counting paragraphs per document, When filtering for documents with exactly 1 or 2 paragraphs, When the question mentions \"paragraphs\"",
            "operation": " use the Paragraphs table instead of the documents table to count actual paragraph entities."
        },
        "271": {
            "condition": "When the question asks for documents containing multiple specific paragraph texts",
            "operation": " use INTERSECT to find document IDs that satisfy all text conditions rather than OR which finds documents satisfying any condition."
        },
        "272": {
            "condition": "When referring to paragraph text content",
            "operation": " use the exact column name \"paragraph_text\" instead of \"text\"."
        },
        "273": {
            "condition": "When referencing the paragraphs table",
            "operation": " use the exact table name \"Paragraphs\" with proper capitalization."
        },
        "274": {
            "condition": "When the question asks for documents containing multiple specific paragraph texts, When referring to paragraph text content, When referencing the paragraphs table, When finding documents containing both 'Brazil' and 'Ireland'",
            "operation": " structure the query as two separate SELECT statements that each filter for one text value, then intersect the results to get documents containing both texts."
        }
    },
    "course_teach": {
        "0": {
            "condition": "When answering about \"how many teachers\"",
            "operation": " make sure to count records from the \"teacher\" table instead of the \"students\" table."
        },
        "1": {
            "condition": "When answering about \"how many teachers\", When counting entities",
            "operation": " use the canonical key for counting (typically the primary key of the table) to count the number of teachers."
        },
        "2": {
            "condition": "When answering about \"total count of teachers\"",
            "operation": " make sure to count from the \"teacher\" table instead of the \"students\" table."
        },
        "3": {
            "condition": "When answering about \"total count of teachers\", When counting teachers",
            "operation": " use the canonical key for counting entities from the teacher table."
        },
        "4": {
            "condition": "When the question mentions \"teachers\"",
            "operation": " use the exact table name \"teacher\" instead of \"teachers\"."
        },
        "5": {
            "condition": "When selecting teacher names",
            "operation": " use the exact column name \"Name\" instead of \"name\"."
        },
        "6": {
            "condition": "When the question mentions \"teachers\", When selecting teacher names, When ordering by age in ascending order",
            "operation": " use the exact column name \"Age\" and apply ascending (ASC) ordering instead of descending (DESC)."
        },
        "7": {
            "condition": "When the question asks about teachers",
            "operation": " use the table \"teacher\" instead of \"teachers\" to match the schema exactly."
        },
        "8": {
            "condition": "When selecting teacher names",
            "operation": " use the column \"Name\" with exact case sensitivity as shown in the schema."
        },
        "9": {
            "condition": "When the question asks about teachers, When selecting teacher names, When ordering by age",
            "operation": " use the column \"Age\" and sort in ascending (ASC) order instead of descending to match the question requirement."
        },
        "10": {
            "condition": "When the question asks for \"age and hometown of teachers\"",
            "operation": " select columns \"Age\" and \"Hometown\" from table \"teacher\"."
        },
        "11": {
            "condition": "When referring to the teacher entity",
            "operation": " use the exact table name \"teacher\" (not \"teachers\")."
        },
        "12": {
            "condition": "When the question asks for \"age and hometown of teachers\", When referring to the teacher entity, When producing output",
            "operation": " maintain the order of columns as \"Age\" followed by \"Hometown\" as specified in the question."
        },
        "13": {
            "condition": "When answering about \"age and hometown of every teacher\"",
            "operation": " make sure the output order: Age, Hometown."
        },
        "14": {
            "condition": "When the question mentions \"teacher\"",
            "operation": " \"teacher\" actually means table \"teacher\" in schema."
        },
        "15": {
            "condition": "When answering about \"age and hometown of every teacher\", When the question mentions \"teacher\", When selecting columns for teacher information",
            "operation": " use exact column tokens \"Age\" and \"Hometown\" from table \"teacher\"."
        },
        "16": {
            "condition": "When answering about \"teachers whose hometown is not Little Lever Urban District\"",
            "operation": " make sure the output order: name."
        },
        "17": {
            "condition": "When the question mentions \"teachers\"",
            "operation": " \"teachers\" actually means \"teacher\" in schema."
        },
        "18": {
            "condition": "When answering about \"teachers whose hometown is not Little Lever Urban District\", When the question mentions \"teachers\", When filtering for hometown not equal to \"Little Lever Urban District\"",
            "operation": " use inequality comparison != with exact literal \"Little Lever Urban District\" (case-sensitive)."
        },
        "19": {
            "condition": "When the question mentions \"hometown\"",
            "operation": " \"hometown\" actually means \"Hometown\" in schema."
        },
        "20": {
            "condition": "When the question specifies \"not 'Little Lever Urban District'\"",
            "operation": " use the exact literal 'little lever urban district' with lowercase formatting for string comparison."
        },
        "21": {
            "condition": "When the question mentions \"hometown\", When the question specifies \"not 'Little Lever Urban District'\", When answering about \"name of teachers\"",
            "operation": " make sure the output order: Name."
        },
        "22": {
            "condition": "When the question asks about teachers",
            "operation": " use table \"teacher\" instead of \"teachers\" as the data source."
        },
        "23": {
            "condition": "When filtering for teachers whose hometown is not \"Little Lever Urban District\"",
            "operation": " use inequality comparison != \"little lever urban district\" instead of equality comparison."
        },
        "24": {
            "condition": "When the question asks about teachers, When filtering for teachers whose hometown is not \"Little Lever Urban District\", When handling text literals",
            "operation": " preserve the exact case and spacing as \"little lever urban district\" (all lowercase) as shown in the amends, not the mixed case from the question."
        },
        "25": {
            "condition": "When choosing SQL keywords",
            "operation": " use lowercase 'select', 'from', and 'where' instead of uppercase versions to maintain consistent casing throughout the query."
        },
        "26": {
            "condition": "When referring to column names",
            "operation": " use lowercase 'name' instead of uppercase 'Name' and lowercase 'hometown' instead of uppercase 'Hometown' to match the schema's column naming convention."
        },
        "27": {
            "condition": "When choosing SQL keywords, When referring to column names, When comparing string literals",
            "operation": " use lowercase 'little lever urban district' instead of capitalized 'Little Lever Urban District' for case consistency in string comparison."
        },
        "28": {
            "condition": "When the question asks for teachers aged either 32 or 33",
            "operation": " use OR between the age conditions instead of AND to find teachers who meet either condition."
        },
        "29": {
            "condition": "When referencing the teacher table",
            "operation": " use the exact table name \"teacher\" instead of \"teachers\"."
        },
        "30": {
            "condition": "When selecting the name column",
            "operation": " use the exact column name \"Name\" with proper casing instead of lowercase \"name\"."
        },
        "31": {
            "condition": "When filtering by age",
            "operation": " use the exact column name \"Age\" with proper casing instead of lowercase \"age\"."
        },
        "32": {
            "condition": "When the question asks for teachers aged either 32 or 33, When referencing the teacher table, When selecting the name column, When filtering by age, When specifying age values",
            "operation": " use the exact literals \"32\" and \"33\" as shown in the schema sample values."
        },
        "33": {
            "condition": "When the question asks about teachers",
            "operation": " use the table \"teacher\" instead of \"teachers\" to match the schema."
        },
        "34": {
            "condition": "When selecting teacher names",
            "operation": " use the column \"Name\" instead of \"name\" to match the schema."
        },
        "35": {
            "condition": "When filtering by age",
            "operation": " use the column \"Age\" instead of \"age\" to match the schema."
        },
        "36": {
            "condition": "When the question asks about teachers, When selecting teacher names, When filtering by age, When filtering for ages 32 or 33",
            "operation": " maintain the exact condition \"Age = 32 OR Age = 33\" to preserve the original logic."
        },
        "37": {
            "condition": "When the question asks about \"teachers\"",
            "operation": " use the exact table name \"teacher\" instead of \"teachers\" to match the schema."
        },
        "38": {
            "condition": "When selecting column names",
            "operation": " use exact case-sensitive identifiers \"Hometown\" and \"Age\" instead of lowercase versions."
        },
        "39": {
            "condition": "When the question asks about \"teachers\", When selecting column names, When finding the youngest teacher",
            "operation": " order by \"Age\" in ascending order and take the first result to get the minimum age value."
        },
        "40": {
            "condition": "When answering about \"the youngest teacher\"",
            "operation": " make sure the output order: Hometown."
        },
        "41": {
            "condition": "When the question asks for \"where is the youngest teacher\"",
            "operation": " \"where\" actually means \"Hometown in schema\"."
        },
        "42": {
            "condition": "When the question mentions \"youngest\"",
            "operation": " rank rows by Age in ascending order and keep the first 1 row."
        },
        "43": {
            "condition": "When answering about \"the youngest teacher\", When the question asks for \"where is the youngest teacher\", When the question mentions \"youngest\", When selecting from the teacher table",
            "operation": " use the exact table name \"teacher\" (not \"teachers\")."
        },
        "44": {
            "condition": "When the question asks about teachers' hometowns",
            "operation": " use the table \"teacher\" (not \"teachers\") as the base table T1."
        },
        "45": {
            "condition": "When counting teachers per hometown",
            "operation": " group by the exact column \"Hometown\" (capitalized) from table T1."
        },
        "46": {
            "condition": "When showing the number of teachers from each hometown",
            "operation": " count using the canonical key for teachers (implied by grouping on hometown) rather than counting individual teacher records."
        },
        "47": {
            "condition": "When the question asks about teachers' hometowns, When counting teachers per hometown, When showing the number of teachers from each hometown, When producing output",
            "operation": " show \"Hometown\" first followed by the count of teachers, maintaining this column order."
        },
        "48": {
            "condition": "When the question asks about \"hometown\"",
            "operation": " use the exact column token \"Hometown\" from the teacher table."
        },
        "49": {
            "condition": "When counting teachers per hometown",
            "operation": " group by \"Hometown\" and count using the canonical key for teachers (teacher_id or equivalent)."
        },
        "50": {
            "condition": "When the question asks \"how many teachers are there\" per group",
            "operation": " compute the count of teachers for each hometown group."
        },
        "51": {
            "condition": "When the question asks about \"hometown\", When counting teachers per hometown, When the question asks \"how many teachers are there\" per group, When choosing table references",
            "operation": " use the exact table name \"teacher\" as specified in the schema, not variations like \"teachers\"."
        },
        "52": {
            "condition": "When the question asks about \"teachers\"",
            "operation": " use the table name \"teacher\" exactly as specified in the schema."
        },
        "53": {
            "condition": "When the question mentions \"hometown\"",
            "operation": " use the column name \"Hometown\" with exact capitalization as shown in the schema."
        },
        "54": {
            "condition": "When counting teachers",
            "operation": " count all rows using COUNT(*) and do not use aliases for the count in ORDER BY clauses."
        },
        "55": {
            "condition": "When the question asks about \"teachers\", When the question mentions \"hometown\", When counting teachers, When finding the most common value",
            "operation": " group by the exact column \"Hometown\", count occurrences, order by the count in descending order, and take only the top result."
        },
        "56": {
            "condition": "When the question asks for \"most common hometown of teachers\"",
            "operation": " identify the hometown with the highest count of teachers."
        },
        "57": {
            "condition": "When counting teachers per hometown",
            "operation": " count the number of rows using the canonical key for teachers (implied by GROUP BY Hometown)."
        },
        "58": {
            "condition": "When ranking for \"most common\"",
            "operation": " order the groups by count in descending order."
        },
        "59": {
            "condition": "When selecting only the top result",
            "operation": " keep only the first row after ordering."
        },
        "60": {
            "condition": "When the question asks for \"most common hometown of teachers\", When counting teachers per hometown, When ranking for \"most common\", When selecting only the top result, When the output should show only the hometown value",
            "operation": " return only the Hometown column without the count value."
        },
        "61": {
            "condition": "When answering about \"most common hometowns for teachers\"",
            "operation": " make sure the output order: Hometown, COUNT(*)"
        },
        "62": {
            "condition": "When the question mentions \"teachers\"",
            "operation": " \"teachers\" actually means \"teacher\" in schema"
        },
        "63": {
            "condition": "When the question mentions \"hometowns\"",
            "operation": " \"hometowns\" actually means \"Hometown\" in schema"
        },
        "64": {
            "condition": "When the question asks for \"most common\"",
            "operation": " rank rows by COUNT(*) in descending direction and keep the first 1 row"
        },
        "65": {
            "condition": "When answering about \"most common hometowns for teachers\", When the question mentions \"teachers\", When the question mentions \"hometowns\", When the question asks for \"most common\", When the question asks for \"count of teachers\"",
            "operation": " compute the number of rows using COUNT(*) per Hometown group"
        },
        "66": {
            "condition": "When the question asks for the most common hometowns for teachers",
            "operation": " return only the hometown value with the highest count, not both the hometown and its count."
        },
        "67": {
            "condition": "When counting occurrences of hometowns",
            "operation": " count the number of teacher records for each distinct hometown value."
        },
        "68": {
            "condition": "When the question asks for the most common hometowns for teachers, When counting occurrences of hometowns, When ranking by frequency to find the most common",
            "operation": " order the results by count in descending order and take only the top result."
        },
        "69": {
            "condition": "When the question asks for hometowns shared by at least two teachers",
            "operation": " use COUNT(*) >= 2 instead of COUNT(*) = 1 to find groups with at least two members."
        },
        "70": {
            "condition": "When referencing the teacher table",
            "operation": " use the exact table name \"teacher\" instead of \"teachers\"."
        },
        "71": {
            "condition": "When referencing the hometown column",
            "operation": " use the exact column name \"Hometown\" instead of \"hometown\" to match the schema."
        },
        "72": {
            "condition": "When the question asks for hometowns shared by at least two teachers, When referencing the teacher table, When referencing the hometown column, When grouping by hometown",
            "operation": " organize results by the \"Hometown\" column and count the number of teachers per group."
        },
        "73": {
            "condition": "When the question mentions \"towns\"",
            "operation": " \"towns\" actually means \"Hometown\" in the teacher table."
        },
        "74": {
            "condition": "When the question asks for \"at least two teachers\"",
            "operation": " use the comparison operator >= 2 to identify hometowns with at least two teachers."
        },
        "75": {
            "condition": "When counting teachers per hometown",
            "operation": " count using the Hometown column and group by Hometown to compute the number of teachers from each location."
        },
        "76": {
            "condition": "When the question mentions \"towns\", When the question asks for \"at least two teachers\", When counting teachers per hometown, When producing output",
            "operation": " return only the Hometown column for locations that meet the condition of having >= 2 teachers."
        },
        "77": {
            "condition": "When answering about \"names of teachers and the courses they are arranged to teach\"",
            "operation": " make sure the output order: T3.Name, T2.Course"
        },
        "78": {
            "condition": "When the question mentions \"teachers\"",
            "operation": " use table \"teacher AS T3\" with exact identifier \"T3.Name\" for teacher names"
        },
        "79": {
            "condition": "When the question mentions \"courses\"",
            "operation": " use table \"course AS T2\" with exact identifier \"T2.Course\" for course names"
        },
        "80": {
            "condition": "When combining tables for teacher-course arrangements",
            "operation": " use \"course_arrange AS T1\" as the primary table and link to \"course AS T2\" where T1.Course_ID = T2.Course_ID, then link to \"teacher AS T3\" where T1.Teacher_ID = T3.Teacher_ID, keeping only matching pairs (inner match)"
        },
        "81": {
            "condition": "When answering about \"names of teachers and the courses they are arranged to teach\", When the question mentions \"teachers\", When the question mentions \"courses\", When combining tables for teacher-course arrangements, When selecting output columns",
            "operation": " use exact identifiers T3.Name and T2.Course instead of generic teacher_name and course_name"
        },
        "82": {
            "condition": "When answering about teacher names and courses they teach",
            "operation": " make sure the output order: T3.Name, T2.Course"
        },
        "83": {
            "condition": "When combining course_arrange (T1) and course (T2)",
            "operation": " link rows where T1.Course_ID = T2.Course_ID and keep only matching pairs (inner match)"
        },
        "84": {
            "condition": "When combining course_arrange (T1) and teacher (T3)",
            "operation": " link rows where T1.Teacher_ID = T3.Teacher_ID and keep only matching pairs (inner match)"
        },
        "85": {
            "condition": "When selecting teacher names",
            "operation": " use T3.Name instead of teacher_name"
        },
        "86": {
            "condition": "When answering about teacher names and courses they teach, When combining course_arrange (T1) and course (T2), When combining course_arrange (T1) and teacher (T3), When selecting teacher names, When selecting course names",
            "operation": " use T2.Course instead of course_name"
        },
        "87": {
            "condition": "When selecting teacher names and course names",
            "operation": " use \"T3.Name\" for teacher names and \"T2.Course\" for course names instead of generic column names."
        },
        "88": {
            "condition": "When combining course arrangement, course, and teacher information",
            "operation": " link \"course_arrange AS T1\" with \"course AS T2\" where \"T1.Course_ID = T2.Course_ID\" and link with \"teacher AS T3\" where \"T1.Teacher_ID = T3.Teacher_ID\", keeping only matching pairs from all three tables."
        },
        "89": {
            "condition": "When selecting teacher names and course names, When combining course arrangement, course, and teacher information, When ordering results alphabetically by teacher name",
            "operation": " sort by \"T3.Name\" in ascending order instead of sorting by course name."
        },
        "90": {
            "condition": "When answering about teacher names and course names",
            "operation": " select T3.Name and T2.Course as output columns."
        },
        "91": {
            "condition": "When combining data from multiple tables",
            "operation": " link course_arrange as T1 with course as T2 where T1.Course_ID equals T2.Course_ID, then link with teacher as T3 where T1.Teacher_ID equals T3.Teacher_ID, keeping only matching pairs (inner match)."
        },
        "92": {
            "condition": "When answering about teacher names and course names, When combining data from multiple tables, When ordering results alphabetically by teacher name",
            "operation": " sort the final results by T3.Name in ascending order."
        },
        "93": {
            "condition": "When answering about \"teacher for the math course\"",
            "operation": " make sure the output order: T3.Name."
        },
        "94": {
            "condition": "When the question mentions \"teacher\"",
            "operation": " \"teacher\" actually means \"T3.Name in schema\"."
        },
        "95": {
            "condition": "When the question mentions \"math course\"",
            "operation": " \"math course\" actually means \"T2.Course = 'Math' in schema\"."
        },
        "96": {
            "condition": "When combining T1, T2, and T3 for shared entities",
            "operation": " link rows where T1.Course_ID = T2.Course_ID and T1.Teacher_ID = T3.Teacher_ID; keep only matching pairs (inner match)."
        },
        "97": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "98": {
            "condition": "When answering about \"teacher for the math course\", When the question mentions \"teacher\", When the question mentions \"math course\", When combining T1, T2, and T3 for shared entities, When choosing identifier delimiters, When handling text literals",
            "operation": " do not change case, spacing, or punctuation - use exact literal 'Math'."
        },
        "99": {
            "condition": "When answering about \"names of people who teach math courses\"",
            "operation": " make sure the output order: T3.Name"
        },
        "100": {
            "condition": "When the question mentions \"math courses\"",
            "operation": " \"math\" actually means \"Math\" in schema (exact literal with capital M)"
        },
        "101": {
            "condition": "When combining tables for teacher-course relationships",
            "operation": " link rows using T1.Course_ID = T2.Course_ID and T1.Teacher_ID = T3.Teacher_ID, keeping only matching pairs (inner match)"
        },
        "102": {
            "condition": "When filtering for math courses",
            "operation": " use T2.Course = \"Math\" with exact literal value and double quotes"
        },
        "103": {
            "condition": "When answering about \"names of people who teach math courses\", When the question mentions \"math courses\", When combining tables for teacher-course relationships, When filtering for math courses, When selecting teacher names",
            "operation": " use T3.Name from the teacher table (not name from teachers table)"
        },
        "104": {
            "condition": "When answering about \"names of teachers and the number of courses they teach\"",
            "operation": " make sure the output order: T2.Name, COUNT(*)."
        },
        "105": {
            "condition": "When combining course_arrange as T1 and teacher as T2",
            "operation": " link rows where T1.Teacher_ID = T2.Teacher_ID and keep only matching pairs (inner match)."
        },
        "106": {
            "condition": "When the question asks for \"number of courses they teach\"",
            "operation": " compute the count of course arrangements using COUNT(*) aggregation."
        },
        "107": {
            "condition": "When answering about \"names of teachers and the number of courses they teach\", When combining course_arrange as T1 and teacher as T2, When the question asks for \"number of courses they teach\", When the question says \"per teacher\"",
            "operation": " organize results by T2.Name and compute COUNT(*) per group."
        },
        "108": {
            "condition": "When answering about \"names of teachers and how many courses they teach\"",
            "operation": " make sure the output order: T2.Name, COUNT(*)."
        },
        "109": {
            "condition": "When combining course_arrange as T1 and teacher as T2 for shared entities",
            "operation": " link rows where T1.Teacher_ID = T2.Teacher_ID exactly as shown; keep only matching pairs (inner match)."
        },
        "110": {
            "condition": "When the question asks for \"count of courses\" per teacher",
            "operation": " compute the number of course arrangement rows using COUNT(*) grouped by T2.Name."
        },
        "111": {
            "condition": "When answering about \"names of teachers and how many courses they teach\", When combining course_arrange as T1 and teacher as T2 for shared entities, When the question asks for \"count of courses\" per teacher, When the question mentions \"names of teachers\"",
            "operation": " \"teacher names\" actually means T2.Name in the schema."
        },
        "112": {
            "condition": "When the question asks for teacher names",
            "operation": " use \"T2.Name\" from the \"teacher\" table."
        },
        "113": {
            "condition": "When counting courses per teacher",
            "operation": " join \"course_arrange AS T1\" with \"teacher AS T2\" on \"T1.Teacher_ID = T2.Teacher_ID\" to link course assignments to teachers."
        },
        "114": {
            "condition": "When grouping by teacher",
            "operation": " use \"GROUP BY T2.Name\" to organize results by teacher name."
        },
        "115": {
            "condition": "When the question asks for teacher names, When counting courses per teacher, When grouping by teacher, When filtering for teachers with at least two courses",
            "operation": " use \"HAVING COUNT(*) >= 2\" to filter after aggregation instead of using WHERE on a non-aggregated column."
        },
        "116": {
            "condition": "When answering about \"teachers who teach at least two courses\"",
            "operation": " make sure the output order: T2.Name."
        },
        "117": {
            "condition": "When the question mentions \"teachers\"",
            "operation": " \"teachers\" actually means \"teacher AS T2\" in schema."
        },
        "118": {
            "condition": "When combining course_arrange AS T1 and teacher AS T2 for shared entities",
            "operation": " link rows where T1.Teacher_ID = T2.Teacher_ID exactly as shown; keep only matching pairs (inner match)."
        },
        "119": {
            "condition": "When the question asks for \"teachers who teach at least two courses\"",
            "operation": " organize results by T2.Name and compute COUNT(*) per group, then filter to keep only groups with COUNT(*) >= 2."
        },
        "120": {
            "condition": "When answering about \"teachers who teach at least two courses\", When the question mentions \"teachers\", When combining course_arrange AS T1 and teacher AS T2 for shared entities, When the question asks for \"teachers who teach at least two courses\", When producing output",
            "operation": " select T2.Name from the joined teacher table instead of selecting name directly from the original teachers table."
        },
        "121": {
            "condition": "When the question asks about teachers who have not been arranged to teach courses",
            "operation": " use table \"teacher\" as T1 and table \"course_arrange\" as T2."
        },
        "122": {
            "condition": "When selecting teacher names",
            "operation": " use column \"Name\" from table \"teacher\" as the output column."
        },
        "123": {
            "condition": "When checking for unassigned teachers",
            "operation": " ensure the condition uses \"Teacher_id\" from \"teacher\" table not existing in \"Teacher_id\" values from \"course_arrange\" table."
        },
        "124": {
            "condition": "When the question asks about teachers who have not been arranged to teach courses, When selecting teacher names, When checking for unassigned teachers, When combining teacher and course arrangement information",
            "operation": " use the exact column token \"Teacher_id\" for both tables to establish the relationship between teachers and their course assignments."
        },
        "125": {
            "condition": "When the question asks for teachers whose courses have not been arranged",
            "operation": " use the table \"teacher\" instead of \"teachers\" and select the \"Name\" column."
        },
        "126": {
            "condition": "When filtering for teachers not assigned to courses",
            "operation": " use a NOT IN subquery with \"(SELECT Teacher_id FROM course_arrange)\" instead of a LEFT JOIN."
        },
        "127": {
            "condition": "When referencing identifiers",
            "operation": " use exact column names \"Teacher_id\" instead of \"teacher_id\" and maintain proper case sensitivity."
        },
        "128": {
            "condition": "When the question asks for teachers whose courses have not been arranged, When filtering for teachers not assigned to courses, When referencing identifiers, When checking for non-assigned teachers",
            "operation": " filter with \"WHERE Teacher_id NOT IN\" condition rather than checking for NULL values after a join."
        }
    },
    "museum_visit": {
        "0": {
            "condition": "When the question asks about \"visitors\"",
            "operation": " use the exact table name \"visitor\" from the schema."
        },
        "1": {
            "condition": "When the question asks for visitors \"below age 30\"",
            "operation": " filter rows where the age column value is less than 30 (age < 30)."
        },
        "2": {
            "condition": "When the question asks about \"visitors\", When the question asks for visitors \"below age 30\", When the question asks for \"how many visitors\"",
            "operation": " count the number of rows that satisfy the age condition using the canonical counting method."
        },
        "3": {
            "condition": "When the question mentions \"visitors\"",
            "operation": " use table \"visitor\" instead of \"visitors\"."
        },
        "4": {
            "condition": "When the question mentions \"membership level\"",
            "operation": " use column \"Level_of_membership\" instead of \"membership_level\" for both filtering and ordering."
        },
        "5": {
            "condition": "When the question mentions \"visitors\", When the question mentions \"membership level\", When the question asks to order by level from high to low",
            "operation": " sort by \"Level_of_membership\" in descending order (DESC) rather than ascending order (ASC)."
        },
        "6": {
            "condition": "When the question mentions \"visitors\"",
            "operation": " use the exact table name \"visitor\" instead of \"visitors\"."
        },
        "7": {
            "condition": "When filtering for membership level \"not higher than 4\"",
            "operation": " use the condition Level_of_membership <= 4 to include levels 4 and below, not membership_level > 4."
        },
        "8": {
            "condition": "When the question mentions \"visitors\", When filtering for membership level \"not higher than 4\", When computing average age",
            "operation": " use the aggregate function avg(age) with lowercase syntax."
        },
        "9": {
            "condition": "When the question asks for \"membership level\"",
            "operation": " use the exact column token \"Level_of_membership\" from the visitor table."
        },
        "10": {
            "condition": "When referencing the table containing visitor information",
            "operation": " use the exact table name \"visitor\" instead of \"visitors\"."
        },
        "11": {
            "condition": "When sorting by age from old to young",
            "operation": " order by the age column in descending direction (DESC) instead of ascending (ASC)."
        },
        "12": {
            "condition": "When the question asks for \"membership level\", When referencing the table containing visitor information, When sorting by age from old to young, When selecting output columns",
            "operation": " maintain the order of name followed by Level_of_membership as specified in the question."
        },
        "13": {
            "condition": "When the question asks for museum id and name",
            "operation": " use column \"museum_id\" for id and column \"name\" for name from table \"museum\"."
        },
        "14": {
            "condition": "When the question asks for the museum with the most staff members",
            "operation": " order rows by column \"num_of_staff\" in descending order and keep only the first row."
        },
        "15": {
            "condition": "When choosing identifier names",
            "operation": " use exact column name \"museum_id\" instead of \"id\" and exact table name \"museum\" instead of \"museums\"."
        },
        "16": {
            "condition": "When the question asks for museum id and name, When the question asks for the museum with the most staff members, When choosing identifier names, When ordering by staff count",
            "operation": " use exact column name \"num_of_staff\" instead of \"staff_count\"."
        },
        "17": {
            "condition": "When the question mentions \"museums\"",
            "operation": " use the exact table name \"museum\" instead of \"museums\"."
        },
        "18": {
            "condition": "When counting staff for museums",
            "operation": " use the exact column name \"num_of_staff\" instead of \"staff_count\" for the aggregate function."
        },
        "19": {
            "condition": "When filtering by opening year before 2009",
            "operation": " use the exact column name \"open_year\" instead of \"year_opened\" in the filter condition."
        },
        "20": {
            "condition": "When the question mentions \"museums\", When counting staff for museums, When filtering by opening year before 2009, When calculating the average",
            "operation": " use lowercase \"avg\" instead of uppercase \"AVG\" for the aggregate function."
        },
        "21": {
            "condition": "When the question asks about \"opening year\" and \"staff number\"",
            "operation": " use the exact column aliases \"Num_of_Staff\" and \"Open_Year\" instead of the original column names."
        },
        "22": {
            "condition": "When referencing the museums table",
            "operation": " use the exact table name \"museum\" instead of \"museums\"."
        },
        "23": {
            "condition": "When the question asks about \"opening year\" and \"staff number\", When referencing the museums table, When filtering for the museum named \"Plaza Museum\"",
            "operation": " use the exact literal value 'Plaza Museum' with the condition name = 'Plaza Museum'."
        },
        "24": {
            "condition": "When the question asks for opening year and staff number of a museum",
            "operation": " make sure the output order is Num_of_Staff, Open_Year instead of Open_Year, Num_of_Staff."
        },
        "25": {
            "condition": "When filtering by museum name",
            "operation": " use lowercase name in the WHERE clause instead of uppercase Name while maintaining the exact filter condition = 'Plaza Museum'."
        },
        "26": {
            "condition": "When the question asks for opening year and staff number of a museum, When filtering by museum name, When handling text literals",
            "operation": " preserve the exact case, spacing, and punctuation of 'Plaza Museum' without modification."
        },
        "27": {
            "condition": "When the question mentions \"museums\"",
            "operation": " use the exact table name \"museum\" instead of \"museums\"."
        },
        "28": {
            "condition": "When the question mentions \"staff\" count",
            "operation": " use the exact column name \"num_of_staff\" for staff count comparison."
        },
        "29": {
            "condition": "When the question mentions \"opened after 2010\"",
            "operation": " use the exact column name \"open_year\" for year filter and compare with literal value 2010."
        },
        "30": {
            "condition": "When the question mentions \"museums\", When the question mentions \"staff\" count, When the question mentions \"opened after 2010\", When comparing staff counts",
            "operation": " ensure the main query compares \"num_of_staff\" against the minimum \"num_of_staff\" from museums opened after 2010."
        },
        "31": {
            "condition": "When answering about \"visitors who visited some museums more than once\"",
            "operation": " make sure the output order: id, name, age."
        },
        "32": {
            "condition": "When combining visitor and visit tables",
            "operation": " link rows where t1.id = t2.visitor_id and keep only matching pairs (inner match)."
        },
        "33": {
            "condition": "When grouping by visitor",
            "operation": " organize results by t1.id and compute requested aggregates per group."
        },
        "34": {
            "condition": "When counting visits per visitor",
            "operation": " compute the number of rows using the canonical key t1.id and keep only groups where count(*) > 1."
        },
        "35": {
            "condition": "When answering about \"visitors who visited some museums more than once\", When combining visitor and visit tables, When grouping by visitor, When counting visits per visitor, When the question asks for \"id, name and age\"",
            "operation": " select exactly t1.id, t1.name, t1.age from the visitor table."
        },
        "36": {
            "condition": "When joining tables for visitor spending analysis",
            "operation": " use table alias t1 for visitor table and t2 for visit table instead of v for visitors and t for tickets."
        },
        "37": {
            "condition": "When selecting visitor information",
            "operation": " select t2.visitor_id, t1.name, and t1.Level_of_membership instead of v.id, v.name, and v.membership_level."
        },
        "38": {
            "condition": "When calculating total spending",
            "operation": " reference t2.Total_spent in the aggregate instead of t.price."
        },
        "39": {
            "condition": "When ordering results by spending",
            "operation": " order by sum(t2.Total_spent) DESC instead of total_spent ASC to find largest amounts."
        },
        "40": {
            "condition": "When joining tables for visitor spending analysis, When selecting visitor information, When calculating total spending, When ordering results by spending, When grouping results",
            "operation": " remove the explicit GROUP BY clause for name and membership level instead of including them."
        },
        "41": {
            "condition": "When answering about \"museum visited most times\"",
            "operation": " make sure the output order: t2.Museum_ID, t1.name"
        },
        "42": {
            "condition": "When combining museum and visit tables",
            "operation": " link rows where t1.Museum_ID = t2.Museum_ID and keep only matching pairs (inner match)"
        },
        "43": {
            "condition": "When the question asks for \"most times\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row"
        },
        "44": {
            "condition": "When counting visits",
            "operation": " compute the number of rows using the canonical key t2.Museum_ID for grouping"
        },
        "45": {
            "condition": "When answering about \"museum visited most times\", When combining museum and visit tables, When the question asks for \"most times\", When counting visits, When selecting museum identifier and name",
            "operation": " use t2.Museum_ID and t1.name exactly as specified"
        },
        "46": {
            "condition": "When the question asks about museums without visitors",
            "operation": " use the table \"museum\" instead of \"museums\" in the FROM clause."
        },
        "47": {
            "condition": "When checking for museums with no visits",
            "operation": " use a subquery with NOT IN condition on Museum_ID to check for absence of records in the \"visit\" table."
        },
        "48": {
            "condition": "When the question asks about museums without visitors, When checking for museums with no visits, When identifying museums without any visits",
            "operation": " do not rely on a visitor_count column as it may not exist or be accurate; instead check the relationship table \"visit\" for missing Museum_ID references."
        },
        "49": {
            "condition": "When selecting columns from multiple tables",
            "operation": " always qualify column names with explicit table aliases like t1.name and t1.age instead of unqualified names."
        },
        "50": {
            "condition": "When combining visitor and visit information",
            "operation": " join tables using visitor AS t1 JOIN visit AS t2 with the exact join condition t1.id = t2.visitor_id to properly relate the tables."
        },
        "51": {
            "condition": "When finding the visitor who bought the most tickets",
            "operation": " order by t2.num_of_ticket DESC from the visit table instead of using non-existent columns like tickets_bought."
        },
        "52": {
            "condition": "When selecting columns from multiple tables, When combining visitor and visit information, When finding the visitor who bought the most tickets, When answering about the top visitor by ticket purchases",
            "operation": " use LIMIT 1 to return only the single row with the highest number of tickets."
        },
        "53": {
            "condition": "When answering about \"average and maximum number of tickets bought in all visits\"",
            "operation": " use the exact column name \"num_of_ticket\" from the visit table for calculations."
        },
        "54": {
            "condition": "When computing the average number of tickets",
            "operation": " calculate the average of the \"num_of_ticket\" column."
        },
        "55": {
            "condition": "When computing the maximum number of tickets",
            "operation": " calculate the maximum value of the \"num_of_ticket\" column."
        },
        "56": {
            "condition": "When answering about \"average and maximum number of tickets bought in all visits\", When computing the average number of tickets, When computing the maximum number of tickets, When referencing the data source",
            "operation": " use the table named \"visit\" (not \"visits\") as specified in the schema."
        },
        "57": {
            "condition": "When answering about \"total ticket expense of visitors whose membership level is 1\"",
            "operation": " make sure the output order: sum(t2.Total_spent)."
        },
        "58": {
            "condition": "When the question mentions \"membership level is 1\"",
            "operation": " \"membership level\" actually means \"t1.Level_of_membership = 1\" in schema."
        },
        "59": {
            "condition": "When combining visitors and visit tables for shared entities",
            "operation": " link rows where t1.id = t2.visitor_id exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "60": {
            "condition": "When answering about \"total ticket expense of visitors whose membership level is 1\", When the question mentions \"membership level is 1\", When combining visitors and visit tables for shared entities, When calculating total expense",
            "operation": " use sum(t2.Total_spent) instead of SUM(ticket_price) for the aggregate calculation."
        },
        "61": {
            "condition": "When the question asks for visitors who visited both museums opened before 2009 and museums opened after 2011",
            "operation": " use INTERSECT to combine results from two separate query branches instead of OR logic with GROUP BY/HAVING."
        },
        "62": {
            "condition": "When referencing tables",
            "operation": " use exact table names \"visitor\", \"visit\", and \"museum\" instead of \"visitors\", \"visits\", and \"museums\"."
        },
        "63": {
            "condition": "When joining visit and museum tables",
            "operation": " link rows where \"t3.Museum_ID = t2.Museum_ID\" exactly as specified."
        },
        "64": {
            "condition": "When filtering for museums opened before 2009",
            "operation": " use condition \"t3.open_year < 2009\" in the first branch."
        },
        "65": {
            "condition": "When filtering for museums opened after 2011",
            "operation": " use condition \"t3.open_year > 2011\" in the second branch."
        },
        "66": {
            "condition": "When the question asks for visitors who visited both museums opened before 2009 and museums opened after 2011, When referencing tables, When joining visit and museum tables, When filtering for museums opened before 2009, When filtering for museums opened after 2011, When using INTERSECT approach",
            "operation": " remove GROUP BY and HAVING clauses as they are not needed for set intersection logic."
        },
        "67": {
            "condition": "When the question mentions \"visitors\"",
            "operation": " use the exact table name \"visitor\" instead of \"visitors\" and use the column \"id\" instead of \"visitor_id\" for the main table."
        },
        "68": {
            "condition": "When combining museum and visit tables",
            "operation": " link rows where t1.Museum_ID = t2.Museum_ID using an explicit join instead of nested subqueries."
        },
        "69": {
            "condition": "When filtering museums by opening year after 2010",
            "operation": " use the exact column name \"open_year\" instead of \"year_opened\" and filter with t1.open_year > 2010."
        },
        "70": {
            "condition": "When referencing visitor IDs in subqueries",
            "operation": " use the exact column name \"t2.visitor_id\" with proper table alias instead of just \"visitor_id\"."
        },
        "71": {
            "condition": "When the question mentions \"visitors\", When combining museum and visit tables, When filtering museums by opening year after 2010, When referencing visitor IDs in subqueries, When using table aliases",
            "operation": " consistently use t1 for museum table and t2 for visit table throughout the subquery instead of anonymous references."
        },
        "72": {
            "condition": "When the question mentions \"museums\"",
            "operation": " use the exact table name \"museum\" instead of \"museums\"."
        },
        "73": {
            "condition": "When the question mentions \"opened_year\"",
            "operation": " use the exact column name \"open_year\" instead of \"opened_year\"."
        },
        "74": {
            "condition": "When the question mentions \"museums\", When the question mentions \"opened_year\", When the question asks for museums opened \"after 2013 or before 2008\"",
            "operation": " use OR operator to combine conditions open_year > 2013 OR open_year < 2008, not AND operator."
        }
    },
    "wta_1": {
        "0": {
            "condition": "When counting entities",
            "operation": " use lowercase function names like count(*) instead of uppercase COUNT(*) to maintain consistent function casing."
        },
        "1": {
            "condition": "When answering about \"how many players\"",
            "operation": " make sure to count from the \"players\" table instead of the \"teams\" table."
        },
        "2": {
            "condition": "When answering about \"how many players\", When counting entities",
            "operation": " use the canonical counting method for the specified entity table (players in this case)."
        },
        "3": {
            "condition": "When answering about \"total number of matches\"",
            "operation": " query the \"matches\" table instead of the \"players\" table."
        },
        "4": {
            "condition": "When answering about \"total number of matches\", When counting records",
            "operation": " use lowercase \"count(*)\" instead of uppercase \"COUNT(*)\" for consistency."
        },
        "5": {
            "condition": "When answering about \"matches\"",
            "operation": " query the \"matches\" table instead of the \"players\" table."
        },
        "6": {
            "condition": "When answering about \"matches\", When counting matches",
            "operation": " count all records from the \"matches\" table."
        },
        "7": {
            "condition": "When the question asks for players from the country with code USA",
            "operation": " use the exact literal 'USA' (not 'CANADA') for the country_code filter."
        },
        "8": {
            "condition": "When the question asks for players from the country with code USA, When selecting player information",
            "operation": " include both first_name and birth_date columns in the output."
        },
        "9": {
            "condition": "When the question mentions \"USA\"",
            "operation": " use the exact literal value 'USA' for filtering."
        },
        "10": {
            "condition": "When filtering by country",
            "operation": " use the column \"country_code\" instead of \"country\" from the players table."
        },
        "11": {
            "condition": "When the question mentions \"USA\", When filtering by country, When answering about players from the USA",
            "operation": " make sure the output order: first_name, birth_date."
        },
        "12": {
            "condition": "When calculating average age for both losers and winners",
            "operation": " compute separate averages for \"loser_age\" and \"winner_age\" columns instead of a single aggregate."
        },
        "13": {
            "condition": "When the question asks for average age of both losers and winners",
            "operation": " output both average values in the result without any filtering conditions."
        },
        "14": {
            "condition": "When calculating average age for both losers and winners, When the question asks for average age of both losers and winners, When handling match results",
            "operation": " do not use any WHERE clause filtering based on result values like 'loser' or 'winner' since the required data is available directly in separate columns."
        },
        "15": {
            "condition": "When calculating average ages of losers and winners across matches",
            "operation": " use direct column references \"avg(loser_age)\" and \"avg(winner_age)\" instead of CASE statements that check player IDs."
        },
        "16": {
            "condition": "When the question asks for average ages from match data",
            "operation": " operate solely on the \"matches\" table without joining to the \"players\" table."
        },
        "17": {
            "condition": "When calculating average ages of losers and winners across matches, When the question asks for average ages from match data, When aggregating match statistics",
            "operation": " use the existing \"loser_age\" and \"winner_age\" columns in the \"matches\" table rather than attempting to access player age data through joins."
        },
        "18": {
            "condition": "When the question asks for the \"highest rank of losers\"",
            "operation": " use the \"loser_rank\" column from the matches table instead of \"winner_rank\" to analyze losing players."
        },
        "19": {
            "condition": "When the question asks for the \"highest rank of losers\", When finding the highest rank (which means the numerically smallest rank value)",
            "operation": " use the minimum aggregate function instead of maximum to calculate the smallest rank value."
        },
        "20": {
            "condition": "When the question asks for the \"best rank of losers\"",
            "operation": " use the minimum value of \"loser_rank\" instead of the maximum value of \"winner_rank\"."
        },
        "21": {
            "condition": "When the question asks for the \"best rank of losers\", When computing the best (lowest) rank",
            "operation": " apply the min aggregate function to the exact column token \"loser_rank\" from the matches table."
        },
        "22": {
            "condition": "When the question asks for \"distinct country codes\"",
            "operation": " compute the number of unique values of the exact token \"country_code\" rather than counting all non-null values."
        },
        "23": {
            "condition": "When the question asks for \"distinct country codes\", When counting distinct values",
            "operation": " use the exact identifier \"country_code\" without quotes as shown in the schema."
        },
        "24": {
            "condition": "When counting distinct countries",
            "operation": " use the exact column token \"country_code\" from the players table to count distinct values."
        },
        "25": {
            "condition": "When the question asks for \"distinct countries\"",
            "operation": " compute the number of unique values in the \"country_code\" column rather than counting all rows."
        },
        "26": {
            "condition": "When counting distinct countries, When the question asks for \"distinct countries\", When the question mentions \"countries\"",
            "operation": " \"countries\" actually means \"country_code\" in the players schema."
        },
        "27": {
            "condition": "When the question asks for \"distinct name of losers\"",
            "operation": " use \"loser_name\" from the \"matches\" table to count distinct values."
        },
        "28": {
            "condition": "When counting distinct values",
            "operation": " use count(DISTINCT loser_name) instead of COUNT(name) to ensure only unique values are counted."
        },
        "29": {
            "condition": "When accessing data for losers",
            "operation": " query from the \"matches\" table instead of the \"losers\" table to use the correct data source."
        },
        "30": {
            "condition": "When the question asks for \"distinct name of losers\", When counting distinct values, When accessing data for losers, When the question mentions \"losers\"",
            "operation": " this refers to the \"loser_name\" column in the \"matches\" table."
        },
        "31": {
            "condition": "When the question asks for \"different loser names\"",
            "operation": " count the number of unique values in the exact column \"loser_name\" using DISTINCT aggregation."
        },
        "32": {
            "condition": "When counting entities",
            "operation": " use the exact column name \"loser_name\" rather than \"winner_name\" to match the question's focus on losers rather than winners."
        },
        "33": {
            "condition": "When the question asks for \"different loser names\", When counting entities, When the question asks for \"how many different\"",
            "operation": " ensure the count operation includes deduplication to count unique values rather than total occurrences."
        },
        "34": {
            "condition": "When answering about \"tournaments with more than 10 matches\"",
            "operation": " count the number of matches per tournament using count(*) from the matches table instead of using a matches column from tourneys table."
        },
        "35": {
            "condition": "When the question asks for tournaments with more than 10 matches",
            "operation": " group by tourney_name and filter groups having count(*) > 10."
        },
        "36": {
            "condition": "When answering about \"tournaments with more than 10 matches\", When the question asks for tournaments with more than 10 matches, When querying for tournament information based on match counts",
            "operation": " use the matches table as the primary data source rather than the tourneys table."
        },
        "37": {
            "condition": "When the question asks for tournament names",
            "operation": " use the exact column name \"tourney_name\" instead of \"tournament_name\" from the matches table."
        },
        "38": {
            "condition": "When counting matches per tournament",
            "operation": " group by \"tourney_name\" and count all rows using count(*) to get the total number of matches per tournament."
        },
        "39": {
            "condition": "When filtering for tournaments with more than 10 matches",
            "operation": " use a having condition count(*) > 10 after grouping by \"tourney_name\"."
        },
        "40": {
            "condition": "When the question asks for tournament names, When counting matches per tournament, When filtering for tournaments with more than 10 matches, When querying about tournament matches",
            "operation": " use the matches table as the primary source instead of the tournaments table."
        },
        "41": {
            "condition": "When the question asks for winners who played in both 2013 and 2016",
            "operation": " use INTERSECT to find common winners across years instead of AND logic that cannot match both conditions simultaneously."
        },
        "42": {
            "condition": "When querying about winners",
            "operation": " use the \"matches\" table instead of non-existent \"winners\" table."
        },
        "43": {
            "condition": "When selecting winner names",
            "operation": " use \"winner_name\" column instead of \"name\"."
        },
        "44": {
            "condition": "When the question asks for winners who played in both 2013 and 2016, When querying about winners, When selecting winner names, When filtering by year",
            "operation": " use separate queries for each year condition with proper \"YEAR = 2013\" and \"YEAR = 2016\" filters instead of the impossible \"year = 2013 AND year = 2016\" predicate."
        },
        "45": {
            "condition": "When the question asks for players who won in multiple specific years",
            "operation": " use set intersection to find common winner_name values instead of using AND conditions on the same year column."
        },
        "46": {
            "condition": "When answering about match winners",
            "operation": " query from the \"matches\" table instead of the \"players\" table to access the correct data source."
        },
        "47": {
            "condition": "When filtering for specific years like 2013 and 2016",
            "operation": " create separate queries for each year condition instead of trying to filter for both years simultaneously in a single condition."
        },
        "48": {
            "condition": "When identifying winners in a particular year",
            "operation": " use the exact literal values \"2013\" and \"2016\" as shown in the question."
        },
        "49": {
            "condition": "When the question asks for players who won in multiple specific years, When answering about match winners, When filtering for specific years like 2013 and 2016, When identifying winners in a particular year, When selecting player names from match results",
            "operation": " use the exact column token \"winner_name\" from the matches table."
        },
        "50": {
            "condition": "When the question asks for matches in multiple years using \"or\" logic",
            "operation": " use OR operator between year conditions instead of AND operator to include matches from either year."
        },
        "51": {
            "condition": "When counting matches",
            "operation": " count all rows that satisfy the year condition using COUNT(*)."
        },
        "52": {
            "condition": "When the question asks for matches in multiple years using \"or\" logic, When counting matches, When handling year literals",
            "operation": " use exact numeric values 2013 and 2016 without quotes as shown in the amends."
        },
        "53": {
            "condition": "When answering about players who won both WTA Championships and Australian Open",
            "operation": " combine information from players table (T1) and matches table (T2) using player_id = winner_id to link tournament wins to players."
        },
        "54": {
            "condition": "When filtering for WTA Championships wins",
            "operation": " use exact literal 'WTA Championships' for tourney_name column."
        },
        "55": {
            "condition": "When filtering for Australian Open wins",
            "operation": " use exact literal 'Australian Open' for tourney_name column."
        },
        "56": {
            "condition": "When finding players who won both tournaments",
            "operation": " use INTERSECT operation between the two separate tournament result sets instead of trying to match both patterns in the same row."
        },
        "57": {
            "condition": "When selecting output columns",
            "operation": " include first_name and country_code from the players table (T1)."
        },
        "58": {
            "condition": "When answering about players who won both WTA Championships and Australian Open, When filtering for WTA Championships wins, When filtering for Australian Open wins, When finding players who won both tournaments, When selecting output columns, When combining tables",
            "operation": " use inner matches where T1.player_id = T2.winner_id to ensure only players with tournament wins are considered."
        },
        "59": {
            "condition": "When answering about players who won both WTA Championships and Australian Open",
            "operation": " use INTERSECT operation instead of joining the same table multiple times to find players present in both tournament winner sets."
        },
        "60": {
            "condition": "When the question mentions \"won both the WTA Championships and the Australian Open\"",
            "operation": " this means finding players who have winner records in both tournaments using exact tournament name literals 'WTA Championships' and 'Australian Open'."
        },
        "61": {
            "condition": "When combining player information from matches table",
            "operation": " use consistent join condition T1.player_id = T2.winner_id to link players to their winning matches."
        },
        "62": {
            "condition": "When filtering for specific tournaments",
            "operation": " apply separate WHERE clauses for each tournament condition (T1.tourney_name = 'WTA Championships' and T2.tourney_name = 'Australian Open') in the INTERSECT branches."
        },
        "63": {
            "condition": "When answering about players who won both WTA Championships and Australian Open, When the question mentions \"won both the WTA Championships and the Australian Open\", When combining player information from matches table, When filtering for specific tournaments, When selecting output columns",
            "operation": " return first_name and country_code from the players table without using DISTINCT since INTERSECT inherently returns unique results."
        },
        "64": {
            "condition": "When answering about players who won both tournaments",
            "operation": " use consistent table aliases with T1 for players and T2 for matches throughout both INTERSECT components."
        },
        "65": {
            "condition": "When producing output columns",
            "operation": " maintain the column order as country_code, first_name in both SELECT statements of the INTERSECT operation."
        },
        "66": {
            "condition": "When combining tables for tournament wins",
            "operation": " link players and matches using the exact key equality T1.player_id = T2.winner_id as shown in the schema."
        },
        "67": {
            "condition": "When answering about players who won both tournaments, When producing output columns, When combining tables for tournament wins, When filtering for specific tournaments",
            "operation": " use exact string literals 'WTA Championships' and 'Australian Open' for the tourney_name column with correct case and spacing."
        },
        "68": {
            "condition": "When combining players and matches tables",
            "operation": " link rows where T1.player_id equals T2.winner_id exactly as shown in the amends (T1.player_id = T2.winner_id) and keep only matching pairs (inner match)."
        },
        "69": {
            "condition": "When the question asks for players who won both specific tournaments",
            "operation": " filter matches where T2.tourney_name equals 'WTA Championships' and also filter matches where T2.tourney_name equals 'Australian Open' using exact string literals."
        },
        "70": {
            "condition": "When finding players who won both tournaments",
            "operation": " use INTERSECT between two complete SELECT statements that both return T1.first_name and T1.country_code instead of intersecting only winner_id values."
        },
        "71": {
            "condition": "When combining players and matches tables, When the question asks for players who won both specific tournaments, When finding players who won both tournaments, When answering about players who won both tournaments",
            "operation": " make sure the output order includes T1.first_name and T1.country_code."
        },
        "72": {
            "condition": "When using INTERSECT to find common results between two queries",
            "operation": " ensure the column order in both SELECT clauses is identical, with country_code appearing before first_name."
        },
        "73": {
            "condition": "When using INTERSECT to find common results between two queries, When answering about players who won both specific tournaments",
            "operation": " maintain consistent output column ordering (country_code, first_name) across both sides of the INTERSECT operation for proper comparison semantics."
        },
        "74": {
            "condition": "When the question asks for the \"oldest player\"",
            "operation": " use the \"birth_date\" column from the players table to determine age, ordering by birth_date in ascending order to find the earliest birth date."
        },
        "75": {
            "condition": "When the question asks for the \"oldest player\", When answering about \"first name and country code of the oldest player\"",
            "operation": " make sure the output order: first_name, country_code."
        },
        "76": {
            "condition": "When the question asks for the \"oldest player\"",
            "operation": " sort players by birth_date in ascending order (earliest birth date first) to find the oldest player."
        },
        "77": {
            "condition": "When ordering results to find the oldest player",
            "operation": " use the \"birth_date\" column instead of \"age\" for accurate chronological ordering."
        },
        "78": {
            "condition": "When the question asks for the \"oldest player\", When ordering results to find the oldest player, When selecting output columns for player information",
            "operation": " include \"first_name\" and \"country_code\" as specified in the question."
        },
        "79": {
            "condition": "When the question asks to list players in order of birth date",
            "operation": " sort the results by the \"birth_date\" column from the players table."
        },
        "80": {
            "condition": "When the question mentions \"birth date\"",
            "operation": " this corresponds to the exact column \"birth_date\" in the players table."
        },
        "81": {
            "condition": "When the question asks to list players in order of birth date, When the question mentions \"birth date\", When ordering results",
            "operation": " use the exact column name \"birth_date\" as shown in the schema, not alternative names like \"name\"."
        },
        "82": {
            "condition": "When filtering players by handedness",
            "operation": " use the exact literal 'L' for left-handed players instead of 'right'"
        },
        "83": {
            "condition": "When ordering results by birth date",
            "operation": " sort the output in ascending order of birth_date"
        },
        "84": {
            "condition": "When filtering players by handedness, When ordering results by birth date, When selecting player information",
            "operation": " include both first_name and last_name columns in the output"
        },
        "85": {
            "condition": "When the question mentions \"left handed players\"",
            "operation": " filter rows where the exact column \"hand\" equals the exact literal 'L'."
        },
        "86": {
            "condition": "When ordering by birth date",
            "operation": " sort rows in ascending order (earliest to latest) using the \"birth_date\" column."
        },
        "87": {
            "condition": "When the question mentions \"left handed players\", When ordering by birth date, When selecting player names",
            "operation": " output both \"first_name\" and \"last_name\" columns to get full names."
        },
        "88": {
            "condition": "When answering about \"the player who did the most number of tours\"",
            "operation": " make sure the output order: first_name, country_code."
        },
        "89": {
            "condition": "When the question mentions \"tours\"",
            "operation": " \"tours\" actually means \"T2.tours in schema\"."
        },
        "90": {
            "condition": "When the question mentions \"most number of tours\"",
            "operation": " rank rows by T2.tours in descending direction and keep the first 1 row."
        },
        "91": {
            "condition": "When combining players and rankings tables",
            "operation": " link rows where players.player_id = rankings.player_id exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "92": {
            "condition": "When answering about \"the player who did the most number of tours\", When the question mentions \"tours\", When the question mentions \"most number of tours\", When combining players and rankings tables, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "93": {
            "condition": "When answering about \"the first name and country code of the player who did the most number of tours\"",
            "operation": " make sure the output order: T1.country_code, T1.first_name"
        },
        "94": {
            "condition": "When combining players and rankings tables for shared entities",
            "operation": " link rows where T1.player_id = T2.player_id exactly as shown; keep only matching pairs (inner match)"
        },
        "95": {
            "condition": "When answering about \"the first name and country code of the player who did the most number of tours\", When combining players and rankings tables for shared entities, When the question mentions \"most number of tours\"",
            "operation": " rank rows by T2.tours in descending order and keep the first 1 row"
        },
        "96": {
            "condition": "When answering about \"player with the most tours\"",
            "operation": " make sure to join the players table (T1) with the rankings table (T2) using T1.player_id = T2.player_id to access tour information."
        },
        "97": {
            "condition": "When ordering by tours count",
            "operation": " use T2.tours instead of ambiguous column references."
        },
        "98": {
            "condition": "When selecting player attributes",
            "operation": " use explicit table references T1.first_name and T1.country_code instead of bare column names."
        },
        "99": {
            "condition": "When answering about \"player with the most tours\", When ordering by tours count, When selecting player attributes, When finding the top player",
            "operation": " rank rows by T2.tours in descending order and keep only the first row."
        },
        "100": {
            "condition": "When answering about \"first name and country code of the player with the most tours\"",
            "operation": " make sure the output order: country_code, first_name."
        },
        "101": {
            "condition": "When combining players and rankings tables for shared entities",
            "operation": " link rows where T1.player_id = T2.player_id exactly as shown; keep only matching pairs (inner match)."
        },
        "102": {
            "condition": "When answering about \"first name and country code of the player with the most tours\", When combining players and rankings tables for shared entities, When the question mentions \"most tours\"",
            "operation": " rank rows by T2.tours in descending order and keep the first 1 row."
        },
        "103": {
            "condition": "When answering about \"the year that has the most number of matches\"",
            "operation": " make sure the output order includes only the \"year\" column."
        },
        "104": {
            "condition": "When the question asks for \"most number of matches\"",
            "operation": " rank rows by count of matches in descending order and keep the first 1 row."
        },
        "105": {
            "condition": "When answering about \"the year that has the most number of matches\", When the question asks for \"most number of matches\", When counting matches",
            "operation": " compute the number of rows using the canonical key for matches (year)."
        },
        "106": {
            "condition": "When answering about \"which year had the most matches\"",
            "operation": " make sure the output order: YEAR."
        },
        "107": {
            "condition": "When counting matches",
            "operation": " compute the number of rows using the canonical key for matches (year)."
        },
        "108": {
            "condition": "When the question asks for \"most matches\"",
            "operation": " rank years by count of matches in descending order and keep the first 1 row."
        },
        "109": {
            "condition": "When answering about \"which year had the most matches\", When counting matches, When the question asks for \"most matches\", When handling text literals",
            "operation": " do not change case, spacing, or punctuation for column names like \"year\"."
        },
        "110": {
            "condition": "When the question asks for \"name and rank points\"",
            "operation": " select \"winner_name\" and \"winner_rank_points\" from the matches table."
        },
        "111": {
            "condition": "When counting the number of wins per winner",
            "operation": " group the results by \"winner_name\" to aggregate match counts for each distinct winner."
        },
        "112": {
            "condition": "When the question asks for \"name and rank points\", When counting the number of wins per winner, When finding the winner with the most wins",
            "operation": " order the results by the count of matches in descending order and keep only the first row (top result)."
        },
        "113": {
            "condition": "When the question asks for \"rank points\" of a player",
            "operation": " use the exact column name \"winner_rank_points\" from the matches table to access the winner's rank points."
        },
        "114": {
            "condition": "When counting matches won by players",
            "operation": " count using the \"winner_name\" column to determine the number of wins per player."
        },
        "115": {
            "condition": "When the question asks for \"rank points\" of a player, When counting matches won by players, When finding the player with the most wins",
            "operation": " rank players by their win count in descending order and keep only the top-ranked player."
        },
        "116": {
            "condition": "When grouping by winner name to count matches won",
            "operation": " group only by \"winner_name\" instead of including \"winner_id\" and \"winner_rank_points\" in the grouping."
        },
        "117": {
            "condition": "When selecting columns after grouping by winner name",
            "operation": " maintain the selection of both \"winner_name\" and \"winner_rank_points\" without changing the output columns."
        },
        "118": {
            "condition": "When ordering results to find the player with most wins",
            "operation": " order by the count of matches won in descending order and keep only the top result using LIMIT 1."
        },
        "119": {
            "condition": "When grouping by winner name to count matches won, When selecting columns after grouping by winner name, When ordering results to find the player with most wins, When counting matches won per player",
            "operation": " count all rows for each winner name to determine the number of matches won."
        },
        "120": {
            "condition": "When the question mentions \"Australian Open tournament\"",
            "operation": " use the exact literal value 'Australian Open' to filter the \"tourney_name\" column."
        },
        "121": {
            "condition": "When answering about \"winner with the most rank points\"",
            "operation": " order results by \"winner_rank_points\" in descending order and take the first row."
        },
        "122": {
            "condition": "When the question mentions \"Australian Open tournament\", When answering about \"winner with the most rank points\", When selecting the winner's name",
            "operation": " output the \"winner_name\" column from the matches table."
        },
        "123": {
            "condition": "When the question asks for \"names of loser and winner\"",
            "operation": " use the exact column tokens \"loser_name\" and \"winner_name\" from the matches table instead of \"loser\" and \"winner\"."
        },
        "124": {
            "condition": "When the question asks for \"names of loser and winner\", When the question asks for the match with the \"greatest number of minutes\"",
            "operation": " order the results by the \"minutes\" column in descending order and take only the first row."
        },
        "125": {
            "condition": "When the question asks about the \"longest match\"",
            "operation": " use the \"minutes\" column from the matches table to determine match length and sort in descending order."
        },
        "126": {
            "condition": "When answering about names of winner and loser in the longest match",
            "operation": " make sure the output order includes \"winner_name\" and \"loser_name\" columns."
        },
        "127": {
            "condition": "When the question asks about the \"longest match\", When answering about names of winner and loser in the longest match, When ranking to find the single longest match",
            "operation": " take only the first row after sorting by \"minutes\" in descending order."
        },
        "128": {
            "condition": "When answering about \"average ranking for each player and their first name\"",
            "operation": " make sure the output order: average ranking first, then first name."
        },
        "129": {
            "condition": "When combining players table (T1) and rankings table (T2)",
            "operation": " link rows where T1.player_id = T2.player_id and keep only matching pairs (inner match)."
        },
        "130": {
            "condition": "When grouping by player first name",
            "operation": " organize results by T1.first_name and compute average ranking per group."
        },
        "131": {
            "condition": "When answering about \"average ranking for each player and their first name\", When combining players table (T1) and rankings table (T2), When grouping by player first name, When selecting columns",
            "operation": " place the aggregate function AVG(ranking) before T1.first_name in the output."
        },
        "132": {
            "condition": "When answering about \"average ranking for each player and their first name\"",
            "operation": " make sure the output order: average ranking calculation first, then first name."
        },
        "133": {
            "condition": "When computing average ranking",
            "operation": " use lowercase avg(ranking) without an alias instead of AVG(T2.ranking) AS average_ranking."
        },
        "134": {
            "condition": "When combining players T1 and rankings T2",
            "operation": " link rows where T1.player_id = T2.player_id and keep only matching pairs (inner match)."
        },
        "135": {
            "condition": "When answering about \"average ranking for each player and their first name\", When computing average ranking, When combining players T1 and rankings T2, When grouping by first name",
            "operation": " organize results by T1.first_name and compute the average ranking per group."
        },
        "136": {
            "condition": "When answering about \"first names of all players and their average rankings\"",
            "operation": " make sure the output order: T1.first_name, avg(T2.ranking)."
        },
        "137": {
            "condition": "When combining players table (T1) and rankings table (T2)",
            "operation": " link rows where T1.player_id = T2.player_id and keep only matching pairs (inner match)."
        },
        "138": {
            "condition": "When the question asks for \"average rankings\"",
            "operation": " compute the average of T2.ranking values per group."
        },
        "139": {
            "condition": "When the question says \"by first names\"",
            "operation": " organize results by T1.first_name and compute requested aggregates per group."
        },
        "140": {
            "condition": "When answering about \"first names of all players and their average rankings\", When combining players table (T1) and rankings table (T2), When the question asks for \"average rankings\", When the question says \"by first names\", When using table aliases",
            "operation": " use T1 for players table and T2 for rankings table with qualified column references."
        },
        "141": {
            "condition": "When answering about \"first names of all players and their average rankings\"",
            "operation": " make sure the output order: average ranking first, then first name."
        },
        "142": {
            "condition": "When computing average rankings",
            "operation": " use lowercase \"avg(ranking)\" without an alias instead of \"AVG(T2.ranking) AS average_ranking\"."
        },
        "143": {
            "condition": "When combining players table T1 and rankings table T2",
            "operation": " link rows where T1.player_id = T2.player_id and keep only matching pairs (inner match)."
        },
        "144": {
            "condition": "When answering about \"first names of all players and their average rankings\", When computing average rankings, When combining players table T1 and rankings table T2, When grouping by first name",
            "operation": " organize results by T1.first_name and compute average ranking per group."
        },
        "145": {
            "condition": "When answering about \"first names of all players and their average rankings\"",
            "operation": " make sure the output order: average ranking first, then first name."
        },
        "146": {
            "condition": "When selecting columns from the players table",
            "operation": " use \"first_name\" without table alias instead of \"T1.first_name\"."
        },
        "147": {
            "condition": "When calculating average rankings",
            "operation": " use \"avg(ranking)\" as the first output column."
        },
        "148": {
            "condition": "When joining players and rankings tables",
            "operation": " use consistent spacing around the equals operator in the join condition \"T1.player_id = T2.player_id\"."
        },
        "149": {
            "condition": "When answering about \"first names of all players and their average rankings\", When selecting columns from the players table, When calculating average rankings, When joining players and rankings tables, When grouping results by first name",
            "operation": " use \"GROUP BY T1.first_name\" to organize results by player first names."
        },
        "150": {
            "condition": "When answering about \"total ranking points for each player and their first name\"",
            "operation": " make sure the output order: first_name, sum(ranking_points)"
        },
        "151": {
            "condition": "When combining players table (T1) and rankings table (T2) for shared entities",
            "operation": " link rows where T1.player_id = T2.player_id exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "152": {
            "condition": "When the question says \"per player\"",
            "operation": " organize results by T1.first_name and compute sum of ranking_points per group"
        },
        "153": {
            "condition": "When the question asks for \"total ranking points\"",
            "operation": " compute the sum of T2.ranking_points for each group"
        },
        "154": {
            "condition": "When answering about \"total ranking points for each player and their first name\", When combining players table (T1) and rankings table (T2) for shared entities, When the question says \"per player\", When the question asks for \"total ranking points\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms"
        },
        "155": {
            "condition": "When answering about \"total ranking points for each player and their first name\"",
            "operation": " make sure the output order: SUM(T2.ranking_points) first, then T1.first_name."
        },
        "156": {
            "condition": "When computing aggregate values",
            "operation": " do not assign aliases to aggregate functions like SUM(T2.ranking_points)."
        },
        "157": {
            "condition": "When combining players T1 and rankings T2",
            "operation": " link rows where T1.player_id = T2.player_id and keep only matching pairs (inner match)."
        },
        "158": {
            "condition": "When answering about \"total ranking points for each player and their first name\", When computing aggregate values, When combining players T1 and rankings T2, When grouping by player attributes",
            "operation": " organize results by T1.first_name and compute the sum of ranking_points per group."
        },
        "159": {
            "condition": "When answering about \"first names of all players and their total ranking points\"",
            "operation": " make sure the output order: T1.first_name, sum(ranking_points)."
        },
        "160": {
            "condition": "When combining players and rankings tables",
            "operation": " link rows where T1.player_id = T2.player_id and keep only matching pairs (inner match)."
        },
        "161": {
            "condition": "When the question asks for \"total ranking points\"",
            "operation": " compute the sum of ranking_points values for each player."
        },
        "162": {
            "condition": "When answering about \"first names of all players and their total ranking points\", When combining players and rankings tables, When the question asks for \"total ranking points\", When grouping by player names",
            "operation": " organize results by T1.first_name and compute the requested aggregate per group."
        },
        "163": {
            "condition": "When the question asks for \"first names of all players and their total ranking points\"",
            "operation": " make sure the output order starts with the aggregate function sum(ranking_points) before T1.first_name."
        },
        "164": {
            "condition": "When calculating total ranking points",
            "operation": " do not add an alias like total_ranking_points to the SUM expression."
        },
        "165": {
            "condition": "When combining players and rankings tables",
            "operation": " link rows where T1.player_id = T2.player_id and keep only matching pairs (inner match)."
        },
        "166": {
            "condition": "When the question asks for \"first names of all players and their total ranking points\", When calculating total ranking points, When combining players and rankings tables, When grouping by player first names",
            "operation": " organize results by T1.first_name and compute the sum of ranking_points per group."
        },
        "167": {
            "condition": "When the question asks for \"number of players for each country\"",
            "operation": " use \"country_code\" instead of \"country\" in both the output and grouping."
        },
        "168": {
            "condition": "When counting players",
            "operation": " place the count result first in the output order before the country_code."
        },
        "169": {
            "condition": "When the question asks for \"number of players for each country\", When counting players, When grouping by country",
            "operation": " use the exact column token \"country_code\" for grouping and output."
        },
        "170": {
            "condition": "When the question asks for \"players from each country\"",
            "operation": " use \"country_code\" instead of \"country\" in both the output and grouping."
        },
        "171": {
            "condition": "When counting players per country",
            "operation": " place the count result first in the output order before the country_code."
        },
        "172": {
            "condition": "When the question asks for \"players from each country\", When counting players per country, When grouping by country",
            "operation": " use the exact token \"country_code\" for grouping and output."
        },
        "173": {
            "condition": "When the question asks for the country with the greatest number of players",
            "operation": " group results by the exact token \"country_code\" from the players table."
        },
        "174": {
            "condition": "When counting players per country",
            "operation": " count the number of rows using the canonical key for players (player_id) to determine frequency."
        },
        "175": {
            "condition": "When ranking countries by player count",
            "operation": " order the results by the count of players in descending order to find the highest count."
        },
        "176": {
            "condition": "When the question asks for the country with the greatest number of players, When counting players per country, When ranking countries by player count, When selecting the top result",
            "operation": " return only the first row after ordering by count to get the country with the greatest number of players."
        },
        "177": {
            "condition": "When counting players per country",
            "operation": " use the exact column token \"country_code\" for grouping and count all rows using count(*)"
        },
        "178": {
            "condition": "When finding the country with the greatest number of players",
            "operation": " order the results by count(*) in descending direction and keep only the first row"
        },
        "179": {
            "condition": "When counting players per country, When finding the country with the greatest number of players, When outputting results",
            "operation": " include only the \"country_code\" column in the output, not the count value"
        },
        "180": {
            "condition": "When answering about \"the country with the most players\"",
            "operation": " group rows by the exact token \"country_code\" and count the number of players per group."
        },
        "181": {
            "condition": "When counting players",
            "operation": " use the canonical key \"player_id\" to count the number of distinct players."
        },
        "182": {
            "condition": "When finding the country with the highest count",
            "operation": " order the results by the count in descending direction and keep only the first row."
        },
        "183": {
            "condition": "When answering about \"the country with the most players\", When counting players, When finding the country with the highest count, When producing output",
            "operation": " return only the \"country_code\" column for the result."
        },
        "184": {
            "condition": "When answering about \"the country with the most players\"",
            "operation": " make sure the output order: only include the country_code column."
        },
        "185": {
            "condition": "When counting players per country",
            "operation": " use count(*) directly in the ORDER BY clause instead of creating an alias for it."
        },
        "186": {
            "condition": "When grouping by country_code",
            "operation": " organize results by the exact token \"country_code\" and compute the count of players per group."
        },
        "187": {
            "condition": "When the question asks for \"the most players\"",
            "operation": " rank rows by count(*) in descending order and keep only the first 1 row."
        },
        "188": {
            "condition": "When answering about \"the country with the most players\", When counting players per country, When grouping by country_code, When the question asks for \"the most players\", When producing output for this question",
            "operation": " do not include the count value in the results, only return the country_code."
        },
        "189": {
            "condition": "When the question asks for \"codes of countries that have more than 50 players\"",
            "operation": " group rows by \"country_code\" and count the number of players per group."
        },
        "190": {
            "condition": "When counting players per country",
            "operation": " use the count of all rows in each group to determine the number of players."
        },
        "191": {
            "condition": "When filtering for groups with more than 50 players",
            "operation": " apply the condition \"count(*) > 50\" after grouping rather than before grouping."
        },
        "192": {
            "condition": "When the question asks for \"codes of countries that have more than 50 players\", When counting players per country, When filtering for groups with more than 50 players, When answering about country codes with player counts",
            "operation": " make sure the output order includes only \"country_code\" for groups that satisfy the count condition."
        },
        "193": {
            "condition": "When the question asks for \"codes of countries with more than 50 players\"",
            "operation": " group results by country_code and count players per group."
        },
        "194": {
            "condition": "When filtering on aggregate counts like \"more than 50 players\"",
            "operation": " apply the count(*) > 50 condition in a HAVING clause after grouping, not in a WHERE clause."
        },
        "195": {
            "condition": "When the question asks for \"codes of countries with more than 50 players\", When filtering on aggregate counts like \"more than 50 players\", When counting players",
            "operation": " use count(*) to count all rows in each country group."
        },
        "196": {
            "condition": "When answering about \"total number of tours for each ranking date\"",
            "operation": " make sure the output order: ranking_date, sum(tours)."
        },
        "197": {
            "condition": "When the question asks for \"total number of tours\"",
            "operation": " use the exact column token \"sum(tours)\" from the rankings table."
        },
        "198": {
            "condition": "When the question says \"for each ranking date\"",
            "operation": " organize results by the exact token \"ranking_date\" from the rankings table."
        },
        "199": {
            "condition": "When answering about \"total number of tours for each ranking date\", When the question asks for \"total number of tours\", When the question says \"for each ranking date\", When selecting data",
            "operation": " use FROM rankings instead of FROM tours to access the correct table containing ranking_date and tour count information."
        },
        "200": {
            "condition": "When answering about \"total number of tours for each ranking date\"",
            "operation": " make sure the output order: SUM(tours) first, then ranking_date."
        },
        "201": {
            "condition": "When the question asks for \"total number of tours\"",
            "operation": " compute the sum of the tours column."
        },
        "202": {
            "condition": "When answering about \"total number of tours for each ranking date\", When the question asks for \"total number of tours\", When the question says \"for each ranking date\"",
            "operation": " organize results by the ranking_date column and compute the requested aggregate per group."
        },
        "203": {
            "condition": "When answering about \"total tours for each ranking date\"",
            "operation": " make sure the output order: ranking_date, sum(tours)."
        },
        "204": {
            "condition": "When the question mentions \"total tours\"",
            "operation": " \"total tours\" actually means \"sum(tours) in schema\"."
        },
        "205": {
            "condition": "When the question asks for \"each ranking date\"",
            "operation": " organize results by ranking_date and compute requested aggregates per group."
        },
        "206": {
            "condition": "When answering about \"total tours for each ranking date\", When the question mentions \"total tours\", When the question asks for \"each ranking date\", When querying for tour data",
            "operation": " use the rankings table instead of the tours table as the source of data."
        },
        "207": {
            "condition": "When answering about \"total tours for each ranking date\"",
            "operation": " make sure the output order: sum(tours) first, then ranking_date."
        },
        "208": {
            "condition": "When the question asks for \"total tours\"",
            "operation": " compute the sum of the exact column \"tours\" from the rankings table."
        },
        "209": {
            "condition": "When the question says \"for each ranking date\"",
            "operation": " organize results by the exact column \"ranking_date\" from the rankings table."
        },
        "210": {
            "condition": "When answering about \"total tours for each ranking date\", When the question asks for \"total tours\", When the question says \"for each ranking date\", When producing output",
            "operation": " do not alias the sum(tours) expression as \"total_tours\" - use the unaliased expression directly."
        },
        "211": {
            "condition": "When answering about \"number of matches happened in each year\"",
            "operation": " make sure the output order: COUNT(*) first, then YEAR."
        },
        "212": {
            "condition": "When the question mentions \"year\"",
            "operation": " \"year\" actually means \"YEAR\" in schema (uppercase)."
        },
        "213": {
            "condition": "When the question asks for \"count of matches\"",
            "operation": " compute the number of rows using the canonical key for matches (implied by COUNT(*))."
        },
        "214": {
            "condition": "When answering about \"number of matches happened in each year\", When the question mentions \"year\", When the question asks for \"count of matches\", When the question says \"per year\"/\"each year\"",
            "operation": " organize results by YEAR and compute requested aggregates per group."
        },
        "215": {
            "condition": "When answering about \"matches played in each year\"",
            "operation": " make sure the output order: COUNT(*) first, then YEAR."
        },
        "216": {
            "condition": "When referring to the year column",
            "operation": " use uppercase \"YEAR\" for both column reference and grouping instead of lowercase \"year\"."
        },
        "217": {
            "condition": "When answering about \"matches played in each year\", When referring to the year column, When counting matches per year",
            "operation": " compute the number of rows using COUNT(*) while grouping by YEAR."
        },
        "218": {
            "condition": "When the question asks for \"name and rank of winners\"",
            "operation": " use columns \"winner_name\" and \"winner_rank\" from table \"matches\"."
        },
        "219": {
            "condition": "When the question asks for \"youngest winners\"",
            "operation": " order results by \"winner_age\" in ascending order."
        },
        "220": {
            "condition": "When the question asks for \"3 youngest winners\"",
            "operation": " limit results to the first 3 rows after ordering by \"winner_age\"."
        },
        "221": {
            "condition": "When the question asks for \"name and rank of winners\", When the question asks for \"youngest winners\", When the question asks for \"3 youngest winners\", When retrieving results from the \"matches\" table",
            "operation": " ensure distinct values are returned for winner_name and winner_rank to avoid duplicates."
        },
        "222": {
            "condition": "When the question asks for \"names and ranks of winners\"",
            "operation": " use the exact column tokens \"winner_name\" and \"winner_rank\" from the matches table."
        },
        "223": {
            "condition": "When the question asks for \"three youngest winners\"",
            "operation": " order rows by \"winner_age\" in ascending order and keep the first 3 rows."
        },
        "224": {
            "condition": "When retrieving winner information",
            "operation": " ensure distinct values are returned for winner_name and winner_rank to avoid duplicates."
        },
        "225": {
            "condition": "When the question asks for \"names and ranks of winners\", When the question asks for \"three youngest winners\", When retrieving winner information, When querying about winners",
            "operation": " use the \"matches\" table as the source table, not a \"winners\" table."
        },
        "226": {
            "condition": "When counting different winners",
            "operation": " count distinct \"winner_name\" values instead of counting all records."
        },
        "227": {
            "condition": "When answering about WTA Championships participants",
            "operation": " use the \"matches\" table as the data source instead of joining \"players\" and \"championships\" tables."
        },
        "228": {
            "condition": "When filtering for WTA Championships tournament",
            "operation": " use \"tourney_name = 'WTA Championships'\" as the filter condition."
        },
        "229": {
            "condition": "When counting different winners, When answering about WTA Championships participants, When filtering for WTA Championships tournament, When filtering for left-handed players",
            "operation": " use \"winner_hand = 'L'\" as the filter condition instead of 'left'."
        },
        "230": {
            "condition": "When counting winners",
            "operation": " count distinct \"winner_name\" instead of all rows to get unique winners rather than all matches."
        },
        "231": {
            "condition": "When accessing match data",
            "operation": " use table \"matches\" instead of \"winners\" as the correct data source."
        },
        "232": {
            "condition": "When filtering by tournament name",
            "operation": " use \"tourney_name = 'WTA Championships'\" instead of \"tournament = 'WTA Championships'\" to use the correct column name."
        },
        "233": {
            "condition": "When counting winners, When accessing match data, When filtering by tournament name, When filtering by handedness",
            "operation": " use \"winner_hand = 'L'\" instead of \"handed = 'left'\" to use both the correct column name and abbreviated value format."
        },
        "234": {
            "condition": "When answering about \"first name, country code and birth date of the winner who has the highest rank points\"",
            "operation": " make sure the output order: T1.first_name, T1.country_code, T1.birth_date."
        },
        "235": {
            "condition": "When combining players and matches tables",
            "operation": " link rows where T1.player_id = T2.winner_id and keep only matching pairs (inner match)."
        },
        "236": {
            "condition": "When the question mentions \"highest rank points\"",
            "operation": " rank rows by T2.winner_rank_points in descending order and keep the first 1 row."
        },
        "237": {
            "condition": "When answering about \"first name, country code and birth date of the winner who has the highest rank points\", When combining players and matches tables, When the question mentions \"highest rank points\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "238": {
            "condition": "When answering about player information with winner rank points",
            "operation": " combine players table (T1) and matches table (T2) by linking rows where T1.player_id equals T2.winner_id, keeping only matching pairs."
        },
        "239": {
            "condition": "When the question asks for \"most winner rank points\"",
            "operation": " rank rows by T2.winner_rank_points in descending order and keep the first 1 row."
        },
        "240": {
            "condition": "When selecting output columns",
            "operation": " return T1.first_name, T1.country_code, and T1.birth_date in that order."
        },
        "241": {
            "condition": "When answering about player information with winner rank points, When the question asks for \"most winner rank points\", When selecting output columns, When referring to columns",
            "operation": " always use table aliases T1 for players table and T2 for matches table with exact column names as shown in the schema."
        },
        "242": {
            "condition": "When answering about \"number of players for each hand type\"",
            "operation": " make sure the output order: count first, then hand type."
        },
        "243": {
            "condition": "When the question asks for \"number of players\"",
            "operation": " compute the count of rows using the canonical key for players."
        },
        "244": {
            "condition": "When the question says \"for each hand type\"",
            "operation": " organize results by the exact token \"hand\" and compute the count per group."
        },
        "245": {
            "condition": "When answering about \"number of players for each hand type\", When the question asks for \"number of players\", When the question says \"for each hand type\", When producing output",
            "operation": " place the aggregate count column before the grouping column \"hand\" in the result."
        },
        "246": {
            "condition": "When the question asks for \"hand type\"",
            "operation": " use the exact column token \"hand\" from the players table."
        },
        "247": {
            "condition": "When grouping by hand type",
            "operation": " organize results by the \"hand\" column and compute counts per group."
        },
        "248": {
            "condition": "When counting players",
            "operation": " compute the number of rows using the canonical key for players."
        },
        "249": {
            "condition": "When the question asks for \"hand type\", When grouping by hand type, When counting players, When presenting results for \"how many players are there for each hand type\"",
            "operation": " place the count result as the first output column followed by the hand type column."
        }
    },
    "battle_death": {
        "0": {
            "condition": "When the question asks about ships",
            "operation": " use the exact table name \"ship\" instead of \"ships\"."
        },
        "1": {
            "condition": "When the question asks about ships that ended up being 'Captured'",
            "operation": " use the exact column name \"disposition_of_ship\" with the exact literal value 'Captured' instead of using \"status\" with 'Sunk'."
        },
        "2": {
            "condition": "When the question asks about ships, When the question asks about ships that ended up being 'Captured', When counting ships",
            "operation": " count all rows from the \"ship\" table that match the condition disposition_of_ship = 'Captured'."
        },
        "3": {
            "condition": "When the question asks for ships information",
            "operation": " use the table name \"ship\" exactly as specified in the schema."
        },
        "4": {
            "condition": "When ordering by name in descending alphabetical order",
            "operation": " sort the \"name\" column in descending direction (Z to A)."
        },
        "5": {
            "condition": "When the question asks for ships information, When ordering by name in descending alphabetical order, When selecting output columns",
            "operation": " include both \"name\" and \"tonnage\" columns in the result set."
        },
        "6": {
            "condition": "When the question asks for \"name, date and result of each battle\"",
            "operation": " include the exact column \"result\" from table \"battle\" in the output."
        },
        "7": {
            "condition": "When referencing the table containing battle information",
            "operation": " use the exact table name \"battle\" instead of \"battles\"."
        },
        "8": {
            "condition": "When the question asks for \"name, date and result of each battle\", When referencing the table containing battle information, When answering about battle details",
            "operation": " make sure the output order includes name, date, and result columns."
        },
        "9": {
            "condition": "When the question asks for specific columns \"name\", \"date\", and \"result\"",
            "operation": " include only those exact columns in the output."
        },
        "10": {
            "condition": "When the question asks for specific columns \"name\", \"date\", and \"result\", When the amends specify to remove a column from the SELECT list",
            "operation": " eliminate that unnecessary column from the output to match the required behavior."
        },
        "11": {
            "condition": "When the question asks for maximum and minimum death toll",
            "operation": " use \"max(killed)\" and \"min(killed)\" as the aggregate functions instead of \"MAX(death_toll)\" and \"MIN(death_toll)\"."
        },
        "12": {
            "condition": "When querying for death toll information",
            "operation": " use the \"death\" table as the data source instead of the \"events\" table."
        },
        "13": {
            "condition": "When the question asks for maximum and minimum death toll, When querying for death toll information, When calculating overall maximum and minimum values",
            "operation": " do not include any GROUP BY clause, as the aggregates should be computed across all rows rather than per group."
        },
        "14": {
            "condition": "When answering about \"average number of injuries\"",
            "operation": " use the \"injured\" column from the \"death\" table instead of the \"injuries\" column from the \"incidents\" table."
        },
        "15": {
            "condition": "When calculating the average",
            "operation": " compute the average of all values in the \"injured\" column without applying any filter for positive values."
        },
        "16": {
            "condition": "When answering about \"average number of injuries\", When calculating the average, When referencing the table",
            "operation": " use the \"death\" table as the source table instead of the \"incidents\" table."
        },
        "17": {
            "condition": "When answering about death and injury situations",
            "operation": " make sure the output order: T1.killed, T1.injured"
        },
        "18": {
            "condition": "When the question mentions \"ship with tonnage 't'\"",
            "operation": " filter rows where T2.tonnage = 't' exactly"
        },
        "19": {
            "condition": "When combining death and ship tables",
            "operation": " link rows where T1.caused_by_ship_id = T2.id and keep only matching pairs (inner match)"
        },
        "20": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms"
        },
        "21": {
            "condition": "When answering about death and injury situations, When the question mentions \"ship with tonnage 't'\", When combining death and ship tables, When choosing identifier delimiters, When handling text literals",
            "operation": " do not change case, spacing, or punctuation of 't'"
        },
        "22": {
            "condition": "When the question asks for battle results",
            "operation": " use the exact column name \"RESULT\" instead of \"results\"."
        },
        "23": {
            "condition": "When referring to the battles table",
            "operation": " use the exact table name \"battle\" instead of \"battles\"."
        },
        "24": {
            "condition": "When filtering for Bulgarian commander not being 'Boril'",
            "operation": " use the exact condition \"bulgarian_commander != 'Boril'\" and do not include any nationality condition."
        },
        "25": {
            "condition": "When the question asks for battle results, When referring to the battles table, When filtering for Bulgarian commander not being 'Boril', When selecting output columns",
            "operation": " maintain the order \"name, RESULT\" as specified in the question."
        },
        "26": {
            "condition": "When answering about battles that lost ships",
            "operation": " join table battles as T1 with table ship as T2 using T1.id = T2.lost_in_battle to properly relate ships to battles they were lost in."
        },
        "27": {
            "condition": "When the question asks for \"different ids and names\"",
            "operation": " use DISTINCT to eliminate duplicate battle records."
        },
        "28": {
            "condition": "When selecting battle information",
            "operation": " select T1.id and T1.name instead of generic battle_id and name with explicit table aliases."
        },
        "29": {
            "condition": "When filtering for 'Brig' type ships",
            "operation": " filter on T2.ship_type = 'Brig' to correctly reference the ship table's column."
        },
        "30": {
            "condition": "When answering about battles that lost ships, When the question asks for \"different ids and names\", When selecting battle information, When filtering for 'Brig' type ships, When determining lost ships",
            "operation": " do not use result = 'lost' filter since the ship's presence in lost_in_battle already indicates the loss."
        },
        "31": {
            "condition": "When selecting battle identifiers and names",
            "operation": " use \"T1.id\" and \"T1.name\" instead of \"battle_id\" and \"battle_name\"."
        },
        "32": {
            "condition": "When calculating total deaths per battle",
            "operation": " join \"battle AS T1\" with \"ship AS T2\" using \"T1.id = T2.lost_in_battle\" and then join with \"death AS T3\" using \"T2.id = T3.caused_by_ship_id\" to establish the relationship chain."
        },
        "33": {
            "condition": "When aggregating deaths across multiple ships",
            "operation": " group the results by \"T1.id\" to get per-battle totals."
        },
        "34": {
            "condition": "When selecting battle identifiers and names, When calculating total deaths per battle, When aggregating deaths across multiple ships, When filtering for battles with more than 10 total deaths",
            "operation": " apply the condition \"sum(T3.killed) > 10\" after aggregation using HAVING instead of WHERE."
        },
        "35": {
            "condition": "When answering about \"ship id and name that caused most total injuries\"",
            "operation": " make sure the output order: T2.id, T2.name."
        },
        "36": {
            "condition": "When the question mentions \"ship id\" and \"name\"",
            "operation": " \"ship id\" actually means \"T2.id in schema\" and \"name\" actually means \"T2.name in schema\"."
        },
        "37": {
            "condition": "When combining death AS T1 and ship AS T2 for shared entities",
            "operation": " link rows where T1.caused_by_ship_id = T2.id exactly as shown; keep only matching pairs (inner match)."
        },
        "38": {
            "condition": "When the question asks for \"most total injuries\" (which means deaths)",
            "operation": " organize results by T2.id and compute count(*) per group."
        },
        "39": {
            "condition": "When answering about \"ship id and name that caused most total injuries\", When the question mentions \"ship id\" and \"name\", When combining death AS T1 and ship AS T2 for shared entities, When the question asks for \"most total injuries\" (which means deaths), When the question mentions \"most\" or \"highest\"",
            "operation": " rank rows by count(*) in descending order and keep the first 1 row."
        },
        "40": {
            "condition": "When the question asks for battle names",
            "operation": " use the column \"name\" from the \"battle\" table instead of \"battle_name\" from \"battles\"."
        },
        "41": {
            "condition": "When filtering for bulgarian commander 'Kaloyan'",
            "operation": " use the condition \"bulgarian_commander = 'Kaloyan'\" exactly as specified."
        },
        "42": {
            "condition": "When filtering for latin commander 'Baldwin I'",
            "operation": " use the condition \"latin_commander = 'Baldwin I'\" exactly as specified."
        },
        "43": {
            "condition": "When the question asks for battle names, When filtering for bulgarian commander 'Kaloyan', When filtering for latin commander 'Baldwin I', When the question asks for distinct battle names",
            "operation": " do not use DISTINCT since the query correctly references the proper table structure and column names without needing deduplication."
        },
        "44": {
            "condition": "When the question asks for \"different results\" or \"distinct results\"",
            "operation": " count the number of unique values in the \"RESULT\" column."
        },
        "45": {
            "condition": "When counting distinct values",
            "operation": " use the exact column name \"RESULT\" as shown in the schema."
        },
        "46": {
            "condition": "When the question asks for \"different results\" or \"distinct results\", When counting distinct values, When referencing the table containing battle information",
            "operation": " use the exact table name \"battle\" (not \"battles\") as specified in the schema."
        },
        "47": {
            "condition": "When answering about \"battles that did not lose any ship with tonnage '225'\"",
            "operation": " use the \"battle\" table instead of \"battles\" as the main data source."
        },
        "48": {
            "condition": "When counting battles where no ship of 225 tonnage was lost",
            "operation": " use a subquery with NOT IN filtering on battle id against lost_in_battle values from the ship table."
        },
        "49": {
            "condition": "When checking for ships with specific tonnage",
            "operation": " verify ships with tonnage = '225' exactly (preserving the literal value) in the subquery instead of comparing battle attributes directly."
        },
        "50": {
            "condition": "When answering about \"battles that did not lose any ship with tonnage '225'\", When counting battles where no ship of 225 tonnage was lost, When checking for ships with specific tonnage, When referencing ship attributes",
            "operation": " do not use ship_tonnage column reference from the battle table since this attribute belongs to ships rather than battles."
        },
        "51": {
            "condition": "When answering about battles where multiple specific ships were lost",
            "operation": " join the battle table (as T1) with the ship table (as T2) using the key relationship T1.id = T2.lost_in_battle to connect battles to the ships lost in them."
        },
        "52": {
            "condition": "When filtering for ships with exact names 'Lettice' and 'HMS Atalanta'",
            "operation": " create separate conditions for each ship name using the exact literals 'Lettice' and 'HMS Atalanta' with proper case and spacing."
        },
        "53": {
            "condition": "When finding battles where both specific ships were lost",
            "operation": " use set intersection logic instead of AND conditions on the same column, since a single battle cannot have multiple ship_lost values simultaneously."
        },
        "54": {
            "condition": "When answering about battles where multiple specific ships were lost, When filtering for ships with exact names 'Lettice' and 'HMS Atalanta', When finding battles where both specific ships were lost, When selecting battle information",
            "operation": " use qualified column references T1.name and T1.date from the battle table (T1) rather than unqualified column names."
        },
        "55": {
            "condition": "When the question asks about battles with no ships lost",
            "operation": " use EXCEPT operation to exclude battles where ships were lost instead of a simple WHERE filter."
        },
        "56": {
            "condition": "When referring to the battles table",
            "operation": " use the exact table name \"battle\" instead of \"battles\"."
        },
        "57": {
            "condition": "When combining battle and ship information",
            "operation": " join tables where T1.id = T2.lost_in_battle to link ships to the battles they were lost in."
        },
        "58": {
            "condition": "When filtering for location 'English Channel'",
            "operation": " apply the condition T2.location = 'English Channel' to the ship table instead of the battle table."
        },
        "59": {
            "condition": "When the question asks about battles with no ships lost, When referring to the battles table, When combining battle and ship information, When filtering for location 'English Channel', When determining ships lost",
            "operation": " remove the ships_lost = 0 condition since the EXCEPT operation properly handles the exclusion logic for battles where ships were lost."
        },
        "60": {
            "condition": "When the question asks for \"notes\" of death events",
            "operation": " use the exact column name \"note\" from the death table instead of \"notes\"."
        },
        "61": {
            "condition": "When querying death events",
            "operation": " use the \"death\" table instead of \"death_events\" as the data source."
        },
        "62": {
            "condition": "When the question asks for \"notes\" of death events, When querying death events, When filtering for events containing 'East'",
            "operation": " apply the filter condition \"note LIKE '%East%'\" instead of filtering on location columns."
        }
    },
    "student_transcripts_tracking": {
        "0": {
            "condition": "When the question asks for \"addresses including line 1 and line 2\"",
            "operation": " select both \"line_1\" and \"line_2\" columns from the Addresses table."
        },
        "1": {
            "condition": "When the question specifies \"all the addresses\"",
            "operation": " return all rows from the Addresses table without filtering."
        },
        "2": {
            "condition": "When the question asks for \"addresses including line 1 and line 2\", When the question specifies \"all the addresses\", When the question mentions \"line 1\" and \"line 2\"",
            "operation": " these correspond exactly to the \"line_1\" and \"line_2\" column names in the Addresses table."
        },
        "3": {
            "condition": "When the question mentions \"first line\" for addresses",
            "operation": " use the exact column name \"line_1\" from the addresses table."
        },
        "4": {
            "condition": "When the question mentions \"second line\" for addresses",
            "operation": " use the exact column name \"line_2\" from the addresses table."
        },
        "5": {
            "condition": "When the question mentions \"first line\" for addresses, When the question mentions \"second line\" for addresses, When the question asks for specific address records with IDs 1 and 2",
            "operation": " maintain the filter condition id = 1 OR id = 2 to retrieve only those specific records."
        },
        "6": {
            "condition": "When referring to the addresses table",
            "operation": " use lowercase \"addresses\" instead of uppercase \"Addresses\" for the table name."
        },
        "7": {
            "condition": "When referring to the addresses table, When the question asks for all addresses without filtering conditions",
            "operation": " do not apply any WHERE clause filters like \"address_id = 1 OR address_id = 2\" and return all records from the addresses table."
        },
        "8": {
            "condition": "When the question asks for a course description",
            "operation": " use the exact column name \"course_description\" from the Courses table."
        },
        "9": {
            "condition": "When filtering by course name",
            "operation": " use the exact literal value 'math' (lowercase) for case-sensitive matching."
        },
        "10": {
            "condition": "When the question asks for a course description, When filtering by course name, When referencing the Courses table",
            "operation": " use the exact table name \"Courses\" with proper capitalization."
        },
        "11": {
            "condition": "When answering about \"descriptions for math courses\"",
            "operation": " make sure the output order: course_description."
        },
        "12": {
            "condition": "When the question mentions \"math courses\"",
            "operation": " \"math\" actually means \"course_name = 'math'\" in schema."
        },
        "13": {
            "condition": "When selecting from the courses table",
            "operation": " reference the table as \"Courses\" (with exact case and quotes) instead of \"courses\"."
        },
        "14": {
            "condition": "When answering about \"descriptions for math courses\", When the question mentions \"math courses\", When selecting from the courses table, When filtering for specific courses",
            "operation": " use the exact literal value 'math' (lowercase) for the course_name condition."
        },
        "15": {
            "condition": "When the question asks for \"zip code\"",
            "operation": " use the exact column token \"zip_postcode\" from the Addresses table instead of \"zip_code\"."
        },
        "16": {
            "condition": "When referencing the table containing address information",
            "operation": " use the exact table name \"Addresses\" (with capital A) instead of \"addresses\"."
        },
        "17": {
            "condition": "When the question asks for \"zip code\", When referencing the table containing address information, When filtering for the city \"Port Chelsea\"",
            "operation": " maintain the exact literal value 'Port Chelsea' with the same case and spacing in the condition."
        },
        "18": {
            "condition": "When the question asks for \"zip code\"",
            "operation": " use the exact column \"zip_postcode\" from the \"Addresses\" table."
        },
        "19": {
            "condition": "When filtering for city \"Port Chelsea\"",
            "operation": " use the exact literal 'Port Chelsea' with the column \"city\" from the \"Addresses\" table."
        },
        "20": {
            "condition": "When the question asks for \"zip code\", When filtering for city \"Port Chelsea\", When selecting from the database",
            "operation": " use the \"Addresses\" table instead of any \"cities\" table."
        },
        "21": {
            "condition": "When answering about \"most number of degrees per department\"",
            "operation": " make sure the output order: department name, department id, count of degrees."
        },
        "22": {
            "condition": "When the question mentions \"department\"",
            "operation": " use \"T2.department_name\" for department name and \"T1.department_id\" for department id."
        },
        "23": {
            "condition": "When combining Degree_Programs as T1 and Departments as T2",
            "operation": " link rows where T1.department_id = T2.department_id and keep only matching pairs (inner match)."
        },
        "24": {
            "condition": "When counting degrees per department",
            "operation": " count using all rows from T1 (Degree_Programs) grouped by T1.department_id."
        },
        "25": {
            "condition": "When answering about \"most number of degrees per department\", When the question mentions \"department\", When combining Degree_Programs as T1 and Departments as T2, When counting degrees per department, When the question asks for \"most number of degrees\"",
            "operation": " rank departments by count of degrees in descending order and keep only the top 1 row."
        },
        "26": {
            "condition": "When answering about \"which department offers the most number of degrees\"",
            "operation": " make sure the output order: department_name, department_id."
        },
        "27": {
            "condition": "When the question asks for \"most number of degrees\"",
            "operation": " rank departments by count of degree programs in descending order and keep the first 1 row."
        },
        "28": {
            "condition": "When counting degree programs",
            "operation": " compute the number of rows using the canonical key T1.department_id."
        },
        "29": {
            "condition": "When combining Degree_Programs T1 and Departments T2",
            "operation": " link rows where T1.department_id = T2.department_id and keep only matching pairs (inner match)."
        },
        "30": {
            "condition": "When grouping by department",
            "operation": " organize results by T1.department_id and compute count per group."
        },
        "31": {
            "condition": "When answering about \"which department offers the most number of degrees\", When the question asks for \"most number of degrees\", When counting degree programs, When combining Degree_Programs T1 and Departments T2, When grouping by department, When producing output",
            "operation": " do not include the count aggregation in the SELECT list, only include department_name and department_id."
        },
        "32": {
            "condition": "When answering about \"department with the most number of degrees\"",
            "operation": " join degree_programs as T1 with departments as T2 on T1.department_id = T2.department_id using inner match."
        },
        "33": {
            "condition": "When counting degree programs per department",
            "operation": " use count(*) to count all rows in T1 grouped by T1.department_id."
        },
        "34": {
            "condition": "When selecting department information",
            "operation": " output T2.department_name and T1.department_id from the joined tables."
        },
        "35": {
            "condition": "When answering about \"department with the most number of degrees\", When counting degree programs per department, When selecting department information, When finding the department with the most degrees",
            "operation": " order results by the count in descending order and keep only the top 1 row."
        },
        "36": {
            "condition": "When counting degree programs per department",
            "operation": " use COUNT(*) to count the number of rows in each group instead of selecting the count value in the output."
        },
        "37": {
            "condition": "When ordering by the count of degree programs",
            "operation": " use COUNT(*) DESC in the ORDER BY clause instead of referencing an alias from the SELECT list."
        },
        "38": {
            "condition": "When selecting department information",
            "operation": " include t2.department_name and t1.department_id in the output columns."
        },
        "39": {
            "condition": "When grouping by department",
            "operation": " use GROUP BY t1.department_id to organize results by department identifier."
        },
        "40": {
            "condition": "When finding the department with the most degrees",
            "operation": " use LIMIT 1 to return only the top result after ordering by count in descending order."
        },
        "41": {
            "condition": "When counting degree programs per department, When ordering by the count of degree programs, When selecting department information, When grouping by department, When finding the department with the most degrees, When joining Degree_Programs and Departments",
            "operation": " link tables using t1.department_id = t2.department_id to match department records."
        },
        "42": {
            "condition": "When counting departments that offer degrees",
            "operation": " count distinct \"department_id\" values from the \"Degree_Programs\" table instead of counting all rows from the \"departments\" table."
        },
        "43": {
            "condition": "When counting departments that offer degrees, When handling null values in degree programs",
            "operation": " do not apply a \"degree IS NOT NULL\" filter as the distinct count inherently handles null values appropriately."
        },
        "44": {
            "condition": "When counting different departments",
            "operation": " count distinct values of \"department_id\" instead of counting all rows."
        },
        "45": {
            "condition": "When accessing degree-offering data",
            "operation": " use the \"Degree_Programs\" table instead of the \"departments\" table, as it inherently contains only degree-offering programs."
        },
        "46": {
            "condition": "When counting different departments, When accessing degree-offering data, When filtering for degree-offering programs",
            "operation": " do not apply a WHERE clause with \"degree_offered = 'yes'\" since the Degree_Programs table already contains only relevant programs."
        },
        "47": {
            "condition": "When counting different degree names",
            "operation": " count distinct values of \"degree_summary_name\" column."
        },
        "48": {
            "condition": "When the question asks about degree names",
            "operation": " use the \"Degree_Programs\" table as the source."
        },
        "49": {
            "condition": "When counting different degree names, When the question asks about degree names, When selecting from Degree_Programs table",
            "operation": " use the exact identifier \"Degree_Programs\" with proper case and no quotes."
        },
        "50": {
            "condition": "When answering about \"different degrees offered\"",
            "operation": " count distinct values of \"degree_summary_name\" column."
        },
        "51": {
            "condition": "When querying for degree information",
            "operation": " use the \"Degree_Programs\" table instead of \"degrees\" table."
        },
        "52": {
            "condition": "When answering about \"different degrees offered\", When querying for degree information, When counting distinct values",
            "operation": " use the exact column token \"degree_summary_name\" with DISTINCT operation."
        },
        "53": {
            "condition": "When answering about \"names and descriptions of all sections\"",
            "operation": " make sure the output order: section_name, section_description."
        },
        "54": {
            "condition": "When the question mentions \"names\"",
            "operation": " \"names\" actually means \"section_name in schema\"."
        },
        "55": {
            "condition": "When the question mentions \"descriptions\"",
            "operation": " \"descriptions\" actually means \"section_description in schema\"."
        },
        "56": {
            "condition": "When the question asks for \"all sections\"",
            "operation": " retrieve all records without any filtering conditions."
        },
        "57": {
            "condition": "When answering about \"names and descriptions of all sections\", When the question mentions \"names\", When the question mentions \"descriptions\", When the question asks for \"all sections\", When referencing the table containing sections",
            "operation": " use the exact identifier \"Sections\" with proper case sensitivity as shown in the schema."
        },
        "58": {
            "condition": "When selecting columns from the Sections table",
            "operation": " use \"section_name\" and \"section_description\" instead of \"name\" and \"description\"."
        },
        "59": {
            "condition": "When referencing the Sections table",
            "operation": " use \"Sections\" with proper case sensitivity instead of \"sections\"."
        },
        "60": {
            "condition": "When selecting columns from the Sections table, When referencing the Sections table, When retrieving all records from a table",
            "operation": " do not apply any WHERE filter like \"id > 0\" unless explicitly required by the question."
        },
        "61": {
            "condition": "When answering about courses and their sections",
            "operation": " combine tables \"courses\" as T1 and \"Sections\" as T2 using the exact join condition T1.course_id = T2.course_id, keeping only matching pairs (inner match)."
        },
        "62": {
            "condition": "When the question asks for courses with \"at most 2 sections\"",
            "operation": " organize results by T1.course_id and compute count of sections per course, then filter to keep only groups where count(*) <= 2."
        },
        "63": {
            "condition": "When selecting output columns",
            "operation": " use explicit table aliases T1.course_id and T1.course_name instead of bare column names."
        },
        "64": {
            "condition": "When grouping results",
            "operation": " include GROUP BY T1.course_id to ensure proper aggregation by course."
        },
        "65": {
            "condition": "When answering about courses and their sections, When the question asks for courses with \"at most 2 sections\", When selecting output columns, When grouping results, When filtering aggregated results",
            "operation": " place the count filter count(*) <= 2 in the HAVING clause instead of the WHERE clause."
        },
        "66": {
            "condition": "When answering about \"names and id of courses having at most 2 sections\"",
            "operation": " make sure the output order: course_name, course_id"
        },
        "67": {
            "condition": "When combining Courses as T1 and Sections as T2",
            "operation": " link rows where T1.course_id = T2.course_id and keep only matching pairs (inner match)"
        },
        "68": {
            "condition": "When grouping by course",
            "operation": " organize results by T1.course_id and compute requested aggregates per group"
        },
        "69": {
            "condition": "When answering about \"names and id of courses having at most 2 sections\", When combining Courses as T1 and Sections as T2, When grouping by course, When counting sections per course",
            "operation": " compute the number of rows using the join relationship and ensure the count is less than or equal to 2"
        },
        "70": {
            "condition": "When answering about course names and ids",
            "operation": " make sure the output order: T1.course_id, T1.course_name."
        },
        "71": {
            "condition": "When the question mentions \"course with less than 2 sections\"",
            "operation": " this means courses having at most 2 sections, requiring counting actual section records rather than using a section_count column."
        },
        "72": {
            "condition": "When combining Courses as T1 and Sections as T2",
            "operation": " link rows where T1.course_id = T2.course_id and keep only matching pairs (inner match)."
        },
        "73": {
            "condition": "When counting sections per course",
            "operation": " group by T1.course_id and count the number of section records using count(*)."
        },
        "74": {
            "condition": "When answering about course names and ids, When the question mentions \"course with less than 2 sections\", When combining Courses as T1 and Sections as T2, When counting sections per course, When filtering for courses with less than 2 sections",
            "operation": " use having count(*) <= 2 to include courses with exactly two or fewer sections."
        },
        "75": {
            "condition": "When answering about \"names and ids of every course with less than 2 sections\"",
            "operation": " make sure the output order: course_name first, then course_id."
        },
        "76": {
            "condition": "When combining Courses (T1) and Sections (T2) for shared entities",
            "operation": " link rows where T1.course_id = T2.course_id and keep only matching pairs (inner match)."
        },
        "77": {
            "condition": "When the question asks for courses with \"less than 2 sections\"",
            "operation": " organize results by T1.course_id and compute the count of sections per course, keeping only those groups where the count is less than or equal to 2."
        },
        "78": {
            "condition": "When answering about \"names and ids of every course with less than 2 sections\", When combining Courses (T1) and Sections (T2) for shared entities, When the question asks for courses with \"less than 2 sections\", When counting sections per course",
            "operation": " use the canonical key T1.course_id for grouping and count all matching rows from T2."
        },
        "79": {
            "condition": "When selecting section names from the Sections table",
            "operation": " use the exact column name \"section_name\" instead of \"name\"."
        },
        "80": {
            "condition": "When ordering sections in reverse alphabetical order",
            "operation": " sort by \"section_name\" in descending order instead of ascending order."
        },
        "81": {
            "condition": "When selecting section names from the Sections table, When ordering sections in reverse alphabetical order, When referring to the table containing section information",
            "operation": " use the exact table name \"Sections\" instead of \"sections\"."
        },
        "82": {
            "condition": "When answering about \"the semester which most student registered in\"",
            "operation": " make sure the output order: T1.semester_name, T1.semester_id"
        },
        "83": {
            "condition": "When combining Semesters as T1 and Student_Enrolment as T2",
            "operation": " link rows where T1.semester_id = T2.semester_id and keep only matching pairs (inner match)"
        },
        "84": {
            "condition": "When the question asks for \"most student registered\"",
            "operation": " count the number of rows using T2.semester_id as the counting key per semester group"
        },
        "85": {
            "condition": "When grouping by semester",
            "operation": " organize results by T1.semester_id only instead of both semester_name and semester_id"
        },
        "86": {
            "condition": "When ranking to find the semester with most registrations",
            "operation": " rank rows by count(*) in descending order and keep the first 1 row"
        },
        "87": {
            "condition": "When answering about \"the semester which most student registered in\", When combining Semesters as T1 and Student_Enrolment as T2, When the question asks for \"most student registered\", When grouping by semester, When ranking to find the semester with most registrations, When producing output",
            "operation": " do not include the count column in the final result, only show T1.semester_name and T1.semester_id"
        },
        "88": {
            "condition": "When answering about \"semester with the most students registered\"",
            "operation": " make sure the output order: T1.semester_id, T1.semester_name"
        },
        "89": {
            "condition": "When the question mentions \"most students registered\"",
            "operation": " count the number of enrollment records using T2.semester_id as the counting key"
        },
        "90": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.semester_id = T2.semester_id and keep only matching pairs (inner match)"
        },
        "91": {
            "condition": "When organizing results by semester",
            "operation": " group by T1.semester_id only"
        },
        "92": {
            "condition": "When ranking semesters by enrollment count",
            "operation": " order by count(*) in descending direction and keep only the first row (top result)"
        },
        "93": {
            "condition": "When answering about \"semester with the most students registered\", When the question mentions \"most students registered\", When combining T1 and T2 for shared entities, When organizing results by semester, When ranking semesters by enrollment count, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms"
        },
        "94": {
            "condition": "When answering about \"the one with the most students registered\"",
            "operation": " rank semesters by enrollment count in descending order and keep only the first 1 row."
        },
        "95": {
            "condition": "When combining Semesters and Student_Enrolment tables",
            "operation": " link rows where T1.semester_id = T2.semester_id and keep only matching pairs (inner match)."
        },
        "96": {
            "condition": "When counting students registered",
            "operation": " compute the number of rows using the enrollment records."
        },
        "97": {
            "condition": "When answering about \"the one with the most students registered\", When combining Semesters and Student_Enrolment tables, When counting students registered, When producing output columns",
            "operation": " place T1.semester_name before T1.semester_id in the result."
        },
        "98": {
            "condition": "When the question asks for \"description of the department\"",
            "operation": " use the exact column token \"department_description\" instead of \"description\"."
        },
        "99": {
            "condition": "When referencing the departments table",
            "operation": " use the exact table name \"Departments\" with proper capitalization."
        },
        "100": {
            "condition": "When filtering for department names containing \"computer\"",
            "operation": " use the exact column token \"department_name\" with the pattern '%computer%' to find substring matches."
        },
        "101": {
            "condition": "When the question asks for \"description of the department\", When referencing the departments table, When filtering for department names containing \"computer\", When answering about department descriptions",
            "operation": " make sure the output order contains only the department_description column."
        },
        "102": {
            "condition": "When selecting department description information",
            "operation": " use \"department_description\" as the output column instead of \"description\"."
        },
        "103": {
            "condition": "When filtering by department name containing the word \"computer\"",
            "operation": " use \"department_name\" as the filter column instead of \"name\"."
        },
        "104": {
            "condition": "When referencing the departments table",
            "operation": " use the exact table name \"Departments\" with proper capitalization instead of \"departments\"."
        },
        "105": {
            "condition": "When selecting department description information, When filtering by department name containing the word \"computer\", When referencing the departments table, When searching for names containing the word \"computer\"",
            "operation": " use the pattern '%computer%' to match any text containing that word."
        },
        "106": {
            "condition": "When answering about students enrolled in 2 degree programs",
            "operation": " make sure to join the Student_Enrolment table using T1.student_id = T2.student_id instead of using only the students table."
        },
        "107": {
            "condition": "When grouping for enrollment counts",
            "operation": " group by T1.student_id instead of semester."
        },
        "108": {
            "condition": "When filtering for exactly 2 enrollments",
            "operation": " use HAVING count(*) = 2 instead of WHERE COUNT(degree_program) = 2."
        },
        "109": {
            "condition": "When counting enrollments",
            "operation": " use count(*) instead of count(degree_program)."
        },
        "110": {
            "condition": "When answering about students enrolled in 2 degree programs, When grouping for enrollment counts, When filtering for exactly 2 enrollments, When counting enrollments, When using multiple tables",
            "operation": " add table aliases T1 and T2 with proper qualification instead of using unqualified column names."
        },
        "111": {
            "condition": "When grouping students by their enrollment records",
            "operation": " use only \"T1.student_id\" in the grouping clause, not additional columns like semester_id."
        },
        "112": {
            "condition": "When counting enrollment records for students",
            "operation": " use count(*) = 2 to count total enrollment records rather than counting distinct degree programs."
        },
        "113": {
            "condition": "When grouping students by their enrollment records, When counting enrollment records for students, When the question asks about students enrolled in 2 degree programs",
            "operation": " interpret this as students having exactly two enrollment records total across all semesters and degree programs."
        },
        "114": {
            "condition": "When answering about students who enrolled in 2 degree programs",
            "operation": " use T1.student_id instead of s.id in both SELECT list and GROUP BY clause."
        },
        "115": {
            "condition": "When joining with enrollment data",
            "operation": " reference Student_Enrolment as T2 instead of enrollments e."
        },
        "116": {
            "condition": "When counting enrollment records per student",
            "operation": " use count(*) = 2 instead of COUNT(DISTINCT e.degree_program_id) = 2 to count enrollment records rather than distinct degree programs."
        },
        "117": {
            "condition": "When answering about students who enrolled in 2 degree programs, When joining with enrollment data, When counting enrollment records per student, When aggregating enrollment counts",
            "operation": " remove the DISTINCT modifier from the count aggregation."
        },
        "118": {
            "condition": "When answering about \"Who is enrolled in a Bachelor degree program?\"",
            "operation": " make sure the output order: first_name, middle_name, last_name."
        },
        "119": {
            "condition": "When the question mentions \"Bachelor\"",
            "operation": " \"Bachelor\" actually means \"degree_summary_name = 'Bachelor'\" in schema."
        },
        "120": {
            "condition": "When combining T1 (Students) and T2 (Student_Enrolment) for shared entities",
            "operation": " link rows where T1.student_id = T2.student_id and keep only matching pairs (inner match)."
        },
        "121": {
            "condition": "When combining T2 (Student_Enrolment) and T3 (Degree_Programs) for shared entities",
            "operation": " link rows where T2.degree_program_id = T3.degree_program_id and keep only matching pairs (inner match)."
        },
        "122": {
            "condition": "When answering about \"Who is enrolled in a Bachelor degree program?\", When the question mentions \"Bachelor\", When combining T1 (Students) and T2 (Student_Enrolment) for shared entities, When combining T2 (Student_Enrolment) and T3 (Degree_Programs) for shared entities, When listing student names",
            "operation": " use DISTINCT to ensure each student appears only once in the results."
        },
        "123": {
            "condition": "When answering about \"everybody enrolled in a Bachelors program\"",
            "operation": " make sure the output order: T1.first_name, T1.middle_name, T1.last_name."
        },
        "124": {
            "condition": "When the question mentions \"Bachelors program\"",
            "operation": " \"Bachelors\" actually means \"T3.degree_summary_name = 'Bachelor'\" in schema."
        },
        "125": {
            "condition": "When combining tables for student enrollment information",
            "operation": " link rows where T1.student_id = T2.student_id and T2.degree_program_id = T3.degree_program_id; keep only matching pairs (inner match)."
        },
        "126": {
            "condition": "When selecting names from multiple students",
            "operation": " use DISTINCT to ensure each person appears only once in the results."
        },
        "127": {
            "condition": "When answering about \"everybody enrolled in a Bachelors program\", When the question mentions \"Bachelors program\", When combining tables for student enrollment information, When selecting names from multiple students, When referring to table columns",
            "operation": " always use the exact table aliases T1. for Students table columns, T2. for Student_Enrolment table columns, and T3. for Degree_Programs table columns."
        },
        "128": {
            "condition": "When answering about \"the kind of program which most number of students are enrolled in\"",
            "operation": " use \"T1.degree_summary_name\" instead of \"program_type\" and do not include \"student_count\" alias in the output."
        },
        "129": {
            "condition": "When combining Degree_Programs and Student_Enrolment tables",
            "operation": " link rows where \"T1.degree_program_id = T2.degree_program_id\" and keep only matching pairs (inner match)."
        },
        "130": {
            "condition": "When grouping by program type",
            "operation": " organize results by \"T1.degree_summary_name\" and count the number of enrollment records."
        },
        "131": {
            "condition": "When finding the most popular program",
            "operation": " rank programs by enrollment count in descending order and keep only the top 1 result."
        },
        "132": {
            "condition": "When answering about \"the kind of program which most number of students are enrolled in\", When combining Degree_Programs and Student_Enrolment tables, When grouping by program type, When finding the most popular program, When counting students enrolled",
            "operation": " compute the number of rows using the enrollment records from Student_Enrolment table."
        },
        "133": {
            "condition": "When answering about \"degree summary name with most students enrolled\"",
            "operation": " make sure the output order: T1.degree_summary_name, count(*)"
        },
        "134": {
            "condition": "When the question mentions \"most number of students enrolled\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "135": {
            "condition": "When combining Degree_Programs AS T1 and Student_Enrolment AS T2",
            "operation": " link rows where T1.degree_program_id = T2.degree_program_id; keep only matching pairs (inner match)."
        },
        "136": {
            "condition": "When counting students enrolled",
            "operation": " compute the number of rows using the join relationship between Degree_Programs and Student_Enrolment tables."
        },
        "137": {
            "condition": "When answering about \"degree summary name with most students enrolled\", When the question mentions \"most number of students enrolled\", When combining Degree_Programs AS T1 and Student_Enrolment AS T2, When counting students enrolled, When choosing identifier delimiters",
            "operation": " do not replace unquoted identifiers with quoted forms unless specified in the schema."
        },
        "138": {
            "condition": "When answering about \"most number of students enrolled in a program\"",
            "operation": " make sure the output order: T1.degree_program_id, T1.degree_summary_name."
        },
        "139": {
            "condition": "When combining Degree_Programs and Student_Enrolment tables",
            "operation": " link rows where T1.degree_program_id = T2.degree_program_id and keep only matching pairs (inner match)."
        },
        "140": {
            "condition": "When counting enrolled students per program",
            "operation": " organize results by T1.degree_program_id and compute count(*) per group."
        },
        "141": {
            "condition": "When answering about \"most number of students enrolled in a program\", When combining Degree_Programs and Student_Enrolment tables, When counting enrolled students per program, When finding the program with most students",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "142": {
            "condition": "When answering about \"program id and summary of the degree with most students enrolled\"",
            "operation": " make sure the output order: T1.degree_program_id, T1.degree_summary_name."
        },
        "143": {
            "condition": "When the question mentions \"program id\"",
            "operation": " \"program id\" actually means \"T1.degree_program_id\" in schema."
        },
        "144": {
            "condition": "When the question mentions \"summary\"",
            "operation": " \"summary\" actually means \"T1.degree_summary_name\" in schema."
        },
        "145": {
            "condition": "When combining Degree_Programs AS T1 and Student_Enrolment AS T2 for shared entities",
            "operation": " link rows where T1.degree_program_id = T2.degree_program_id; keep only matching pairs (inner match)."
        },
        "146": {
            "condition": "When the question asks for \"most students enrolled\" and implies grouping by program",
            "operation": " organize results by T1.degree_program_id and compute count(*) per group."
        },
        "147": {
            "condition": "When the question asks for \"the most students enrolled\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "148": {
            "condition": "When answering about \"program id and summary of the degree with most students enrolled\", When the question mentions \"program id\", When the question mentions \"summary\", When combining Degree_Programs AS T1 and Student_Enrolment AS T2 for shared entities, When the question asks for \"most students enrolled\" and implies grouping by program, When the question asks for \"the most students enrolled\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "149": {
            "condition": "When the question asks about semesters without enrolled students",
            "operation": " use a NOT IN condition with semester_id values from the Student_Enrolment table instead of checking student_count = 0."
        },
        "150": {
            "condition": "When referencing the Semesters table",
            "operation": " use the exact table name \"Semesters\" (with capital S) instead of \"semesters\"."
        },
        "151": {
            "condition": "When the question asks about semesters without enrolled students, When referencing the Semesters table, When identifying semesters with no enrollments",
            "operation": " check for absence of related records in Student_Enrolment table using semester_id as the linking key."
        },
        "152": {
            "condition": "When the question asks for the name of a semester",
            "operation": " select \"semester_name\" from the \"Semesters\" table instead of \"name\"."
        },
        "153": {
            "condition": "When identifying semesters with no students enrolled",
            "operation": " use a NOT IN condition with \"semester_id\" against the \"Student_Enrolment\" table rather than checking a student_count column."
        },
        "154": {
            "condition": "When the question asks for the name of a semester, When identifying semesters with no students enrolled, When checking for enrollment existence",
            "operation": " reference the \"Student_Enrolment\" table to verify that no records exist for a given semester_id, ensuring accurate identification of semesters without enrollments."
        },
        "155": {
            "condition": "When answering about \"course names of courses which ever have students enrolled in\"",
            "operation": " make sure the output order: T1.course_name."
        },
        "156": {
            "condition": "When the question asks for distinct course names",
            "operation": " compute the number of unique values of T1.course_name."
        },
        "157": {
            "condition": "When combining Courses as T1 and Student_Enrolment_Courses as T2",
            "operation": " link rows where T1.course_id = T2.course_id exactly as shown; keep only matching pairs (inner match)."
        },
        "158": {
            "condition": "When answering about \"course names of courses which ever have students enrolled in\", When the question asks for distinct course names, When combining Courses as T1 and Student_Enrolment_Courses as T2, When the question implies finding courses with enrollments",
            "operation": " do not filter for student_id IS NULL, instead include all courses that have matching enrollment records."
        },
        "159": {
            "condition": "When answering about courses with enrolled students",
            "operation": " join the courses table (T1) with the Student_Enrolment_Courses table (T2) using the exact key equality T1.course_id = T2.course_id to find matching enrollment records."
        },
        "160": {
            "condition": "When the question asks for course names with enrollments",
            "operation": " use DISTINCT modifier on course_name to return each course only once, regardless of how many students are enrolled."
        },
        "161": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " perform an inner match to keep only courses that have at least one enrollment record in the Student_Enrolment_Courses table."
        },
        "162": {
            "condition": "When answering about courses with enrolled students, When the question asks for course names with enrollments, When combining T1 and T2 for shared entities, When the original query incorrectly filters by student_count = 0",
            "operation": " remove any WHERE clause conditions that filter based on student_count field since enrollment relationships are determined through the join with Student_Enrolment_Courses table."
        },
        "163": {
            "condition": "When answering about \"course with most number of enrollments\"",
            "operation": " make sure to join Courses as T1 with Student_Enrolment_Courses as T2 using T1.course_id = T2.course_id to get actual enrollment data."
        },
        "164": {
            "condition": "When counting enrollments per course",
            "operation": " use count(*) instead of a static enrollment_count column to dynamically calculate enrollments from the join."
        },
        "165": {
            "condition": "When grouping results by course",
            "operation": " use GROUP BY T1.course_name to organize results by each course."
        },
        "166": {
            "condition": "When ordering by enrollment count",
            "operation": " use ORDER BY count(*) DESC instead of ASC to find the course with the highest enrollment."
        },
        "167": {
            "condition": "When answering about \"course with most number of enrollments\", When counting enrollments per course, When grouping results by course, When ordering by enrollment count, When selecting the top course",
            "operation": " use LIMIT 1 to return only the course with the most enrollments."
        },
        "168": {
            "condition": "When answering about \"course with the most students enrolled\"",
            "operation": " make sure the output order: T1.course_name."
        },
        "169": {
            "condition": "When the question mentions \"most students enrolled\"",
            "operation": " actually means \"count of students per course\" in schema."
        },
        "170": {
            "condition": "When combining T1 (courses) and T2 (Student_Enrolment_Courses) for shared entities",
            "operation": " link rows where T1.course_id = T2.course_id; keep only matching pairs (inner match)."
        },
        "171": {
            "condition": "When the question asks for \"count of students enrolled per course\"",
            "operation": " compute the number of rows using the canonical key from the join (T2.course_id)."
        },
        "172": {
            "condition": "When the question asks for \"most\" or \"highest\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "173": {
            "condition": "When answering about \"course with the most students enrolled\", When the question mentions \"most students enrolled\", When combining T1 (courses) and T2 (Student_Enrolment_Courses) for shared entities, When the question asks for \"count of students enrolled per course\", When the question asks for \"most\" or \"highest\", When producing output",
            "operation": " include only T1.course_name as the result."
        },
        "174": {
            "condition": "When answering about students who live in North Carolina",
            "operation": " join the students table (T1) with the Addresses table (T2) using T1.current_address_id = T2.address_id to get address information."
        },
        "175": {
            "condition": "When filtering for students in North Carolina",
            "operation": " use T2.state_province_county = 'NorthCarolina' (exact literal) instead of the students table's state column."
        },
        "176": {
            "condition": "When excluding students registered in degree programs",
            "operation": " use EXCEPT with a subquery that joins Students (T3) with Student_Enrolment (T4) on T3.student_id = T4.student_id to find enrolled students and remove them from results."
        },
        "177": {
            "condition": "When selecting output columns",
            "operation": " return only last_name from the students table."
        },
        "178": {
            "condition": "When answering about students who live in North Carolina, When filtering for students in North Carolina, When excluding students registered in degree programs, When selecting output columns, When using table aliases",
            "operation": " maintain T1 for the main students table, T2 for Addresses, T3 for the Students table in the exclusion subquery, and T4 for Student_Enrolment table."
        },
        "179": {
            "condition": "When answering about students who live in North Carolina",
            "operation": " use the Addresses table (T2) with state_province_county = 'NorthCarolina' instead of the students table for location filtering."
        },
        "180": {
            "condition": "When combining students and addresses",
            "operation": " link rows where T1.current_address_id = T2.address_id and keep only matching pairs (inner match)."
        },
        "181": {
            "condition": "When filtering for students not registered in any degree programs",
            "operation": " exclude students who appear in the Student_Enrolment table by using an EXCEPT clause with SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id = T4.student_id."
        },
        "182": {
            "condition": "When handling the state value",
            "operation": " use the exact literal 'NorthCarolina' (without space) as shown in the schema, not 'North Carolina'."
        },
        "183": {
            "condition": "When answering about students who live in North Carolina, When combining students and addresses, When filtering for students not registered in any degree programs, When handling the state value, When using multiple table instances",
            "operation": " maintain the alias plan where base students table is T1, addresses table is T2, and the exclusion subquery uses T3 for students and T4 for Student_Enrolment."
        },
        "184": {
            "condition": "When answering about \"transcript with at least 2 course results\"",
            "operation": " make sure the output order: T2.transcript_date, T1.transcript_id."
        },
        "185": {
            "condition": "When combining Transcript_Contents as T1 and Transcripts as T2",
            "operation": " link rows where T1.transcript_id = T2.transcript_id and keep only matching pairs (inner match)."
        },
        "186": {
            "condition": "When the question asks for transcripts with at least 2 course results",
            "operation": " organize results by T1.transcript_id and compute count(*) per group, then keep only groups where count(*) >= 2."
        },
        "187": {
            "condition": "When answering about \"transcript with at least 2 course results\", When combining Transcript_Contents as T1 and Transcripts as T2, When the question asks for transcripts with at least 2 course results, When counting course results for transcripts",
            "operation": " use count(*) to count all rows in the Transcript_Contents table per transcript_id group."
        },
        "188": {
            "condition": "When answering about \"transcript with at least 2 courses listed\"",
            "operation": " make sure the output order: T2.transcript_date, T1.transcript_id."
        },
        "189": {
            "condition": "When combining Transcript_Contents as T1 and Transcripts as T2",
            "operation": " link rows where T1.transcript_id = T2.transcript_id and keep only matching pairs (inner match)."
        },
        "190": {
            "condition": "When counting courses per transcript",
            "operation": " group results by T1.transcript_id and compute count(*) per group."
        },
        "191": {
            "condition": "When filtering for transcripts with at least 2 courses",
            "operation": " apply the condition count(*) >= 2 after grouping (HAVING clause equivalent)."
        },
        "192": {
            "condition": "When answering about \"transcript with at least 2 courses listed\", When combining Transcript_Contents as T1 and Transcripts as T2, When counting courses per transcript, When filtering for transcripts with at least 2 courses, When the question asks for \"date and id\"",
            "operation": " use T2.transcript_date for date and T1.transcript_id for id with exact identifier tokens."
        },
        "193": {
            "condition": "When answering about transcripts with at least 2 courses",
            "operation": " select T1.transcript_id and T2.transcript_date as output columns."
        },
        "194": {
            "condition": "When combining Transcript_Contents and Transcripts tables",
            "operation": " link rows where T1.transcript_id = T2.transcript_id using an inner match."
        },
        "195": {
            "condition": "When grouping by transcript_id",
            "operation": " use T1.transcript_id as the grouping key."
        },
        "196": {
            "condition": "When answering about transcripts with at least 2 courses, When combining Transcript_Contents and Transcripts tables, When grouping by transcript_id, When filtering for transcripts with at least 2 courses",
            "operation": " count all rows per group and keep only groups where the count is greater than or equal to 2."
        },
        "197": {
            "condition": "When answering about \"date and id of the transcript with at least 2 courses listed\"",
            "operation": " make sure the output order: T2.transcript_date, T1.transcript_id"
        },
        "198": {
            "condition": "When the question asks for transcripts with at least 2 courses",
            "operation": " count the number of courses per transcript using T1.transcript_id and keep only those transcripts where the count is 2 or more"
        },
        "199": {
            "condition": "When answering about \"date and id of the transcript with at least 2 courses listed\", When the question asks for transcripts with at least 2 courses, When combining Transcript_Contents (T1) and Transcripts (T2)",
            "operation": " link rows where T1.transcript_id = T2.transcript_id and keep only matching pairs (inner match)"
        },
        "200": {
            "condition": "When the question asks for \"phone number\"",
            "operation": " use the exact column \"cell_mobile_number\" from the Students table instead of \"phone_number\"."
        },
        "201": {
            "condition": "When querying for a person by name",
            "operation": " use the \"Students\" table instead of \"people\" table."
        },
        "202": {
            "condition": "When filtering for first name \"Timmothy\"",
            "operation": " use the exact literal 'Timmothy' with the correct spelling and case."
        },
        "203": {
            "condition": "When the question asks for \"phone number\", When querying for a person by name, When filtering for first name \"Timmothy\", When filtering for last name \"Ward\"",
            "operation": " use the exact literal 'Ward' with the correct spelling and case."
        },
        "204": {
            "condition": "When the question asks for a mobile phone number",
            "operation": " select the exact column \"cell_mobile_number\" instead of \"phone_number\"."
        },
        "205": {
            "condition": "When the question asks for a mobile phone number, When filtering for a student named Timmothy Ward",
            "operation": " use both conditions \"first_name = 'timmothy'\" and \"last_name = 'ward'\" with exact lowercase literals, not a combined \"name\" field."
        },
        "206": {
            "condition": "When using table and column identifiers",
            "operation": " use lowercase \"students\" and \"cell_mobile_number\" instead of mixed case versions."
        },
        "207": {
            "condition": "When filtering by first name \"Timmothy\"",
            "operation": " use lowercase literal 'timmothy' instead of capitalized 'Timmothy'."
        },
        "208": {
            "condition": "When filtering by last name \"Ward\"",
            "operation": " use lowercase literal 'ward' instead of capitalized 'Ward'."
        },
        "209": {
            "condition": "When using table and column identifiers, When filtering by first name \"Timmothy\", When filtering by last name \"Ward\", When answering about mobile phone number of student named Timmothy Ward",
            "operation": " maintain the WHERE filter structure with first_name = 'timmothy' and last_name = 'ward'."
        },
        "210": {
            "condition": "When the question asks about the first student to register",
            "operation": " sort by the exact column \"date_first_registered\" in ascending order to find the earliest registration."
        },
        "211": {
            "condition": "When referencing the student table",
            "operation": " use the exact table name \"Students\" (with capital S) as shown in the schema."
        },
        "212": {
            "condition": "When selecting student name information",
            "operation": " include the exact columns \"first_name\", \"middle_name\", and \"last_name\" in that order."
        },
        "213": {
            "condition": "When the question asks about the first student to register, When referencing the student table, When selecting student name information, When limiting to the first result",
            "operation": " return only the single top row after sorting by registration date."
        },
        "214": {
            "condition": "When the question asks for the \"first student to register\"",
            "operation": " sort students by the exact column \"date_first_registered\" in ascending order and keep only the first row."
        },
        "215": {
            "condition": "When the question mentions \"first, middle, and last name\"",
            "operation": " output the columns \"first_name\", \"middle_name\", and \"last_name\" in that exact order."
        },
        "216": {
            "condition": "When the question asks for the \"first student to register\", When the question mentions \"first, middle, and last name\", When choosing the registration date column",
            "operation": " use \"date_first_registered\" instead of \"registration_date\" as it is the correct column name in the Students table."
        },
        "217": {
            "condition": "When answering about \"earliest graduate\"",
            "operation": " use the \"Students\" table instead of \"graduates\" table."
        },
        "218": {
            "condition": "When ordering by graduation date to find the earliest graduate",
            "operation": " order by \"date_left\" column in ascending order instead of \"graduation_date\"."
        },
        "219": {
            "condition": "When answering about \"earliest graduate\", When ordering by graduation date to find the earliest graduate, When listing student names",
            "operation": " include \"first_name\", \"middle_name\", and \"last_name\" columns from the \"Students\" table."
        },
        "220": {
            "condition": "When answering about \"earliest school graduate\"",
            "operation": " use the \"Students\" table instead of \"graduates\" table."
        },
        "221": {
            "condition": "When ordering by graduation date to find the earliest graduate",
            "operation": " use the \"date_left\" column for ordering instead of \"graduation_date\"."
        },
        "222": {
            "condition": "When retrieving student names",
            "operation": " select \"first_name\", \"middle_name\", and \"last_name\" columns from the \"Students\" table."
        },
        "223": {
            "condition": "When answering about \"earliest school graduate\", When ordering by graduation date to find the earliest graduate, When retrieving student names, When finding the earliest record",
            "operation": " order by \"date_left\" in ascending order and take the first row."
        },
        "224": {
            "condition": "When selecting from the database about students' addresses",
            "operation": " use the \"Students\" table as the base table T1 instead of a \"people\" table."
        },
        "225": {
            "condition": "When comparing permanent and current addresses",
            "operation": " compare using the ID columns \"current_address_id\" and \"permanent_address_id\" instead of address value columns."
        },
        "226": {
            "condition": "When filtering for different addresses",
            "operation": " use the condition current_address_id != permanent_address_id to identify students whose permanent address differs from their current address."
        },
        "227": {
            "condition": "When selecting from the database about students' addresses, When comparing permanent and current addresses, When filtering for different addresses, When outputting results",
            "operation": " include the \"first_name\" column from the Students table to list the student's first name."
        },
        "228": {
            "condition": "When referencing table names from the schema",
            "operation": " use exact case-sensitive identifier \"Students\" instead of lowercase \"students\"."
        },
        "229": {
            "condition": "When comparing permanent and current addresses",
            "operation": " use column identifiers \"permanent_address_id\" and \"current_address_id\" instead of \"permanent_address\" and \"current_address\" to properly evaluate address inequality using ID values."
        },
        "230": {
            "condition": "When referencing table names from the schema, When comparing permanent and current addresses, When filtering for students with different permanent and current addresses",
            "operation": " compare \"Students\".\"permanent_address_id\" != \"Students\".\"current_address_id\" to identify address ID mismatches."
        },
        "231": {
            "condition": "When answering about \"which address holds the most number of students currently\"",
            "operation": " make sure the output order: address_id, line_1, line_2."
        },
        "232": {
            "condition": "When counting students per address",
            "operation": " compute the number of rows using the join condition on T2.current_address_id."
        },
        "233": {
            "condition": "When combining addresses (T1) and students (T2) for shared entities",
            "operation": " link rows where T1.address_id = T2.current_address_id and keep only matching pairs (inner match)."
        },
        "234": {
            "condition": "When the question mentions \"most number of students\"",
            "operation": " rank addresses by student count in descending order and keep the first 1 row."
        },
        "235": {
            "condition": "When answering about \"which address holds the most number of students currently\", When counting students per address, When combining addresses (T1) and students (T2) for shared entities, When the question mentions \"most number of students\", When selecting address details",
            "operation": " include T1.address_id, T1.line_1, and T1.line_2 instead of line1, line2, and line3."
        },
        "236": {
            "condition": "When answering about \"address with the most students\"",
            "operation": " make sure the output order: T1.address_id, T1.line_1, T1.line_2."
        },
        "237": {
            "condition": "When the question asks for \"most students\"",
            "operation": " count the number of students using T2.current_address_id as the counting key."
        },
        "238": {
            "condition": "When combining Addresses and Students tables",
            "operation": " link rows where T1.address_id = T2.current_address_id and keep only matching pairs (inner match)."
        },
        "239": {
            "condition": "When grouping by address",
            "operation": " organize results by T1.address_id and compute the count of students per group."
        },
        "240": {
            "condition": "When answering about \"address with the most students\", When the question asks for \"most students\", When combining Addresses and Students tables, When grouping by address, When ranking addresses by student count",
            "operation": " rank rows by count(*) in descending order and keep the first 1 row."
        },
        "241": {
            "condition": "When the question asks about \"transcript date\"",
            "operation": " use the exact column name \"transcript_date\" from table \"Transcripts\"."
        },
        "242": {
            "condition": "When calculating average of transcript dates",
            "operation": " compute the average of the \"transcript_date\" column from table \"Transcripts\"."
        },
        "243": {
            "condition": "When the question asks about \"transcript date\", When calculating average of transcript dates, When referencing table names",
            "operation": " use the exact table name \"Transcripts\" instead of variations like \"transcript\"."
        },
        "244": {
            "condition": "When the question asks for \"date and details\" from transcripts",
            "operation": " use column \"transcript_date\" for date and \"other_details\" for details in the SELECT list."
        },
        "245": {
            "condition": "When referencing the transcripts table",
            "operation": " use table name \"Transcripts\" (case-sensitive) in the FROM clause."
        },
        "246": {
            "condition": "When the question asks for \"date and details\" from transcripts, When referencing the transcripts table, When finding the first transcript released",
            "operation": " order by \"transcript_date\" in ascending order and take only the first row."
        },
        "247": {
            "condition": "When answering about the earliest date of a transcript release",
            "operation": " select \"transcript_date\" and \"other_details\" from \"Transcripts\" instead of MIN(release_date), transcript_id, and content."
        },
        "248": {
            "condition": "When ordering by date to find the earliest transcript",
            "operation": " order rows by \"transcript_date\" in ascending order and limit to the first 1 row."
        },
        "249": {
            "condition": "When the question asks for details about the earliest transcript",
            "operation": " include \"other_details\" column to provide additional information about the transcript."
        },
        "250": {
            "condition": "When querying from the Transcripts table",
            "operation": " use the exact table name \"Transcripts\" with proper capitalization as shown in the schema."
        },
        "251": {
            "condition": "When answering about the earliest date of a transcript release, When ordering by date to find the earliest transcript, When the question asks for details about the earliest transcript, When querying from the Transcripts table, When finding the earliest date",
            "operation": " do not use aggregate functions with non-aggregated columns or subqueries for maximum dates, instead use direct ordering and limiting."
        },
        "252": {
            "condition": "When the question asks about \"transcripts\"",
            "operation": " use the exact table name \"Transcripts\" with proper capitalization."
        },
        "253": {
            "condition": "When counting transcripts",
            "operation": " use COUNT(*) to count all rows."
        },
        "254": {
            "condition": "When the question asks about \"transcripts\", When counting transcripts, When filtering for released status",
            "operation": " use the condition released = 'false' exactly as specified, maintaining the lowercase 'false' literal."
        },
        "255": {
            "condition": "When answering about \"how many transcripts are released\"",
            "operation": " count all records from the \"Transcripts\" table without any filtering conditions."
        },
        "256": {
            "condition": "When using aggregate functions",
            "operation": " use lowercase \"count(*)\" instead of uppercase \"COUNT(*)\" to maintain consistent function casing."
        },
        "257": {
            "condition": "When answering about \"how many transcripts are released\", When using aggregate functions, When counting records",
            "operation": " do not apply any WHERE clause filters unless explicitly specified in the question."
        },
        "258": {
            "condition": "When the question asks for the \"last transcript release date\"",
            "operation": " use the exact column name \"transcript_date\" from table \"Transcripts\" instead of \"release_date\"."
        },
        "259": {
            "condition": "When retrieving the most recent date",
            "operation": " order rows by \"transcript_date\" in descending order and take only the first row instead of using maximum aggregation."
        },
        "260": {
            "condition": "When selecting from the Transcripts table",
            "operation": " use the exact table name \"Transcripts\" with proper casing instead of \"transcripts\"."
        },
        "261": {
            "condition": "When the question asks for the \"last transcript release date\", When retrieving the most recent date, When selecting from the Transcripts table, When the question asks for a single most recent value",
            "operation": " use a limit of 1 instead of subqueries or complex aggregation approaches."
        },
        "262": {
            "condition": "When answering about \"last transcript released\"",
            "operation": " make sure the output order: transcript_date."
        },
        "263": {
            "condition": "When the question asks for the most recent date",
            "operation": " use ORDER BY transcript_date DESC LIMIT 1 to get the single latest date."
        },
        "264": {
            "condition": "When selecting from the Transcripts table",
            "operation": " use the exact table name \"Transcripts\" with proper casing."
        },
        "265": {
            "condition": "When retrieving transcript dates",
            "operation": " select the column \"transcript_date\" directly without aggregate functions."
        },
        "266": {
            "condition": "When answering about \"last transcript released\", When the question asks for the most recent date, When selecting from the Transcripts table, When retrieving transcript dates, When finding the latest transcript",
            "operation": " do not apply filters that exclude past records like WHERE release_date > CURRENT_DATE."
        },
        "267": {
            "condition": "When the question asks about \"course enrollment\"",
            "operation": " use the exact identifier \"student_course_id\" instead of \"course_enrollment_id\" as shown in the schema."
        },
        "268": {
            "condition": "When counting occurrences in different transcripts",
            "operation": " query from the \"Transcript_Contents\" table instead of \"transcripts\"."
        },
        "269": {
            "condition": "When grouping by course enrollment",
            "operation": " group by \"student_course_id\" to count occurrences per enrollment."
        },
        "270": {
            "condition": "When finding the maximum count",
            "operation": " order by the count value in descending order and take the first result."
        },
        "271": {
            "condition": "When the question asks about \"course enrollment\", When counting occurrences in different transcripts, When grouping by course enrollment, When finding the maximum count, When selecting output columns",
            "operation": " include both \"student_course_id\" and the count value without aliasing the count."
        },
        "272": {
            "condition": "When answering about \"How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id\"",
            "operation": " make sure the output order: count(*) first, then student_course_id."
        },
        "273": {
            "condition": "When the question asks for \"course enrollment id\"",
            "operation": " \"course enrollment id\" actually means \"student_course_id in schema\"."
        },
        "274": {
            "condition": "When the question asks for \"how many times at most\"",
            "operation": " rank rows by count(*) in descending order and keep the first 1 row."
        },
        "275": {
            "condition": "When answering about \"How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id\", When the question asks for \"course enrollment id\", When the question asks for \"how many times at most\", When counting occurrences of course enrollment results",
            "operation": " compute the number of rows using the canonical key student_course_id."
        },
        "276": {
            "condition": "When counting occurrences of courses in transcripts",
            "operation": " use table \"Transcript_Contents\" instead of \"transcripts\" and count records per \"student_course_id\" instead of \"course_id\"."
        },
        "277": {
            "condition": "When the question asks for the maximum number of times a course appears",
            "operation": " count the number of records for each \"student_course_id\" and find the highest count value."
        },
        "278": {
            "condition": "When selecting the enrollment identifier",
            "operation": " use \"student_course_id\" instead of \"enrollment_id\" to identify the course enrollment."
        },
        "279": {
            "condition": "When grouping for counting",
            "operation": " group by \"student_course_id\" to count how many times each student course appears in transcripts."
        },
        "280": {
            "condition": "When counting occurrences of courses in transcripts, When the question asks for the maximum number of times a course appears, When selecting the enrollment identifier, When grouping for counting, When ordering results",
            "operation": " order by the count in descending order to find the maximum occurrence first."
        },
        "281": {
            "condition": "When answering about \"the date of the transcript which shows the least number of results\"",
            "operation": " make sure the output order: T2.transcript_date, T1.transcript_id"
        },
        "282": {
            "condition": "When the question asks for \"least number of results\"",
            "operation": " count the number of records per transcript using count(*) on T1.transcript_id and order by this count in ascending order"
        },
        "283": {
            "condition": "When combining Transcript_Contents AS T1 and Transcripts AS T2",
            "operation": " link rows where T1.transcript_id = T2.transcript_id and keep only matching pairs (inner match)"
        },
        "284": {
            "condition": "When grouping results",
            "operation": " organize by T1.transcript_id to compute the count of records per transcript"
        },
        "285": {
            "condition": "When answering about \"the date of the transcript which shows the least number of results\", When the question asks for \"least number of results\", When combining Transcript_Contents AS T1 and Transcripts AS T2, When grouping results, When selecting the transcript with the minimum count",
            "operation": " take only the first row after ordering by count(*) ASC"
        },
        "286": {
            "condition": "When answering about \"date and id of the transcript with the least number of results\"",
            "operation": " make sure the output order: T2.transcript_date, T1.transcript_id."
        },
        "287": {
            "condition": "When the question mentions \"date\"",
            "operation": " \"date\" actually means \"T2.transcript_date\" in schema."
        },
        "288": {
            "condition": "When the question mentions \"id\"",
            "operation": " \"id\" actually means \"T1.transcript_id\" in schema."
        },
        "289": {
            "condition": "When combining Transcript_Contents as T1 and Transcripts as T2 for shared entities",
            "operation": " link rows where T1.transcript_id = T2.transcript_id; keep only matching pairs (inner match)."
        },
        "290": {
            "condition": "When the question asks for \"number of results\" per transcript",
            "operation": " organize results by T1.transcript_id and compute count(*) per group."
        },
        "291": {
            "condition": "When answering about \"date and id of the transcript with the least number of results\", When the question mentions \"date\", When the question mentions \"id\", When combining Transcript_Contents as T1 and Transcripts as T2 for shared entities, When the question asks for \"number of results\" per transcript, When the question asks for the transcript with the \"least number of results\"",
            "operation": " rank rows by count(*) in ascending direction and keep the first 1 row."
        },
        "292": {
            "condition": "When answering about semesters where both Master and Bachelor students enrolled",
            "operation": " use DISTINCT T2.semester_id from Student_Enrolment table instead of semester from students table."
        },
        "293": {
            "condition": "When combining Degree_Programs and Student_Enrolment tables",
            "operation": " link rows where T1.degree_program_id = T2.degree_program_id and keep only matching pairs (inner match)."
        },
        "294": {
            "condition": "When filtering for Master students",
            "operation": " use condition degree_summary_name = 'Master' with exact case and spacing."
        },
        "295": {
            "condition": "When filtering for Bachelor students",
            "operation": " use condition degree_summary_name = 'Bachelor' with exact case and spacing."
        },
        "296": {
            "condition": "When answering about semesters where both Master and Bachelor students enrolled, When combining Degree_Programs and Student_Enrolment tables, When filtering for Master students, When filtering for Bachelor students, When finding semesters with both degree programs",
            "operation": " use INTERSECT operation between the Master student results and Bachelor student results instead of trying to satisfy both conditions in a single WHERE clause."
        },
        "297": {
            "condition": "When answering about semesters with both Masters and Bachelors students",
            "operation": " use DISTINCT T2.semester_id to avoid duplicate semester IDs in the output."
        },
        "298": {
            "condition": "When combining Degree_Programs and Student_Enrolment tables",
            "operation": " link rows where T1.degree_program_id = T2.degree_program_id and keep only matching pairs (inner join)."
        },
        "299": {
            "condition": "When filtering for Master's degree students",
            "operation": " use condition degree_summary_name = 'Master' with exact case and spelling."
        },
        "300": {
            "condition": "When filtering for Bachelor's degree students",
            "operation": " use condition degree_summary_name = 'Bachelor' with exact case and spelling."
        },
        "301": {
            "condition": "When answering about semesters with both Masters and Bachelors students, When combining Degree_Programs and Student_Enrolment tables, When filtering for Master's degree students, When filtering for Bachelor's degree students, When finding semesters with both degree types",
            "operation": " use INTERSECT between two separate queries to find common semester_ids that satisfy both conditions."
        },
        "302": {
            "condition": "When counting different addresses that students currently live",
            "operation": " use count(DISTINCT current_address_id) instead of COUNT(*) to count unique addresses rather than all rows."
        },
        "303": {
            "condition": "When referencing address information",
            "operation": " use the current_address_id column instead of checking address IS NOT NULL to properly identify distinct address records."
        },
        "304": {
            "condition": "When counting different addresses that students currently live, When referencing address information, When handling null values in address counting",
            "operation": " remove any WHERE address IS NOT NULL filter since the distinct count inherently handles null values appropriately."
        },
        "305": {
            "condition": "When the question asks for \"different addresses that have students living there\"",
            "operation": " use count(DISTINCT current_address_id) instead of SELECT DISTINCT address to count unique addresses rather than listing them."
        },
        "306": {
            "condition": "When referencing addresses in the Students table",
            "operation": " use current_address_id instead of address as the correct column identifier."
        },
        "307": {
            "condition": "When counting addresses with students",
            "operation": " remove any WHERE student_id IS NOT NULL filter since the count should include all students regardless of student_id status."
        },
        "308": {
            "condition": "When the question asks for \"different addresses that have students living there\", When referencing addresses in the Students table, When counting addresses with students, When the question asks for a count of distinct addresses",
            "operation": " change from selecting distinct values to counting distinct values to return a single aggregate result instead of a list of individual addresses."
        },
        "309": {
            "condition": "When the question asks for \"student details\"",
            "operation": " select only the \"other_student_details\" column instead of all columns."
        },
        "310": {
            "condition": "When the question asks for \"student details\", When the question specifies \"reversed lexicographical order\"",
            "operation": " sort the results by \"other_student_details\" in descending order instead of ascending order."
        },
        "311": {
            "condition": "When the question asks for \"other details\" about students",
            "operation": " select only the \"other_student_details\" column instead of all columns."
        },
        "312": {
            "condition": "When ordering results in reverse alphabetical order",
            "operation": " sort by \"other_student_details\" in descending order instead of ascending order."
        },
        "313": {
            "condition": "When the question asks for \"other details\" about students, When ordering results in reverse alphabetical order, When the question specifies reverse alphabetical order",
            "operation": " use descending order on the text column rather than ascending order."
        },
        "314": {
            "condition": "When the question asks to describe a specific section",
            "operation": " select only the \"section_description\" column instead of all columns."
        },
        "315": {
            "condition": "When referencing the Sections table",
            "operation": " use the exact case-sensitive identifier \"Sections\" instead of lowercase \"sections\"."
        },
        "316": {
            "condition": "When the question asks to describe a specific section, When referencing the Sections table, When filtering for a specific section",
            "operation": " use the exact literal value 'h' to match the section name condition."
        },
        "317": {
            "condition": "When the question asks for \"description\" of a section",
            "operation": " use the exact column token \"section_description\" from the Sections table instead of \"description\"."
        },
        "318": {
            "condition": "When filtering by section name",
            "operation": " use the exact column token \"section_name\" with the literal value 'h' exactly as specified."
        },
        "319": {
            "condition": "When the question asks for \"description\" of a section, When filtering by section name, When referencing the table containing section information",
            "operation": " use the exact table name \"Sections\" with proper capitalization as shown in the schema."
        },
        "320": {
            "condition": "When answering about students who live in Haiti or have a specific phone number",
            "operation": " join table \"students\" as T1 with table \"addresses\" as T2 using the condition T1.permanent_address_id = T2.address_id."
        },
        "321": {
            "condition": "When the question mentions \"permanently live in the country Haiti\"",
            "operation": " use T2.country = 'haiti' (lowercase) instead of 'Haiti'."
        },
        "322": {
            "condition": "When the question mentions \"cell phone number 09700166582\"",
            "operation": " use T1.cell_mobile_number = '09700166582' instead of cell_phone."
        },
        "323": {
            "condition": "When combining conditions with \"or\"",
            "operation": " use OR logical operator instead of AND."
        },
        "324": {
            "condition": "When answering about students who live in Haiti or have a specific phone number, When the question mentions \"permanently live in the country Haiti\", When the question mentions \"cell phone number 09700166582\", When combining conditions with \"or\", When selecting first names",
            "operation": " reference T1.first_name with table alias instead of just first_name."
        },
        "325": {
            "condition": "When selecting student first names",
            "operation": " use t1.first_name from the students table with alias t1."
        },
        "326": {
            "condition": "When the question mentions students who live in Haiti permanently",
            "operation": " join the addresses table as t2 on t1.permanent_address_id = t2.address_id and filter on t2.country = 'haiti' (lowercase)."
        },
        "327": {
            "condition": "When the question mentions students with cell phone number 09700166582",
            "operation": " filter on t1.cell_mobile_number = '09700166582' from the students table."
        },
        "328": {
            "condition": "When selecting student first names, When the question mentions students who live in Haiti permanently, When the question mentions students with cell phone number 09700166582, When combining both conditions",
            "operation": " use OR logic between the permanent address condition and cell phone number condition."
        }
    },
    "tvshow": {
        "0": {
            "condition": "When answering about \"cartoons\"",
            "operation": " use the exact table name \"Cartoon\" instead of pluralized forms."
        },
        "1": {
            "condition": "When the question mentions \"title\"",
            "operation": " use the exact column name \"Title\" with proper capitalization."
        },
        "2": {
            "condition": "When answering about \"cartoons\", When the question mentions \"title\", When the question asks for alphabetical order",
            "operation": " sort by the column in ascending order by default (do not use DESC modifier)."
        },
        "3": {
            "condition": "When answering about \"titles of the cartoons sorted alphabetically\"",
            "operation": " make sure the output order: \"Title\" in ascending alphabetical order."
        },
        "4": {
            "condition": "When the question mentions \"cartoons\"",
            "operation": " \"cartoons\" actually means table \"Cartoon\" in schema."
        },
        "5": {
            "condition": "When the question mentions \"titles\"",
            "operation": " \"titles\" actually means column \"Title\" in table \"Cartoon\"."
        },
        "6": {
            "condition": "When answering about \"titles of the cartoons sorted alphabetically\", When the question mentions \"cartoons\", When the question mentions \"titles\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for table \"Cartoon\" and column \"Title\"."
        },
        "7": {
            "condition": "When the question asks to list cartoons",
            "operation": " select only the \"Title\" column instead of all columns."
        },
        "8": {
            "condition": "When referencing the cartoon table",
            "operation": " use the exact table name \"Cartoon\" with proper casing."
        },
        "9": {
            "condition": "When filtering by director",
            "operation": " use the exact column name \"Directed_by\" instead of \"director\"."
        },
        "10": {
            "condition": "When the question asks to list cartoons, When referencing the cartoon table, When filtering by director, When matching the director name \"Ben Jones\"",
            "operation": " use double quotes around the literal \"Ben Jones\" instead of single quotes."
        },
        "11": {
            "condition": "When the question asks about cartoons directed by Ben Jones",
            "operation": " use the table name \"Cartoon\" instead of \"cartoons\"."
        },
        "12": {
            "condition": "When filtering for director Ben Jones",
            "operation": " use the column \"Directed_by\" instead of \"director\" and the exact string literal \"Ben Jones\" with double quotes."
        },
        "13": {
            "condition": "When the question asks about cartoons directed by Ben Jones, When filtering for director Ben Jones, When selecting cartoon titles",
            "operation": " use the column \"Title\" instead of \"title\" for the output."
        },
        "14": {
            "condition": "When the question asks about cartoons",
            "operation": " use the exact table name \"Cartoon\" with double quotes as shown in the schema."
        },
        "15": {
            "condition": "When the question mentions \"written by\"",
            "operation": " use the exact column name \"Written_by\" with double quotes to identify the writer column."
        },
        "16": {
            "condition": "When the question specifies the writer \"Joseph Kuhr\"",
            "operation": " use the exact literal format with double quotes as \"Joseph Kuhr\" to match the string value."
        },
        "17": {
            "condition": "When the question asks about cartoons, When the question mentions \"written by\", When the question specifies the writer \"Joseph Kuhr\", When counting cartoons",
            "operation": " count the number of rows in the \"Cartoon\" table where \"Written_by\" equals \"Joseph Kuhr\"."
        },
        "18": {
            "condition": "When the question mentions \"cartoons\"",
            "operation": " the exact table name is \"Cartoon\" with double quotes."
        },
        "19": {
            "condition": "When the question mentions \"written by Joseph Kuhr\"",
            "operation": " the exact column name is \"Written_by\" with double quotes and the exact literal value is 'Joseph Kuhr'."
        },
        "20": {
            "condition": "When the question mentions \"cartoons\", When the question mentions \"written by Joseph Kuhr\", When counting entities from table \"Cartoon\"",
            "operation": " use the canonical key \"Written_by\" for counting operations."
        },
        "21": {
            "condition": "When the question asks for cartoon titles and directors",
            "operation": " select \"Directed_by\" from table \"Cartoon\" instead of \"director\" from \"cartoons\"."
        },
        "22": {
            "condition": "When ordering by air date",
            "operation": " order by \"Original_air_date\" instead of \"title\"."
        },
        "23": {
            "condition": "When referencing the table",
            "operation": " use \"Cartoon\" instead of \"cartoons\"."
        },
        "24": {
            "condition": "When the question asks for cartoon titles and directors, When ordering by air date, When referencing the table, When selecting columns",
            "operation": " do not include \"title\" in the output columns."
        },
        "25": {
            "condition": "When the question asks for \"name\" of cartoons",
            "operation": " use column \"title\" from table \"Cartoon\" instead."
        },
        "26": {
            "condition": "When the question asks for \"directors\" of cartoons",
            "operation": " use column \"Directed_by\" from table \"Cartoon\" instead."
        },
        "27": {
            "condition": "When the question mentions ordering by \"air date\"",
            "operation": " use column \"Original_air_date\" from table \"Cartoon\" for ordering."
        },
        "28": {
            "condition": "When the question asks for \"name\" of cartoons, When the question asks for \"directors\" of cartoons, When the question mentions ordering by \"air date\", When answering about cartoons ordered by air date",
            "operation": " make sure the output order includes \"title\" and \"Directed_by\" columns."
        },
        "29": {
            "condition": "When the question asks for cartoons directed by multiple directors",
            "operation": " use OR instead of AND to find records matching any of the specified directors rather than requiring all simultaneously."
        },
        "30": {
            "condition": "When referencing the cartoon table",
            "operation": " use the exact table name \"Cartoon\" instead of variations like \"cartoons\"."
        },
        "31": {
            "condition": "When selecting the director column",
            "operation": " use the exact column name \"Directed_by\" instead of \"director\"."
        },
        "32": {
            "condition": "When selecting the title column",
            "operation": " use the exact column name \"Title\" instead of \"title\"."
        },
        "33": {
            "condition": "When the question asks for cartoons directed by multiple directors, When referencing the cartoon table, When selecting the director column, When selecting the title column, When specifying director names in conditions",
            "operation": " use double quotes around literal values like \"Ben Jones\" and \"Brandon Vietti\" to maintain consistent quotation style."
        },
        "34": {
            "condition": "When the question asks for cartoon titles",
            "operation": " use the exact column name \"Title\" from table \"Cartoon\"."
        },
        "35": {
            "condition": "When the question mentions directors \"Ben Jones\" or \"Brandon Vietti\"",
            "operation": " use the exact column name \"Directed_by\" and match the exact literal values 'Ben Jones' or 'Brandon Vietti'."
        },
        "36": {
            "condition": "When the question uses \"or\" logic between multiple director conditions",
            "operation": " use OR operator instead of AND to find cartoons directed by either person."
        },
        "37": {
            "condition": "When the question asks for cartoon titles, When the question mentions directors \"Ben Jones\" or \"Brandon Vietti\", When the question uses \"or\" logic between multiple director conditions, When referencing the table containing cartoon information",
            "operation": " use the exact table name \"Cartoon\" instead of variations like \"cartoons\"."
        },
        "38": {
            "condition": "When the question asks for \"most TV Channels\" or \"highest number\"",
            "operation": " rank countries by count of TV channels in descending order and keep only the top 1 country."
        },
        "39": {
            "condition": "When counting TV channels per country",
            "operation": " count using the canonical key from TV_Channel table and group by the exact column \"Country\"."
        },
        "40": {
            "condition": "When ordering results",
            "operation": " sort by the count in descending order rather than ascending to get the highest count first."
        },
        "41": {
            "condition": "When referring to the table",
            "operation": " use the exact table name \"TV_Channel\" with proper capitalization instead of variations like \"tv_channels\"."
        },
        "42": {
            "condition": "When referring to the country column",
            "operation": " use the exact column name \"Country\" with proper capitalization instead of lowercase \"country\"."
        },
        "43": {
            "condition": "When the question asks for \"most TV Channels\" or \"highest number\", When counting TV channels per country, When ordering results, When referring to the table, When referring to the country column, When outputting results",
            "operation": " include both the country name and the count value without using aliases for the aggregate expression."
        },
        "44": {
            "condition": "When answering about \"country with the most number of TV Channels\"",
            "operation": " make sure the output order: Country, count(*)"
        },
        "45": {
            "condition": "When the question mentions \"country\"",
            "operation": " \"country\" actually means \"Country in schema\""
        },
        "46": {
            "condition": "When the question mentions \"most number\" or \"highest count\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "47": {
            "condition": "When the question asks for \"count of TV Channels\" per country",
            "operation": " compute the number of rows using the canonical key for TV_Channel (Country)."
        },
        "48": {
            "condition": "When the question says \"per country\"/\"by country\"",
            "operation": " organize results by Country and compute count(*) per group."
        },
        "49": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace proper case identifiers with lowercase forms."
        },
        "50": {
            "condition": "When answering about \"country with the most number of TV Channels\", When the question mentions \"country\", When the question mentions \"most number\" or \"highest count\", When the question asks for \"count of TV Channels\" per country, When the question says \"per country\"/\"by country\", When choosing identifier delimiters, When referring to table roles",
            "operation": " use TV_Channel as the base table with no alias needed."
        },
        "51": {
            "condition": "When counting different series names",
            "operation": " count the number of unique values in the \"series_name\" column using count(DISTINCT series_name)."
        },
        "52": {
            "condition": "When counting different contents",
            "operation": " count the number of unique values in the \"content\" column using count(DISTINCT content) and ensure the exact column name \"content\" is used instead of \"contents\"."
        },
        "53": {
            "condition": "When counting different series names, When counting different contents, When answering about number of different series names and contents",
            "operation": " make sure the output order shows count of distinct series names first, followed by count of distinct content values."
        },
        "54": {
            "condition": "When the question asks for \"different series and contents\"",
            "operation": " count distinct values for both \"series_name\" and \"content\" columns separately instead of counting all rows."
        },
        "55": {
            "condition": "When counting distinct entities",
            "operation": " use DISTINCT counting for each specified column (\"series_name\" and \"content\") rather than a single COUNT(*) that counts total rows."
        },
        "56": {
            "condition": "When the question asks for \"different series and contents\", When counting distinct entities, When the question mentions \"series\" and \"contents\"",
            "operation": " these refer to the exact column tokens \"series_name\" and \"content\" in the TV_Channel table."
        },
        "57": {
            "condition": "When answering about \"content of TV Channel with serial name\"",
            "operation": " make sure the output order: Content."
        },
        "58": {
            "condition": "When the question mentions \"serial name\"",
            "operation": " \"serial name\" actually means \"series_name in schema\"."
        },
        "59": {
            "condition": "When the question mentions \"TV Channel\"",
            "operation": " use table \"TV_Channel\" instead of \"tv_channels\"."
        },
        "60": {
            "condition": "When filtering for the literal \"Sky Radio\"",
            "operation": " use double quotes \"Sky Radio\" exactly as specified."
        },
        "61": {
            "condition": "When answering about \"content of TV Channel with serial name\", When the question mentions \"serial name\", When the question mentions \"TV Channel\", When filtering for the literal \"Sky Radio\", When selecting content from TV_Channel",
            "operation": " select only the \"Content\" column instead of all columns."
        },
        "62": {
            "condition": "When answering about \"content of the series\"",
            "operation": " make sure the output order: \"Content\""
        },
        "63": {
            "condition": "When the question mentions \"series\"",
            "operation": " \"series\" actually means \"series_name in TV_Channel table\""
        },
        "64": {
            "condition": "When filtering for a specific series name",
            "operation": " use double quotes for string literals exactly as shown (e.g., \"Sky Radio\")"
        },
        "65": {
            "condition": "When selecting from the TV_Channel table",
            "operation": " use the exact column name \"Content\" to retrieve the content data"
        },
        "66": {
            "condition": "When answering about \"content of the series\", When the question mentions \"series\", When filtering for a specific series name, When selecting from the TV_Channel table, When handling text literals",
            "operation": " do not change case, spacing, or punctuation from the exact value \"Sky Radio\""
        },
        "67": {
            "condition": "When the question mentions \"serial name\"",
            "operation": " \"serial name\" actually means \"series_name\" in schema."
        },
        "68": {
            "condition": "When the question asks about TV Channel",
            "operation": " use table \"TV_Channel\" instead of \"TV_Channels\"."
        },
        "69": {
            "condition": "When filtering for channel with name \"Sky Radio\"",
            "operation": " use exact literal value 'Sky Radio' with correct case and spacing."
        },
        "70": {
            "condition": "When the question mentions \"serial name\", When the question asks about TV Channel, When filtering for channel with name \"Sky Radio\", When answering about \"Package Option of TV Channel\"",
            "operation": " make sure the output order: Package_Option."
        },
        "71": {
            "condition": "When the question asks about \"Package Options\"",
            "operation": " use the exact column name \"Package_Option\" from table \"TV_Channel\"."
        },
        "72": {
            "condition": "When the question refers to \"TV Channels\"",
            "operation": " use the exact table name \"TV_Channel\" (singular form)."
        },
        "73": {
            "condition": "When filtering for series names equal to \"Sky Radio\"",
            "operation": " use double quotes around the literal value as \"Sky Radio\" exactly."
        },
        "74": {
            "condition": "When the question asks about \"Package Options\", When the question refers to \"TV Channels\", When filtering for series names equal to \"Sky Radio\", When answering about package options for TV channels with specific series names",
            "operation": " make sure the output order shows only the Package_Option column."
        },
        "75": {
            "condition": "When referencing the TV Channel table",
            "operation": " use the exact table name \"TV_Channel\" instead of \"tv_channels\"."
        },
        "76": {
            "condition": "When filtering for language \"English\"",
            "operation": " use the exact string literal \"English\" with double quotes instead of single quotes."
        },
        "77": {
            "condition": "When referencing the TV Channel table, When filtering for language \"English\", When counting TV channels using English language",
            "operation": " count all records from the \"TV_Channel\" table where the \"language\" column equals \"English\"."
        },
        "78": {
            "condition": "When answering about \"TV Channels\"",
            "operation": " use table \"TV_Channel\" instead of \"channels\"."
        },
        "79": {
            "condition": "When the question mentions \"English language\"",
            "operation": " filter for rows where \"language\" equals exactly 'English'."
        },
        "80": {
            "condition": "When answering about \"TV Channels\", When the question mentions \"English language\", When the question asks for \"how many TV Channels\"",
            "operation": " count the number of rows in \"TV_Channel\" that satisfy the language condition."
        },
        "81": {
            "condition": "When counting TV Channels",
            "operation": " use count(*) without an alias instead of COUNT(*) as channel_count."
        },
        "82": {
            "condition": "When ordering by the count of TV Channels",
            "operation": " order by count(*) in ascending order instead of descending order."
        },
        "83": {
            "condition": "When counting TV Channels, When ordering by the count of TV Channels, When finding the language used least number of TV Channels",
            "operation": " use ascending order on the count to get the minimum count value."
        },
        "84": {
            "condition": "When the question asks for languages used by the least number of TV Channels",
            "operation": " order the results by count in ascending order instead of descending."
        },
        "85": {
            "condition": "When counting TV Channels",
            "operation": " use count(*) without an alias instead of COUNT(*) as channel_count."
        },
        "86": {
            "condition": "When the question asks for languages used by the least number of TV Channels, When counting TV Channels, When referencing the TV Channels table",
            "operation": " use the exact table name TV_Channel instead of tv_channels."
        },
        "87": {
            "condition": "When the question asks for languages and TV channel counts",
            "operation": " use the exact column name \"LANGUAGE\" from the TV_Channel table."
        },
        "88": {
            "condition": "When counting TV channels per language",
            "operation": " count the number of records using the canonical key from the TV_Channel table."
        },
        "89": {
            "condition": "When grouping results by language",
            "operation": " organize the output by the \"LANGUAGE\" column and compute the count per group."
        },
        "90": {
            "condition": "When the question asks for languages and TV channel counts, When counting TV channels per language, When grouping results by language, When referring to the source table",
            "operation": " use the exact table name \"TV_Channel\" with consistent case as shown in the schema."
        },
        "91": {
            "condition": "When the question asks for \"number of TV Channels\" per language",
            "operation": " count the rows using the canonical table \"TV_Channel\" and group by the exact column \"LANGUAGE\"."
        },
        "92": {
            "condition": "When choosing table identifiers",
            "operation": " use the exact table name \"TV_Channel\" with double quotes as shown in the schema, not alternative names like \"tv_channels\"."
        },
        "93": {
            "condition": "When the question asks for \"number of TV Channels\" per language, When choosing table identifiers, When counting entities",
            "operation": " use count(*) to count all rows in each language group rather than counting specific columns."
        },
        "94": {
            "condition": "When joining tables tv_channel and cartoon",
            "operation": " use table aliases T1 for tv_channel and T2 for cartoon instead of full table names."
        },
        "95": {
            "condition": "When linking T1 and T2",
            "operation": " match rows where T1.id = T2.Channel (not cartoon.channel_id)."
        },
        "96": {
            "condition": "When filtering for the cartoon title \"The Rise of the Blue Beetle!\"",
            "operation": " use T2.Title (not cartoon.title) with double quotes around the literal."
        },
        "97": {
            "condition": "When joining tables tv_channel and cartoon, When linking T1 and T2, When filtering for the cartoon title \"The Rise of the Blue Beetle!\", When outputting results",
            "operation": " return T1.series_name as the TV Channel's series name."
        },
        "98": {
            "condition": "When the question asks about a TV Channel showing a specific cartoon",
            "operation": " join TV_Channel AS T1 with Cartoon AS T2 on T1.id = T2.Channel to link channels with their cartoons."
        },
        "99": {
            "condition": "When filtering for a specific cartoon title \"The Rise of the Blue Beetle!\"",
            "operation": " use T2.Title = \"The Rise of the Blue Beetle!\" with exact punctuation and double quotes as shown."
        },
        "100": {
            "condition": "When selecting the series name of the TV Channel",
            "operation": " use T1.series_name with table alias qualification instead of just series_name."
        },
        "101": {
            "condition": "When the question asks about a TV Channel showing a specific cartoon, When filtering for a specific cartoon title \"The Rise of the Blue Beetle!\", When selecting the series name of the TV Channel, When combining tables for shared entities",
            "operation": " perform an inner match where T1.id = T2.Channel to keep only channels that actually show the specified cartoon."
        },
        "102": {
            "condition": "When answering about \"Cartoons showed on TV Channel with series name 'Sky Radio'\"",
            "operation": " make sure the output order: T2.Title"
        },
        "103": {
            "condition": "When the question mentions \"TV Channel with series name 'Sky Radio'\"",
            "operation": " \"series name\" actually means \"T1.series_name in schema\" and the literal value must be exactly \"Sky Radio\""
        },
        "104": {
            "condition": "When combining TV_Channel (T1) and Cartoon (T2) for shared entities",
            "operation": " link rows where T1.id = T2.Channel exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "105": {
            "condition": "When answering about \"Cartoons showed on TV Channel with series name 'Sky Radio'\", When the question mentions \"TV Channel with series name 'Sky Radio'\", When combining TV_Channel (T1) and Cartoon (T2) for shared entities, When selecting the title of cartoons",
            "operation": " use T2.Title as the exact column token from the Cartoon table"
        },
        "106": {
            "condition": "When answering about \"cartools that are on the TV Channel with the series name 'Sky Radio'\"",
            "operation": " make sure the output order: T2.Title."
        },
        "107": {
            "condition": "When the question mentions \"cartools\"",
            "operation": " \"cartools\" actually means \"Cartoon in schema\" and should be referenced as T2."
        },
        "108": {
            "condition": "When the question mentions \"TV Channel\"",
            "operation": " \"TV Channel\" actually means \"TV_Channel in schema\" and should be referenced as T1."
        },
        "109": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.id = T2.Channel exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "110": {
            "condition": "When answering about \"cartools that are on the TV Channel with the series name 'Sky Radio'\", When the question mentions \"cartools\", When the question mentions \"TV Channel\", When combining T1 and T2 for shared entities, When filtering for series name \"Sky Radio\"",
            "operation": " apply the condition T1.series_name = \"Sky Radio\" exactly as specified with double quotes and proper case."
        },
        "111": {
            "condition": "When answering about \"List the Episode of all TV series sorted by rating\"",
            "operation": " make sure the output order: \"Episode\" only."
        },
        "112": {
            "condition": "When selecting from the TV series data",
            "operation": " use table \"TV_series\" instead of \"episodes\"."
        },
        "113": {
            "condition": "When answering about \"List the Episode of all TV series sorted by rating\", When selecting from the TV series data, When ordering by rating",
            "operation": " sort in ascending order instead of descending order."
        },
        "114": {
            "condition": "When selecting all columns from the TV_series table",
            "operation": " use \"Episode\" instead of * to get only the episode column."
        },
        "115": {
            "condition": "When querying episodes data",
            "operation": " source from the \"TV_series\" table instead of an \"episodes\" table."
        },
        "116": {
            "condition": "When selecting all columns from the TV_series table, When querying episodes data, When ordering episodes by ratings",
            "operation": " order by the \"rating\" column instead of \"title DESC\"."
        },
        "117": {
            "condition": "When the question asks for \"most highly rated episodes\"",
            "operation": " rank rows by \"Rating\" in descending order and keep the first 3 rows."
        },
        "118": {
            "condition": "When the question mentions \"episodes\"",
            "operation": " \"episodes\" actually means \"Episode\" in schema."
        },
        "119": {
            "condition": "When the question mentions \"ratings\"",
            "operation": " \"ratings\" actually means \"Rating\" in schema."
        },
        "120": {
            "condition": "When the question asks for \"most highly rated episodes\", When the question mentions \"episodes\", When the question mentions \"ratings\", When answering about \"3 most highly rated episodes and their ratings\"",
            "operation": " make sure the output order: Episode, Rating."
        },
        "121": {
            "condition": "When answering about minimum and maximum share of TV series",
            "operation": " use the table name \"TV_series\" instead of \"movies\"."
        },
        "122": {
            "condition": "When computing aggregate values for TV series",
            "operation": " use uppercase function names \"max\" and \"min\" instead of mixed case \"MIN\" and \"MAX\"."
        },
        "123": {
            "condition": "When ordering output columns for minimum and maximum share",
            "operation": " place \"max(SHARE)\" first instead of \"MIN(share)\" first."
        },
        "124": {
            "condition": "When answering about minimum and maximum share of TV series, When computing aggregate values for TV series, When ordering output columns for minimum and maximum share, When selecting aggregate values",
            "operation": " remove column aliases \"min_share\" and \"max_share\" instead of keeping them."
        },
        "125": {
            "condition": "When answering about maximum and minimum share for TV series",
            "operation": " use table \"TV_series\" as the data source."
        },
        "126": {
            "condition": "When the question mentions \"TV series\"",
            "operation": " do not apply any type filtering conditions."
        },
        "127": {
            "condition": "When computing aggregate functions on share values",
            "operation": " use the exact column name \"SHARE\" in uppercase."
        },
        "128": {
            "condition": "When answering about maximum and minimum share for TV series, When the question mentions \"TV series\", When computing aggregate functions on share values, When calculating maximum and minimum values",
            "operation": " compute MAX(\"SHARE\") and MIN(\"SHARE\") without any additional filtering conditions."
        },
        "129": {
            "condition": "When the question asks about when an episode aired",
            "operation": " select the \"Air_Date\" column instead of episode names."
        },
        "130": {
            "condition": "When querying for episode information",
            "operation": " use the \"TV_series\" table instead of an \"episodes\" table."
        },
        "131": {
            "condition": "When the question asks about when an episode aired, When querying for episode information, When filtering for a specific episode title",
            "operation": " filter on the \"Episode\" column with the exact literal value \"A Love of a Lifetime\" instead of filtering on date columns with episode titles."
        },
        "132": {
            "condition": "When the question asks for \"Weekly Rank\"",
            "operation": " select only the \"Weekly_Rank\" column from table TV_series."
        },
        "133": {
            "condition": "When filtering for Episode \"A Love of a Lifetime\"",
            "operation": " use the exact string literal \"A Love of a Lifetime\" with double quotes and filter on the \"Episode\" column."
        },
        "134": {
            "condition": "When the question asks for \"Weekly Rank\", When filtering for Episode \"A Love of a Lifetime\", When the question does not specify ordering",
            "operation": " do not include any sorting clause in the results."
        },
        "135": {
            "condition": "When answering about the weekly rank for a specific episode",
            "operation": " use table \"TV_series\" (not \"episodes\") and output column \"Weekly_Rank\" with proper capitalization."
        },
        "136": {
            "condition": "When filtering by episode title",
            "operation": " use column \"Episode\" (not \"episode_title\") for the condition."
        },
        "137": {
            "condition": "When answering about the weekly rank for a specific episode, When filtering by episode title, When specifying the literal episode title \"A Love of a Lifetime\"",
            "operation": " use double quotes around the exact string literal (not single quotes)."
        },
        "138": {
            "condition": "When the question asks for \"TV Channel of TV series\"",
            "operation": " the TV Channel's series name is stored in the \"TV_Channel\" table as \"series_name\" column, not in the \"tv_series\" table."
        },
        "139": {
            "condition": "When combining information about TV series and TV channels",
            "operation": " link rows where \"TV_Channel\".id equals \"TV_series\".Channel to find matching records between the two tables."
        },
        "140": {
            "condition": "When filtering for a specific episode \"A Love of a Lifetime\"",
            "operation": " use the exact literal \"A Love of a Lifetime\" with double quotes and filter on the \"TV_series\" table's \"Episode\" column."
        },
        "141": {
            "condition": "When the question asks for \"TV Channel of TV series\", When combining information about TV series and TV channels, When filtering for a specific episode \"A Love of a Lifetime\", When the question asks to list the TV Channel's series name",
            "operation": " output the \"series_name\" column from the \"TV_Channel\" table as the final result."
        },
        "142": {
            "condition": "When the question asks about a series name for a specific episode",
            "operation": " use TV_Channel as T1 and TV_series as T2 as FROM sources instead of only episodes."
        },
        "143": {
            "condition": "When combining T1 and T2",
            "operation": " link rows where T1.id = T2.Channel and keep only matching pairs (inner match)."
        },
        "144": {
            "condition": "When referencing the series name",
            "operation": " use T1.series_name instead of just series_name."
        },
        "145": {
            "condition": "When the question asks about a series name for a specific episode, When combining T1 and T2, When referencing the series name, When filtering for the episode \"A Love of a Lifetime\"",
            "operation": " use T2.Episode = \"A Love of a Lifetime\" with exact case and punctuation as shown."
        },
        "146": {
            "condition": "When answering about \"List the Episode of all TV series showed on TV Channel with series name 'Sky Radio'\"",
            "operation": " make sure the output order: T2.Episode"
        },
        "147": {
            "condition": "When the question mentions \"TV series showed on TV Channel\"",
            "operation": " use TV_Channel AS T1 JOIN TV_series AS T2 with join condition T1.id = T2.Channel to properly relate the tables"
        },
        "148": {
            "condition": "When the question mentions \"series name 'Sky Radio'\"",
            "operation": " filter on T1.series_name = \"Sky Radio\" exactly as specified with double quotes"
        },
        "149": {
            "condition": "When answering about \"List the Episode of all TV series showed on TV Channel with series name 'Sky Radio'\", When the question mentions \"TV series showed on TV Channel\", When the question mentions \"series name 'Sky Radio'\", When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.id = T2.Channel exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "150": {
            "condition": "When answering about \"the episode for the TV series named 'Sky Radio'\"",
            "operation": " make sure the output order: T2.Episode."
        },
        "151": {
            "condition": "When the question mentions \"TV series named 'Sky Radio'\"",
            "operation": " \"Sky Radio\" actually means T1.series_name in schema."
        },
        "152": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.id = T2.Channel exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "153": {
            "condition": "When answering about \"the episode for the TV series named 'Sky Radio'\", When the question mentions \"TV series named 'Sky Radio'\", When combining T1 and T2 for shared entities, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for \"Sky Radio\"."
        },
        "154": {
            "condition": "When the question asks for \"number of cartoons directed by each director\"",
            "operation": " count the rows using the canonical key from the cartoon table and group by the exact column token \"Directed_by\"."
        },
        "155": {
            "condition": "When the question mentions \"directed by\"",
            "operation": " the exact column token is \"Directed_by\" from the cartoon table."
        },
        "156": {
            "condition": "When producing output columns",
            "operation": " place the count result first followed by the director name."
        },
        "157": {
            "condition": "When referring to the table containing cartoon data",
            "operation": " use the exact table name \"cartoon\" (not \"cartoons\")."
        },
        "158": {
            "condition": "When the question asks for \"number of cartoons directed by each director\", When the question mentions \"directed by\", When producing output columns, When referring to the table containing cartoon data, When grouping by director",
            "operation": " use the exact column token \"Directed_by\" for grouping."
        },
        "159": {
            "condition": "When the question asks about \"director\"",
            "operation": " use the exact column name \"Directed_by\" from the schema instead of \"director\"."
        },
        "160": {
            "condition": "When counting records per director",
            "operation": " place the count result first in the output order before the director name."
        },
        "161": {
            "condition": "When referencing the cartoon table",
            "operation": " use the exact table name \"cartoon\" instead of \"cartoons\"."
        },
        "162": {
            "condition": "When the question asks about \"director\", When counting records per director, When referencing the cartoon table, When grouping by director",
            "operation": " use the exact column name \"Directed_by\" in both the grouping and output columns."
        },
        "163": {
            "condition": "When answering about \"the most recently aired cartoon\"",
            "operation": " use the \"cartoon\" table instead of \"cartoons\" table."
        },
        "164": {
            "condition": "When ordering by air date to find the most recent",
            "operation": " use the \"original_air_date\" column for ordering instead of \"air_date\" column."
        },
        "165": {
            "condition": "When answering about \"the most recently aired cartoon\", When ordering by air date to find the most recent, When finding the most recent record",
            "operation": " order by date in descending order and keep only the first row."
        },
        "166": {
            "condition": "When the question asks about \"cartoons\"",
            "operation": " use the exact table name \"cartoon\" instead of \"cartoons\"."
        },
        "167": {
            "condition": "When ordering by the most recent episode",
            "operation": " use the column \"original_air_date\" instead of \"air_date\" and sort in descending order."
        },
        "168": {
            "condition": "When selecting the most recent cartoon",
            "operation": " keep only the top 1 row after ordering by original_air_date in descending order."
        },
        "169": {
            "condition": "When the question asks about \"cartoons\", When ordering by the most recent episode, When selecting the most recent cartoon, When outputting results",
            "operation": " include the columns \"production_code\" and \"channel\" in that exact order."
        },
        "170": {
            "condition": "When the question asks for \"package choice\"",
            "operation": " use the exact column token \"package_option\" from table \"TV_Channel\"."
        },
        "171": {
            "condition": "When filtering for high definition TV",
            "operation": " use the exact column token \"hight_definition_TV\" and the exact string literal \"yes\" with double quotes."
        },
        "172": {
            "condition": "When the question asks for \"package choice\", When filtering for high definition TV, When referencing the TV channels table",
            "operation": " use the exact table name \"TV_Channel\" with the correct case and quotes as shown in the schema."
        },
        "173": {
            "condition": "When referencing the TV channels table",
            "operation": " use the exact table name \"TV_Channel\" with double quotes and proper capitalization."
        },
        "174": {
            "condition": "When selecting package options",
            "operation": " use the column name \"package_option\" (singular) with double quotes."
        },
        "175": {
            "condition": "When filtering for high definition TV support",
            "operation": " use the column name \"hight_definition_TV\" with double quotes and the literal value \"yes\" with double quotes."
        },
        "176": {
            "condition": "When referencing the TV channels table, When selecting package options, When filtering for high definition TV support, When answering about TV channels that support high definition",
            "operation": " make sure the output order includes \"package_option\" followed by \"series_name\"."
        },
        "177": {
            "condition": "When answering about countries' tv channels playing cartoons",
            "operation": " combine tv_channels as T1 and cartoon as T2 tables using T1.id = T2.Channel to find matching pairs."
        },
        "178": {
            "condition": "When the question mentions \"cartoon written by Todd Casey\"",
            "operation": " filter for rows where T2.written_by = 'Todd Casey' exactly."
        },
        "179": {
            "condition": "When selecting countries from tv_channels",
            "operation": " output T1.country without using DISTINCT."
        },
        "180": {
            "condition": "When answering about countries' tv channels playing cartoons, When the question mentions \"cartoon written by Todd Casey\", When selecting countries from tv_channels, When combining T1 and T2",
            "operation": " perform an inner match where T1.id equals T2.Channel to keep only channels that have cartoons."
        },
        "181": {
            "condition": "When the question asks about countries with cartoons on TV",
            "operation": " select \"T1.country\" from the \"TV_Channel\" table as T1 instead of from a non-existent \"cartoons\" table."
        },
        "182": {
            "condition": "When combining TV channel and cartoon information",
            "operation": " join \"TV_Channel AS T1\" with \"cartoon AS T2\" where \"T1.id = T2.Channel\" to link channels with their cartoons."
        },
        "183": {
            "condition": "When the question asks about countries with cartoons on TV, When combining TV channel and cartoon information, When filtering for cartoons written by Todd Casey",
            "operation": " use \"T2.written_by = 'Todd Casey'\" instead of \"writer = 'Todd Casey'\" to match the exact column name and literal value."
        },
        "184": {
            "condition": "When answering about \"countries' tv channels not playing any cartoon written by Todd Casey\"",
            "operation": " use the TV_Channel table as T1 and the cartoon table as T2."
        },
        "185": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.id = T2.Channel exactly as shown and keep only matching pairs (inner match)."
        },
        "186": {
            "condition": "When filtering for cartoons written by Todd Casey",
            "operation": " use the written_by column with exact literal 'Todd Casey' (case-sensitive)."
        },
        "187": {
            "condition": "When using set operations to find countries without cartoons by Todd Casey",
            "operation": " use EXCEPT operation instead of NOT IN subqueries."
        },
        "188": {
            "condition": "When selecting output columns",
            "operation": " return only the country column from T1."
        },
        "189": {
            "condition": "When answering about \"countries' tv channels not playing any cartoon written by Todd Casey\", When combining T1 and T2 for shared entities, When filtering for cartoons written by Todd Casey, When using set operations to find countries without cartoons by Todd Casey, When selecting output columns, When handling duplicates",
            "operation": " do not use DISTINCT modifier since EXCEPT inherently eliminates duplicates."
        },
        "190": {
            "condition": "When answering about countries not playing cartoons written by Todd Casey",
            "operation": " query from the \"TV_Channel\" table instead of \"countries\" table."
        },
        "191": {
            "condition": "When combining TV_Channel and cartoon tables",
            "operation": " link rows where T1.id = T2.Channel and keep only matching pairs (inner match)."
        },
        "192": {
            "condition": "When filtering for cartoons written by Todd Casey",
            "operation": " use the exact literal 'Todd Casey' for T2.written_by."
        },
        "193": {
            "condition": "When using set operations to find countries not in a set",
            "operation": " use EXCEPT operation instead of NOT IN with subqueries."
        },
        "194": {
            "condition": "When eliminating duplicates in set operations",
            "operation": " do not use DISTINCT since EXCEPT inherently eliminates duplicates."
        },
        "195": {
            "condition": "When answering about countries not playing cartoons written by Todd Casey, When combining TV_Channel and cartoon tables, When filtering for cartoons written by Todd Casey, When using set operations to find countries not in a set, When eliminating duplicates in set operations, When producing output",
            "operation": " return the country column from TV_Channel table."
        },
        "196": {
            "condition": "When answering about TV channels playing cartoons",
            "operation": " combine the tv_channels table (as T1) with the cartoon table (as T2) by linking rows where T1.id equals T2.Channel."
        },
        "197": {
            "condition": "When the question mentions \"directed by Ben Jones and Michael Chang\"",
            "operation": " use the directed_by column from T2 (cartoon table) instead of any director column from T1."
        },
        "198": {
            "condition": "When finding series directed by both specified directors",
            "operation": " use INTERSECT to find the intersection of series directed by 'Michael Chang' and series directed by 'Ben Jones' instead of using OR logic."
        },
        "199": {
            "condition": "When answering about TV channels playing cartoons, When the question mentions \"directed by Ben Jones and Michael Chang\", When finding series directed by both specified directors, When outputting results",
            "operation": " return series_name and country columns from the tv_channels table (T1)."
        },
        "200": {
            "condition": "When answering about TV channels playing cartoons directed by multiple directors",
            "operation": " use the cartoon table (T2) joined with tv_channels table (T1) where T1.id = T2.Channel."
        },
        "201": {
            "condition": "When the question mentions \"directed by Ben Jones\" and \"directed by Michael Chang\"",
            "operation": " use T2.directed_by column with exact literals 'Ben Jones' and 'Michael Chang'."
        },
        "202": {
            "condition": "When finding channels that have cartoons from both directors",
            "operation": " use INTERSECT operation between results for each director instead of OR condition."
        },
        "203": {
            "condition": "When selecting output columns",
            "operation": " return series_name and country from T1 table."
        },
        "204": {
            "condition": "When answering about TV channels playing cartoons directed by multiple directors, When the question mentions \"directed by Ben Jones\" and \"directed by Michael Chang\", When finding channels that have cartoons from both directors, When selecting output columns, When combining tables for shared entities",
            "operation": " link rows where T1.id = T2.Channel exactly and keep only matching pairs (inner match)."
        },
        "205": {
            "condition": "When the question mentions \"pixel aspect ratio\"",
            "operation": " use the exact column name \"Pixel_aspect_ratio_PAR\" from the TV_Channel table."
        },
        "206": {
            "condition": "When the question mentions \"nation\"",
            "operation": " use the exact column name \"country\" from the TV_Channel table instead."
        },
        "207": {
            "condition": "When the question asks for TV channels that do not use English",
            "operation": " apply the filter condition where LANGUAGE != 'English' to exclude English language records."
        },
        "208": {
            "condition": "When referencing the TV channels table",
            "operation": " use the exact table name \"tv_channel\" instead of \"tv_channels\"."
        },
        "209": {
            "condition": "When the question mentions \"pixel aspect ratio\", When the question mentions \"nation\", When the question asks for TV channels that do not use English, When referencing the TV channels table, When selecting output columns",
            "operation": " maintain the order Pixel_aspect_ratio_PAR followed by country as specified in the question."
        },
        "210": {
            "condition": "When selecting pixel aspect ratio information",
            "operation": " use column name \"Pixel_aspect_ratio_PAR\" exactly as shown in the schema."
        },
        "211": {
            "condition": "When selecting country information",
            "operation": " use column name \"country\" instead of \"country_of_origin\"."
        },
        "212": {
            "condition": "When referencing the TV channels table",
            "operation": " use table name \"tv_channel\" instead of \"tv_channels\"."
        },
        "213": {
            "condition": "When selecting pixel aspect ratio information, When selecting country information, When referencing the TV channels table, When filtering for non-English language channels",
            "operation": " use condition language != 'English' with exact literal 'English'."
        },
        "214": {
            "condition": "When the question asks for TV channels from countries with more than two channels",
            "operation": " use the table name \"tv_channel\" instead of \"tv_channels\" to match the schema."
        },
        "215": {
            "condition": "When filtering for countries with more than two channels",
            "operation": " group by the \"country\" column and apply a condition to count all rows greater than 2."
        },
        "216": {
            "condition": "When the question asks for TV channels from countries with more than two channels, When filtering for countries with more than two channels, When using grouping and filtering",
            "operation": " apply the grouping and filtering directly in the main query instead of using a subquery structure for efficiency."
        },
        "217": {
            "condition": "When the question asks for \"ids of all tv channels that have more than 2 TV channels\"",
            "operation": " group results by \"country\" and count the number of records per group."
        },
        "218": {
            "condition": "When counting TV channels per country",
            "operation": " use the count of all records in each group."
        },
        "219": {
            "condition": "When filtering groups",
            "operation": " only include groups where the count is greater than 2."
        },
        "220": {
            "condition": "When selecting output",
            "operation": " return the \"id\" column from the \"tv_channel\" table."
        },
        "221": {
            "condition": "When the question asks for \"ids of all tv channels that have more than 2 TV channels\", When counting TV channels per country, When filtering groups, When selecting output, When referring to table names",
            "operation": " use exact identifier \"tv_channel\" instead of \"tv_channels\"."
        },
        "222": {
            "condition": "When answering about \"tv channels that do not play any cartoon directed by Ben Jones\"",
            "operation": " make sure the output order: id from TV_Channel table."
        },
        "223": {
            "condition": "When the question mentions \"tv channels\"",
            "operation": " \"tv channels\" actually means \"TV_Channel table in schema\"."
        },
        "224": {
            "condition": "When the question mentions \"channel_id\"",
            "operation": " \"channel_id\" actually means \"channel column in cartoon table\"."
        },
        "225": {
            "condition": "When the question mentions \"cartoons\"",
            "operation": " \"cartoons\" actually means \"cartoon table in schema\"."
        },
        "226": {
            "condition": "When the question mentions \"director = 'Ben Jones'\"",
            "operation": " \"director = 'Ben Jones'\" actually means \"directed_by = 'Ben Jones' in cartoon table\"."
        },
        "227": {
            "condition": "When answering about \"tv channels that do not play any cartoon directed by Ben Jones\", When the question mentions \"tv channels\", When the question mentions \"channel_id\", When the question mentions \"cartoons\", When the question mentions \"director = 'Ben Jones'\", When excluding channels that play cartoons directed by Ben Jones",
            "operation": " use EXCEPT set operation to subtract channels that appear in the cartoon table with directed_by = 'Ben Jones' from all channels in TV_Channel table."
        },
        "228": {
            "condition": "When answering about TV channels without cartoons directed by Ben Jones",
            "operation": " use EXCEPT set operation instead of NOT IN with a subquery."
        },
        "229": {
            "condition": "When referring to the TV channels table",
            "operation": " use exact table name \"TV_Channel\" instead of \"tv_channels\"."
        },
        "230": {
            "condition": "When referring to the cartoons table",
            "operation": " use exact table name \"cartoon\" instead of \"cartoons\"."
        },
        "231": {
            "condition": "When selecting channel identifiers from the cartoon table",
            "operation": " use exact column name \"channel\" instead of \"channel_id\"."
        },
        "232": {
            "condition": "When filtering for cartoons directed by Ben Jones",
            "operation": " use exact condition \"directed_by = 'Ben Jones'\" instead of \"director = 'Ben Jones'\"."
        },
        "233": {
            "condition": "When answering about TV channels without cartoons directed by Ben Jones, When referring to the TV channels table, When referring to the cartoons table, When selecting channel identifiers from the cartoon table, When filtering for cartoons directed by Ben Jones, When combining results from TV_Channel and cartoon tables",
            "operation": " perform set-based exclusion using EXCEPT operation to find channels that don't have matching cartoons directed by Ben Jones."
        },
        "234": {
            "condition": "When answering about \"package option of the tv channel that do not have any cartoon directed by Ben Jones\"",
            "operation": " make sure the output order: package_option from TV_Channel"
        },
        "235": {
            "condition": "When the question mentions \"tv channel\"",
            "operation": " \"tv channel\" actually means \"TV_Channel in schema\""
        },
        "236": {
            "condition": "When the question mentions \"cartoon directed by Ben Jones\"",
            "operation": " \"directed by Ben Jones\" actually means \"directed_by = 'Ben Jones' in cartoon table\""
        },
        "237": {
            "condition": "When combining TV_Channel and cartoon for shared entities",
            "operation": " link rows where TV_Channel.id = cartoon.channel; keep only matching pairs (inner match)"
        },
        "238": {
            "condition": "When answering about \"package option of the tv channel that do not have any cartoon directed by Ben Jones\", When the question mentions \"tv channel\", When the question mentions \"cartoon directed by Ben Jones\", When combining TV_Channel and cartoon for shared entities, When filtering for channels without cartoons directed by Ben Jones",
            "operation": " exclude channels where there exists a cartoon with directed_by = 'Ben Jones' and matching channel id"
        },
        "239": {
            "condition": "When the question asks for \"package options\"",
            "operation": " use the exact column name \"package_option\" from table \"TV_Channel\" instead of \"package_options\"."
        },
        "240": {
            "condition": "When selecting from the main table",
            "operation": " reference table \"TV_Channel\" instead of \"tv_channels\" and use column \"id\" instead of \"channel_id\"."
        },
        "241": {
            "condition": "When filtering channels not playing cartoons directed by Ben Jones",
            "operation": " use a subquery from table \"cartoon\" instead of \"programs\" with column \"channel\" instead of \"channel_id\"."
        },
        "242": {
            "condition": "When filtering for cartoons directed by Ben Jones",
            "operation": " use condition \"directed_by = 'Ben Jones'\" and remove any genre condition entirely."
        },
        "243": {
            "condition": "When the question asks for \"package options\", When selecting from the main table, When filtering channels not playing cartoons directed by Ben Jones, When filtering for cartoons directed by Ben Jones, When selecting package options",
            "operation": " do not use DISTINCT, return all matching package_option values."
        }
    },
    "poker_player": {
        "0": {
            "condition": "When answering about \"how many poker players\"",
            "operation": " use the \"poker_player\" table instead of the \"players\" table."
        },
        "1": {
            "condition": "When counting poker players",
            "operation": " count all records in the \"poker_player\" table without any filtering conditions."
        },
        "2": {
            "condition": "When answering about \"how many poker players\", When counting poker players, When the question asks for count of poker players",
            "operation": " remove any WHERE clause that filters by game_type = 'blackjack'."
        },
        "3": {
            "condition": "When counting poker players",
            "operation": " use the \"poker_player\" table instead of the \"players\" table."
        },
        "4": {
            "condition": "When counting all poker players",
            "operation": " do not apply any filtering conditions like \"game_type = 'blackjack'\"."
        },
        "5": {
            "condition": "When counting poker players, When counting all poker players, When counting entities",
            "operation": " count all records from the specified table without any restrictions."
        },
        "6": {
            "condition": "When the question asks for \"earnings of poker players\"",
            "operation": " select only the \"Earnings\" column from the \"poker_player\" table."
        },
        "7": {
            "condition": "When ordering earnings in descending order",
            "operation": " sort the results by \"Earnings\" in descending direction (highest to lowest)."
        },
        "8": {
            "condition": "When the question asks for \"earnings of poker players\", When ordering earnings in descending order, When the schema shows column names with exact case",
            "operation": " use \"Earnings\" exactly as shown in the schema, not \"earnings\"."
        },
        "9": {
            "condition": "When answering about \"earnings of poker players\"",
            "operation": " make sure the output order: \"Earnings\" only."
        },
        "10": {
            "condition": "When the question mentions \"poker players\"",
            "operation": " \"poker players\" actually means table \"poker_player\" in schema."
        },
        "11": {
            "condition": "When answering about \"earnings of poker players\", When the question mentions \"poker players\", When the question says \"ordered descending by value\"",
            "operation": " order rows by \"Earnings\" in descending direction."
        },
        "12": {
            "condition": "When the question asks for \"final tables made\"",
            "operation": " select the exact column \"Final_Table_Made\" from table \"poker_player\"."
        },
        "13": {
            "condition": "When the question asks for \"best finishes\"",
            "operation": " select the exact column \"Best_Finish\" from table \"poker_player\"."
        },
        "14": {
            "condition": "When the question asks for \"final tables made\", When the question asks for \"best finishes\", When the question does not specify any ordering requirement",
            "operation": " do not apply any sorting to the results."
        },
        "15": {
            "condition": "When the question asks about poker players",
            "operation": " use the exact table name \"poker_player\" instead of any variations like \"poker_players\"."
        },
        "16": {
            "condition": "When selecting final tables made",
            "operation": " use the exact column name \"Final_Table_Made\" with the correct case and spelling."
        },
        "17": {
            "condition": "When selecting best finishes",
            "operation": " use the exact column name \"Best_Finish\" with the correct case and spelling."
        },
        "18": {
            "condition": "When the question asks about poker players, When selecting final tables made, When selecting best finishes, When ordering results by best finish",
            "operation": " sort by \"Best_Finish\" in descending order (highest to lowest values)."
        },
        "19": {
            "condition": "When answering about \"average earnings of poker players\"",
            "operation": " use table \"poker_player\" and column \"Earnings\" exactly as shown in the schema."
        },
        "20": {
            "condition": "When the question mentions \"poker players\"",
            "operation": " this refers to all records in the \"poker_player\" table without any sport-based filtering."
        },
        "21": {
            "condition": "When answering about \"average earnings of poker players\", When the question mentions \"poker players\", When calculating average earnings",
            "operation": " compute the average of the \"Earnings\" column across all rows in the \"poker_player\" table."
        },
        "22": {
            "condition": "When the question asks for average earnings across all poker players",
            "operation": " use the table name \"poker_player\" exactly as specified in the schema."
        },
        "23": {
            "condition": "When referring to the earnings column",
            "operation": " use the exact column name \"Earnings\" with proper capitalization as shown in the schema."
        },
        "24": {
            "condition": "When the question asks for average earnings across all poker players, When referring to the earnings column, When calculating overall average without filtering",
            "operation": " do not apply any WHERE clause conditions like earnings > 1000000, as the question requires including all records."
        },
        "25": {
            "condition": "When the question asks for the \"money rank\" of a poker player",
            "operation": " use the exact column name \"Money_Rank\" from the poker_player table."
        },
        "26": {
            "condition": "When the question asks for the player with the highest earnings",
            "operation": " order the results by \"Earnings\" in descending order and take only the first row."
        },
        "27": {
            "condition": "When retrieving the top-ranked player",
            "operation": " do not use window functions or subqueries for maximum earnings filtering, instead use simple ordering and limiting."
        },
        "28": {
            "condition": "When the question asks for the \"money rank\" of a poker player, When the question asks for the player with the highest earnings, When retrieving the top-ranked player, When selecting from the poker players table",
            "operation": " use the exact table name \"poker_player\" (not \"poker_players\")."
        },
        "29": {
            "condition": "When answering about \"money rank of the player with the greatest earnings\"",
            "operation": " make sure the output order: Money_Rank."
        },
        "30": {
            "condition": "When the question mentions \"players\"",
            "operation": " \"players\" actually means \"poker_player\" in schema."
        },
        "31": {
            "condition": "When the question asks for the player with \"greatest earnings\"",
            "operation": " sort rows by Earnings in descending order and keep the first 1 row."
        },
        "32": {
            "condition": "When answering about \"money rank of the player with the greatest earnings\", When the question mentions \"players\", When the question asks for the player with \"greatest earnings\", When selecting the money rank",
            "operation": " select Money_Rank directly without aggregation functions."
        },
        "33": {
            "condition": "When the question mentions \"poker players\"",
            "operation": " use the exact table name \"poker_player\" instead of any pluralized or alternative forms."
        },
        "34": {
            "condition": "When the question asks about \"final tables made\"",
            "operation": " use the exact column name \"Final_Table_Made\" from the poker_player table."
        },
        "35": {
            "condition": "When the question specifies \"earnings less than 200000\"",
            "operation": " filter rows where the \"Earnings\" column value is less than 200000 using the exact comparison operator \"<\"."
        },
        "36": {
            "condition": "When the question asks for the \"maximum number\"",
            "operation": " compute the maximum value of the \"Final_Table_Made\" column using the lowercase \"max\" function."
        },
        "37": {
            "condition": "When the question mentions \"poker players\", When the question asks about \"final tables made\", When the question specifies \"earnings less than 200000\", When the question asks for the \"maximum number\", When producing output",
            "operation": " ensure the result contains only the maximum value of Final_Table_Made for players meeting the earnings criteria."
        },
        "38": {
            "condition": "When referring to poker players in the database",
            "operation": " use the exact table name \"poker_player\" instead of \"poker_players\"."
        },
        "39": {
            "condition": "When the question mentions \"final tables made\"",
            "operation": " this corresponds to the exact column name \"Final_Table_Made\" in the poker_player table."
        },
        "40": {
            "condition": "When filtering for players with earnings below 200000",
            "operation": " use the exact column name \"Earnings\" with the comparison operator < 200000, not > 200000."
        },
        "41": {
            "condition": "When computing the maximum value",
            "operation": " use the aggregate function \"max\" (lowercase) on the \"Final_Table_Made\" column."
        },
        "42": {
            "condition": "When referring to poker players in the database, When the question mentions \"final tables made\", When filtering for players with earnings below 200000, When computing the maximum value, When answering about maximum final tables across players with earnings below 200000",
            "operation": " compute max(\"Final_Table_Made\") from \"poker_player\" where \"Earnings\" < 200000."
        },
        "43": {
            "condition": "When answering about \"names of poker players\"",
            "operation": " make sure the output order: T1.Name."
        },
        "44": {
            "condition": "When the question mentions \"poker players\"",
            "operation": " \"poker players\" actually means \"people who are poker players in schema\" requiring joining people table with poker_player table."
        },
        "45": {
            "condition": "When combining T1 (people) and T2 (poker_player) for shared entities",
            "operation": " link rows where T1.People_ID = T2.People_ID exactly as shown; keep only matching pairs (inner match)."
        },
        "46": {
            "condition": "When answering about \"names of poker players\", When the question mentions \"poker players\", When combining T1 (people) and T2 (poker_player) for shared entities, When the wrong query uses a specific player_id filter (player_id = 1)",
            "operation": " do not apply any player_id filter since the question asks for all poker players."
        },
        "47": {
            "condition": "When answering about \"names of all the poker players\"",
            "operation": " make sure the output order: T1.Name"
        },
        "48": {
            "condition": "When the question mentions \"poker players\"",
            "operation": " \"poker players\" actually means \"people who are poker players in schema\""
        },
        "49": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where the canonical keys are equal exactly as shown in the amends (T1.People_ID = T2.People_ID); keep only matching pairs (inner match)"
        },
        "50": {
            "condition": "When answering about \"names of all the poker players\", When the question mentions \"poker players\", When combining T1 and T2 for shared entities, When selecting from multiple tables",
            "operation": " use people AS T1 and poker_player AS T2 as joined tables instead of only poker_players"
        },
        "51": {
            "condition": "When the question asks about poker players' names",
            "operation": " select \"T1.Name\" from the \"people\" table as T1 instead of selecting \"name\" from a non-existent table."
        },
        "52": {
            "condition": "When combining information about poker players and their earnings",
            "operation": " join \"people\" as T1 with \"poker_player\" as T2 using the condition \"T1.People_ID = T2.People_ID\" to link player identities."
        },
        "53": {
            "condition": "When the question asks about poker players' names, When combining information about poker players and their earnings, When filtering for earnings higher than 300000",
            "operation": " apply the filter \"T2.Earnings > 300000\" using the exact column from the poker_player table instead of a non-existent earnings column."
        },
        "54": {
            "condition": "When answering about poker players' names",
            "operation": " make sure the output order: T1.\"Name\""
        },
        "55": {
            "condition": "When the question mentions \"poker players\"",
            "operation": " \"poker players\" actually means \"people in schema\""
        },
        "56": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.People_ID = T2.People_ID exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "57": {
            "condition": "When answering about poker players' names, When the question mentions \"poker players\", When combining T1 and T2 for shared entities, When filtering on earnings above 300000",
            "operation": " use T2.Earnings > 300000 to correctly reference the joined table's column"
        },
        "58": {
            "condition": "When answering about poker players' names ordered by final tables",
            "operation": " make sure the output order is T1.Name."
        },
        "59": {
            "condition": "When combining people and poker_player tables",
            "operation": " link rows where T1.People_ID = T2.People_ID and keep only matching pairs (inner match)."
        },
        "60": {
            "condition": "When ordering by final tables made",
            "operation": " use T2.Final_Table_Made column in ascending order instead of descending."
        },
        "61": {
            "condition": "When answering about poker players' names ordered by final tables, When combining people and poker_player tables, When ordering by final tables made, When selecting player names",
            "operation": " use T1.Name from the people table instead of just name to specify the table source."
        },
        "62": {
            "condition": "When answering about poker players' names ordered by final tables made",
            "operation": " make sure the output order includes T1.Name and T2.Final_Table_Made."
        },
        "63": {
            "condition": "When the question mentions \"poker players\"",
            "operation": " use \"people AS T1 JOIN poker_player AS T2\" with join condition T1.People_ID = T2.People_ID instead of a single table."
        },
        "64": {
            "condition": "When ordering by number of final tables",
            "operation": " use T2.Final_Table_Made column directly instead of counting or aggregating."
        },
        "65": {
            "condition": "When selecting player names",
            "operation": " use T1.Name instead of generic name column."
        },
        "66": {
            "condition": "When answering about poker players' names ordered by final tables made, When the question mentions \"poker players\", When ordering by number of final tables, When selecting player names, When the question asks for ascending order",
            "operation": " order by T2.Final_Table_Made in ascending direction instead of descending."
        },
        "67": {
            "condition": "When answering about \"birth date of poker player\"",
            "operation": " make sure to join \"people AS T1\" with \"poker_player AS T2\" on \"T1.People_ID = T2.People_ID\" and keep only matching pairs (inner match)."
        },
        "68": {
            "condition": "When selecting the birth date",
            "operation": " use \"T1.Birth_Date\" from the people table instead of any other column."
        },
        "69": {
            "condition": "When ordering by earnings to find the lowest",
            "operation": " use \"T2.Earnings\" from the poker_player table in ascending order."
        },
        "70": {
            "condition": "When answering about \"birth date of poker player\", When selecting the birth date, When ordering by earnings to find the lowest, When limiting to the single result with lowest earnings",
            "operation": " take only the first row after ordering by earnings ascending."
        },
        "71": {
            "condition": "When answering about \"the poker player with the lowest earnings\"",
            "operation": " join table \"people AS T1\" with table \"poker_player AS T2\" where T1.People_ID equals T2.People_ID to combine player information with earnings data."
        },
        "72": {
            "condition": "When selecting the birth date",
            "operation": " use T1.Birth_Date from the people table instead of birth_date from poker_players table."
        },
        "73": {
            "condition": "When ordering by earnings to find the lowest",
            "operation": " use T2.Earnings from the poker_player table in ascending order to identify the player with minimum earnings."
        },
        "74": {
            "condition": "When answering about \"the poker player with the lowest earnings\", When selecting the birth date, When ordering by earnings to find the lowest, When combining tables for shared entities",
            "operation": " link rows where T1.People_ID = T2.People_ID exactly and keep only matching pairs (inner match)."
        },
        "75": {
            "condition": "When answering about \"money rank of the tallest poker player\"",
            "operation": " make sure the output order: T2.Money_Rank."
        },
        "76": {
            "condition": "When combining people and poker_player tables",
            "operation": " link rows where T1.People_ID = T2.People_ID exactly as shown; keep only matching pairs (inner match)."
        },
        "77": {
            "condition": "When answering about \"money rank of the tallest poker player\", When combining people and poker_player tables, When the question mentions \"tallest\"",
            "operation": " rank rows by T1.Height in descending order and keep the first 1 row."
        },
        "78": {
            "condition": "When answering about \"money rank of the poker player with the greatest height\"",
            "operation": " make sure the output order: T2.Money_Rank."
        },
        "79": {
            "condition": "When combining people AS T1 and poker_player AS T2 for shared entities",
            "operation": " link rows where T1.People_ID = T2.People_ID exactly as shown; keep only matching pairs (inner match)."
        },
        "80": {
            "condition": "When answering about \"money rank of the poker player with the greatest height\", When combining people AS T1 and poker_player AS T2 for shared entities, When the question mentions \"greatest height\"",
            "operation": " rank rows by T1.Height in descending order and keep the first 1 row."
        },
        "81": {
            "condition": "When answering about average earnings of poker players",
            "operation": " use table alias T2 for poker_player table and compute average of T2.Earnings."
        },
        "82": {
            "condition": "When filtering by height higher than 200",
            "operation": " reference T1.Height from the people table instead of height from poker_player table."
        },
        "83": {
            "condition": "When combining people and poker_player tables",
            "operation": " link rows where T1.People_ID = T2.People_ID using an inner join."
        },
        "84": {
            "condition": "When answering about average earnings of poker players, When filtering by height higher than 200, When combining people and poker_player tables, When using column names",
            "operation": " use exact case as shown in schema - Earnings (not earnings) and People_ID (not People_ID)."
        },
        "85": {
            "condition": "When answering about \"average earnings of poker players\"",
            "operation": " make sure the output order: average of T2.Earnings."
        },
        "86": {
            "condition": "When combining people and poker_player tables",
            "operation": " link rows where T1.People_ID = T2.People_ID and keep only matching pairs (inner match)."
        },
        "87": {
            "condition": "When the question mentions \"poker players who are taller than 200\"",
            "operation": " filter rows where T1.Height > 200."
        },
        "88": {
            "condition": "When answering about \"average earnings of poker players\", When combining people and poker_player tables, When the question mentions \"poker players who are taller than 200\", When computing average earnings",
            "operation": " use T2.Earnings from the poker_player table, not earnings from the poker_players table."
        },
        "89": {
            "condition": "When answering about poker player names",
            "operation": " select \"T1.Name\" from the \"people\" table instead of \"name\" from \"poker_players\"."
        },
        "90": {
            "condition": "When combining people and poker_player tables",
            "operation": " link rows where \"T1.People_ID = T2.People_ID\" and keep only matching pairs (inner match)."
        },
        "91": {
            "condition": "When answering about poker player names, When combining people and poker_player tables, When ordering by earnings in descending order",
            "operation": " sort by \"T2.Earnings DESC\" instead of \"earnings ASC\", changing both the sort direction and the source table for the earnings column."
        },
        "92": {
            "condition": "When answering about poker player names",
            "operation": " select \"T1.Name\" from the \"people\" table instead of \"name\" from \"poker_players\"."
        },
        "93": {
            "condition": "When combining people and poker player data",
            "operation": " join \"people AS T1\" with \"poker_player AS T2\" on \"T1.People_ID = T2.People_ID\" using exact key equality and keep only matching pairs."
        },
        "94": {
            "condition": "When answering about poker player names, When combining people and poker player data, When sorting by earnings",
            "operation": " order by \"T2.Earnings DESC\" instead of ascending to sort in descending order."
        },
        "95": {
            "condition": "When the question asks for counts by nationality",
            "operation": " group by the exact column \"Nationality\" from the people table."
        },
        "96": {
            "condition": "When counting people per group",
            "operation": " use the canonical key for counting (typically the primary key or unique identifier) to count distinct individuals."
        },
        "97": {
            "condition": "When selecting the nationality column",
            "operation": " use the exact capitalization \"Nationality\" as shown in the schema to match the GROUP BY clause."
        },
        "98": {
            "condition": "When the question asks for counts by nationality, When counting people per group, When selecting the nationality column, When the question asks \"how many people are there of each nationality\"",
            "operation": " organize results by \"Nationality\" and compute the count of people per nationality group."
        },
        "99": {
            "condition": "When the question asks for the most common nationality",
            "operation": " use the exact column name \"Nationality\" from the people table."
        },
        "100": {
            "condition": "When counting occurrences of nationality",
            "operation": " count all rows using COUNT(*) and group by \"Nationality\"."
        },
        "101": {
            "condition": "When ordering to find the most common",
            "operation": " order the results by the count in descending order to get the highest count first."
        },
        "102": {
            "condition": "When the question asks for the most common nationality, When counting occurrences of nationality, When ordering to find the most common, When the question asks for the most common nationality",
            "operation": " return only the top result (limit 1)."
        },
        "103": {
            "condition": "When the question asks for the most common nationality of people",
            "operation": " identify the nationality with the highest count of occurrences."
        },
        "104": {
            "condition": "When counting occurrences of nationalities",
            "operation": " count the number of rows for each distinct Nationality value."
        },
        "105": {
            "condition": "When determining the most common value",
            "operation": " rank nationalities by their count in descending order and take the first result."
        },
        "106": {
            "condition": "When the question asks for the most common nationality of people, When counting occurrences of nationalities, When determining the most common value, When the question asks for only the nationality value (not the count)",
            "operation": " return only the Nationality column in the output."
        },
        "107": {
            "condition": "When the question asks for nationality",
            "operation": " use the exact column token \"Nationality\" with proper case sensitivity from the schema."
        },
        "108": {
            "condition": "When counting occurrences of nationality",
            "operation": " count all rows using COUNT(*) and group by \"Nationality\"."
        },
        "109": {
            "condition": "When finding the most common value",
            "operation": " order the results by the count in descending order and take only the first result."
        },
        "110": {
            "condition": "When ordering by aggregate results",
            "operation": " order directly by the aggregate expression COUNT(*) instead of using an alias."
        },
        "111": {
            "condition": "When the question asks for nationality, When counting occurrences of nationality, When finding the most common value, When ordering by aggregate results, When selecting output columns",
            "operation": " include only \"Nationality\" in the SELECT list, not the count alias."
        },
        "112": {
            "condition": "When selecting the name column from the people table",
            "operation": " use the exact column name \"Name\" with proper case sensitivity instead of \"name\"."
        },
        "113": {
            "condition": "When filtering for people whose nationality is not \"Russia\"",
            "operation": " use the inequality operator (!=) instead of equality operator (=) to exclude Russian nationals."
        },
        "114": {
            "condition": "When selecting the name column from the people table, When filtering for people whose nationality is not \"Russia\", When using the string literal \"Russia\"",
            "operation": " use double quotes \"Russia\" instead of single quotes 'Russia' to match the required literal format."
        },
        "115": {
            "condition": "When the question asks for \"names of people\"",
            "operation": " select the exact column token \"Name\" from the people table."
        },
        "116": {
            "condition": "When filtering for people who are \"not from Russia\"",
            "operation": " use the exact column token \"Nationality\" with the != operator and the exact string literal \"Russia\" (with double quotes)."
        },
        "117": {
            "condition": "When the question asks for \"names of people\", When filtering for people who are \"not from Russia\", When the question mentions \"people\"",
            "operation": " use the table \"people\" as the base table T1."
        },
        "118": {
            "condition": "When the question asks for \"names of people\"",
            "operation": " select the exact column \"Name\" from the people table."
        },
        "119": {
            "condition": "When filtering for people who are not poker players",
            "operation": " exclude people whose \"People_ID\" exists in the poker_player table using a NOT IN subquery."
        },
        "120": {
            "condition": "When the question asks for \"names of people\", When filtering for people who are not poker players, When comparing identifiers between tables",
            "operation": " use the exact column \"People_ID\" for matching between the main query and subquery."
        },
        "121": {
            "condition": "When the question asks for names of people who do not play poker",
            "operation": " select \"Name\" from the people table instead of \"name\" to match the correct column casing."
        },
        "122": {
            "condition": "When filtering people who do not play poker",
            "operation": " use a subquery with NOT IN to filter by \"People_ID\" values that exist in the poker_player table instead of comparing to a non-existent \"game\" column."
        },
        "123": {
            "condition": "When the question asks for names of people who do not play poker, When filtering people who do not play poker, When joining between people and poker_player tables",
            "operation": " reference the correct join key \"People_ID\" in both the main query and subquery to properly identify poker players."
        },
        "124": {
            "condition": "When the question asks for \"distinct nationalities\"",
            "operation": " count the number of unique values in the \"Nationality\" column using count(DISTINCT Nationality) instead of counting all rows."
        },
        "125": {
            "condition": "When the question asks for \"distinct nationalities\", When counting distinct values",
            "operation": " include the specific column reference \"Nationality\" in the aggregate function rather than omitting it."
        },
        "126": {
            "condition": "When counting the number of different nationalities",
            "operation": " use count(DISTINCT Nationality) instead of COUNT(*) to count distinct values rather than all rows."
        },
        "127": {
            "condition": "When the question asks for \"different nationalities\"",
            "operation": " include the Nationality column in the aggregate function instead of omitting it from the output."
        },
        "128": {
            "condition": "When counting the number of different nationalities, When the question asks for \"different nationalities\", When counting distinct values",
            "operation": " remove any WHERE Nationality IS NOT NULL filter as counting distinct values inherently excludes NULLs."
        }
    },
    "voter_1": {
        "0": {
            "condition": "When answering about \"how many states\"",
            "operation": " query the \"area_code_state\" table instead of the \"cities\" table."
        },
        "1": {
            "condition": "When answering about \"how many states\", When counting records",
            "operation": " use lowercase \"count(*)\" instead of uppercase \"COUNT(*)\" for consistency."
        },
        "2": {
            "condition": "When the question asks to list vote ids, phone numbers and states",
            "operation": " include all three columns \"vote_id\", \"phone_number\", and \"state\" in the output in the order specified by the question."
        },
        "3": {
            "condition": "When the schema shows column \"state\" as a varchar(2) in table VOTES",
            "operation": " use the exact column name \"state\" with the correct data type and format."
        },
        "4": {
            "condition": "When the question asks to list vote ids, phone numbers and states, When the schema shows column \"state\" as a varchar(2) in table VOTES, When the question specifies output columns",
            "operation": " maintain the exact column order of vote id, phone number, then state as requested."
        },
        "5": {
            "condition": "When answering about maximum and minimum values of area codes",
            "operation": " use the \"area_code_state\" table as the data source instead of the \"customers\" table."
        },
        "6": {
            "condition": "When answering about maximum and minimum values of area codes, When computing maximum and minimum values of area codes",
            "operation": " aggregate the \"area_code\" column from the \"area_code_state\" table."
        },
        "7": {
            "condition": "When the question asks for \"last date created\"",
            "operation": " use the MAX function on the exact column name \"created\" to find the most recent timestamp."
        },
        "8": {
            "condition": "When filtering for votes from the state 'CA'",
            "operation": " use the exact literal value 'CA' with the state column filter."
        },
        "9": {
            "condition": "When the question asks for \"last date created\", When filtering for votes from the state 'CA', When referring to column names in the schema",
            "operation": " use the exact token \"created\" instead of \"created_at\" as specified in the schema."
        },
        "10": {
            "condition": "When the question asks for contestant names excluding 'Jessie Alloway'",
            "operation": " use inequality filter != 'Jessie Alloway' instead of equality filter = 'Jessie Alloway' to exclude rather than include that specific record."
        },
        "11": {
            "condition": "When selecting contestant names",
            "operation": " use the exact column token \"contestant_name\" instead of \"name\" in both the SELECT list and WHERE clause."
        },
        "12": {
            "condition": "When the question asks for contestant names excluding 'Jessie Alloway', When selecting contestant names, When handling the literal value 'Jessie Alloway'",
            "operation": " preserve the exact case, spacing, and punctuation as shown in the question and amends."
        },
        "13": {
            "condition": "When the question asks for \"distinct states and create time\"",
            "operation": " use DISTINCT to eliminate duplicate combinations of state and created values."
        },
        "14": {
            "condition": "When the question mentions \"create time\"",
            "operation": " \"create time\" actually means the \"created\" column in the votes table."
        },
        "15": {
            "condition": "When the question asks for \"distinct states and create time\", When the question mentions \"create time\", When selecting output columns",
            "operation": " maintain the order state then created as implied by the question."
        },
        "16": {
            "condition": "When answering about contestants with at least two votes",
            "operation": " combine data from both contestants and votes tables using T1.contestant_number = T2.contestant_number to link matching records."
        },
        "17": {
            "condition": "When counting votes per contestant",
            "operation": " group results by T1.contestant_number to aggregate votes for each contestant."
        },
        "18": {
            "condition": "When filtering for contestants with at least two votes",
            "operation": " apply the condition count(*) >= 2 after grouping instead of before."
        },
        "19": {
            "condition": "When answering about contestants with at least two votes, When counting votes per contestant, When filtering for contestants with at least two votes, When selecting contestant information",
            "operation": " use qualified column names T1.contestant_number and T1.contestant_name instead of unqualified column names."
        },
        "20": {
            "condition": "When answering about contestants who got voted",
            "operation": " combine contestants table (T1) with votes table (T2) by linking rows where T1.contestant_number equals T2.contestant_number and keep only matching pairs (inner match)."
        },
        "21": {
            "condition": "When counting votes per contestant",
            "operation": " organize results by T1.contestant_number and compute the number of votes using count(*) per group."
        },
        "22": {
            "condition": "When finding the contestant with least votes",
            "operation": " rank rows by the vote count in ascending order and keep the first 1 row."
        },
        "23": {
            "condition": "When answering about contestants who got voted, When counting votes per contestant, When finding the contestant with least votes, When producing output",
            "operation": " return contestant_number and contestant_name from T1 in that order."
        },
        "24": {
            "condition": "When the question asks for records matching multiple state values with 'or' logic",
            "operation": " use OR operator between state conditions instead of AND operator, as a record cannot simultaneously have both 'NY' and 'CA' values for the state column."
        },
        "25": {
            "condition": "When counting votes from specific states",
            "operation": " maintain the COUNT(*) aggregation and table source without changes to other clauses."
        },
        "26": {
            "condition": "When the question asks for records matching multiple state values with 'or' logic, When counting votes from specific states, When filtering for state values 'NY' or 'CA'",
            "operation": " ensure the condition correctly counts records where state is either 'NY' or 'CA' instead of requiring both values simultaneously."
        },
        "27": {
            "condition": "When counting contestants who did not get voted",
            "operation": " use contestant_number as the counting key instead of checking for NULL values in a votes column."
        },
        "28": {
            "condition": "When identifying contestants without votes",
            "operation": " check for contestants whose contestant_number does not appear in the votes table rather than checking for NULL values."
        },
        "29": {
            "condition": "When counting contestants who did not get voted, When identifying contestants without votes, When filtering contestants without votes",
            "operation": " use a NOT IN subquery against the votes table to find contestants with no corresponding vote records."
        },
        "30": {
            "condition": "When answering about \"area code with the most voters\"",
            "operation": " make sure the output order: T1.area_code only"
        },
        "31": {
            "condition": "When combining area_code_state and votes tables",
            "operation": " link rows where T1.state = T2.state and keep only matching pairs (inner match)"
        },
        "32": {
            "condition": "When grouping by area code",
            "operation": " organize results by T1.area_code and compute count per group"
        },
        "33": {
            "condition": "When answering about \"area code with the most voters\", When combining area_code_state and votes tables, When grouping by area code, When the question mentions \"most voters voted\"",
            "operation": " rank rows by count(*) in descending order and keep the first 1 row"
        },
        "34": {
            "condition": "When answering about votes for a specific contestant",
            "operation": " join contestants table as T1 to votes table as T2 using the condition T1.contestant_number = T2.contestant_number instead of querying only the votes table."
        },
        "35": {
            "condition": "When filtering by contestant name",
            "operation": " apply the filter T1.contestant_name = 'Tabatha Gehling' to the contestants table rather than directly to the votes table."
        },
        "36": {
            "condition": "When answering about votes for a specific contestant, When filtering by contestant name, When selecting vote information",
            "operation": " reference columns T2.created, T2.state, and T2.phone_number from the votes table instead of create_date, state, and phone_number from a single table."
        },
        "37": {
            "condition": "When the question asks for area codes where voters voted for both 'Tabatha Gehling' and 'Kelly Clauss'",
            "operation": " use INTERSECT between two complete query blocks instead of a single query with JOIN on area_code."
        },
        "38": {
            "condition": "When filtering by contestant names 'Tabatha Gehling' and 'Kelly Clauss'",
            "operation": " join the contestants table with votes on contestant_number instead of filtering votes directly by contestant names."
        },
        "39": {
            "condition": "When selecting area codes",
            "operation": " join area_code_state table on state instead of selecting area_code directly from votes."
        },
        "40": {
            "condition": "When referencing contestant names",
            "operation": " use contestant_name from contestants table instead of contestant from votes table."
        },
        "41": {
            "condition": "When using INTERSECT",
            "operation": " remove DISTINCT since INTERSECT inherently returns unique results."
        },
        "42": {
            "condition": "When combining tables for shared entities",
            "operation": " link votes and contestants using votes.contestant_number = contestants.contestant_number exactly as shown in the schema."
        },
        "43": {
            "condition": "When the question asks for area codes where voters voted for both 'Tabatha Gehling' and 'Kelly Clauss', When filtering by contestant names 'Tabatha Gehling' and 'Kelly Clauss', When selecting area codes, When referencing contestant names, When using INTERSECT, When combining tables for shared entities, When combining tables for area codes",
            "operation": " link votes and area_code_state using votes.state = area_code_state.state exactly as shown in the schema."
        },
        "44": {
            "condition": "When the question asks for contestant names containing 'Al'",
            "operation": " use the exact column name \"contestant_name\" from the CONTESTANTS table."
        },
        "45": {
            "condition": "When performing substring matching for 'Al'",
            "operation": " use the lowercase pattern \"%al%\" for case-insensitive matching instead of the uppercase 'Al' literal."
        },
        "46": {
            "condition": "When the question asks for contestant names containing 'Al', When performing substring matching for 'Al', When selecting output columns",
            "operation": " return only the \"contestant_name\" column in the results."
        }
    },
    "world_1": {
        "0": {
            "condition": "When the question asks about countries",
            "operation": " use the \"country\" table instead of \"countries\" table."
        },
        "1": {
            "condition": "When the question mentions \"names\"",
            "operation": " use the \"Name\" column instead of \"name\" column."
        },
        "2": {
            "condition": "When the question asks about independence year",
            "operation": " use the \"IndepYear\" column instead of \"independence_year\" column."
        },
        "3": {
            "condition": "When the question asks about countries, When the question mentions \"names\", When the question asks about independence year, When filtering for countries that became independent after 1950",
            "operation": " apply the condition IndepYear > 1950."
        },
        "4": {
            "condition": "When the question asks for \"nations\"",
            "operation": " use table \"country\" instead of \"nations\" as the main data source."
        },
        "5": {
            "condition": "When the question asks for \"names\"",
            "operation": " select column \"Name\" from table \"country\" instead of \"name\"."
        },
        "6": {
            "condition": "When the question asks for \"nations\", When the question asks for \"names\", When the question asks for nations \"founded after 1950\"",
            "operation": " filter using column \"IndepYear > 1950\" instead of \"founded_year < 1950\", changing both the column reference and comparison operator direction to get values greater than 1950."
        },
        "7": {
            "condition": "When answering about \"countries with a republic form of government\"",
            "operation": " reference table \"country\" instead of \"countries\"."
        },
        "8": {
            "condition": "When filtering for republic form of government",
            "operation": " use column \"GovernmentForm\" instead of \"government_form\"."
        },
        "9": {
            "condition": "When answering about \"countries with a republic form of government\", When filtering for republic form of government, When specifying the literal value for republic",
            "operation": " use double quotes \"Republic\" instead of single quotes 'Republic'."
        },
        "10": {
            "condition": "When answering about \"countries with governments that are republics\"",
            "operation": " use table \"country\" instead of \"countries\" and column \"GovernmentForm\" instead of \"government\"."
        },
        "11": {
            "condition": "When filtering for republic governments",
            "operation": " use the exact literal value \"Republic\" (with capital R) instead of 'republic'."
        },
        "12": {
            "condition": "When answering about \"countries with governments that are republics\", When filtering for republic governments, When counting countries",
            "operation": " compute the number of rows where \"GovernmentForm\" equals \"Republic\" in table \"country\"."
        },
        "13": {
            "condition": "When the question asks about \"surface area\"",
            "operation": " use the exact column name \"SurfaceArea\" from table \"country\" instead of \"area\"."
        },
        "14": {
            "condition": "When the question refers to \"countries\"",
            "operation": " use the exact table name \"country\" instead of \"countries\"."
        },
        "15": {
            "condition": "When the question mentions \"Caribbean region\"",
            "operation": " use the exact column name \"Region\" instead of \"region\" and the exact string literal 'Caribbean' with single quotes."
        },
        "16": {
            "condition": "When the question asks about \"surface area\", When the question refers to \"countries\", When the question mentions \"Caribbean region\", When calculating total surface area",
            "operation": " sum the \"SurfaceArea\" values for rows where \"Region\" equals 'Caribbean'."
        },
        "17": {
            "condition": "When answering about \"surface area of countries in the Caribbean\"",
            "operation": " use the exact column name \"SurfaceArea\" from the country table."
        },
        "18": {
            "condition": "When the question mentions \"Caribbean\"",
            "operation": " use the exact string literal \"Caribbean\" with double quotes."
        },
        "19": {
            "condition": "When calculating total surface area",
            "operation": " sum the \"SurfaceArea\" values for all matching rows."
        },
        "20": {
            "condition": "When answering about \"surface area of countries in the Caribbean\", When the question mentions \"Caribbean\", When calculating total surface area, When filtering by region",
            "operation": " use the condition where region equals \"Caribbean\" to select Caribbean countries."
        },
        "21": {
            "condition": "When answering about \"which continent is Anguilla in\"",
            "operation": " make sure the output order: \"Continent\"."
        },
        "22": {
            "condition": "When the question mentions \"Anguilla\"",
            "operation": " \"Anguilla\" actually means \"Name\" in schema and must be matched exactly as \"Anguilla\"."
        },
        "23": {
            "condition": "When selecting from the country table",
            "operation": " use double quotes for column names \"Name\" and \"Continent\" exactly as shown in the schema."
        },
        "24": {
            "condition": "When answering about \"which continent is Anguilla in\", When the question mentions \"Anguilla\", When selecting from the country table, When filtering for a specific country name",
            "operation": " use the exact string literal \"Anguilla\" with double quotes as specified in the amends."
        },
        "25": {
            "condition": "When the question asks about a country's continent",
            "operation": " use table \"country\" with column \"Name\" for filtering and column \"Continent\" for the output."
        },
        "26": {
            "condition": "When filtering for a specific country name",
            "operation": " use the exact string literal \"Anguilla\" with double quotes."
        },
        "27": {
            "condition": "When the question asks about a country's continent, When filtering for a specific country name, When selecting the continent name",
            "operation": " output only the \"Continent\" column from the matching row."
        },
        "28": {
            "condition": "When the question asks about a city's region",
            "operation": " join table \"country\" as T1 and table \"city\" as T2 using LEFT JOIN on T1.Code = T2.CountryCode instead of querying a single table."
        },
        "29": {
            "condition": "When filtering for a specific city name",
            "operation": " use T2.Name = \"Kabul\" with exact case and double quotes instead of city = 'Kabul'."
        },
        "30": {
            "condition": "When selecting the region information",
            "operation": " use T1.Region from the joined country table instead of region from a cities table."
        },
        "31": {
            "condition": "When the question asks about a city's region, When filtering for a specific city name, When selecting the region information, When combining country and city tables",
            "operation": " use the exact join condition T1.Code = T2.CountryCode to link countries with their cities."
        },
        "32": {
            "condition": "When the question asks about a city's region",
            "operation": " retrieve the \"Region\" column from table \"country\" (T1) instead of from table \"cities\"."
        },
        "33": {
            "condition": "When joining tables for city-country relationships",
            "operation": " link table \"city\" (T2) with table \"country\" (T1) using the condition T1.Code = T2.CountryCode."
        },
        "34": {
            "condition": "When filtering for a specific city name",
            "operation": " use the exact literal \"Kabul\" with the column T2.Name instead of 'Kabul' with name."
        },
        "35": {
            "condition": "When the question asks about a city's region, When joining tables for city-country relationships, When filtering for a specific city name, When using table aliases",
            "operation": " assign T1 to table \"country\" and T2 to table \"city\" consistently throughout the query."
        },
        "36": {
            "condition": "When answering about \"most popular language in Aruba\"",
            "operation": " make sure the output order: T2.Language, T2.Percentage."
        },
        "37": {
            "condition": "When the question mentions \"Aruba\"",
            "operation": " \"Aruba\" actually means \"T1.Name = 'Aruba'\" in schema."
        },
        "38": {
            "condition": "When combining country AS T1 and countrylanguage AS T2",
            "operation": " link rows where T1.Code = T2.CountryCode exactly as shown; keep only matching pairs (inner match)."
        },
        "39": {
            "condition": "When the question asks for \"most popular\" language",
            "operation": " rank rows by T2.Percentage in descending order and keep the first 1 row."
        },
        "40": {
            "condition": "When answering about \"most popular language in Aruba\", When the question mentions \"Aruba\", When combining country AS T1 and countrylanguage AS T2, When the question asks for \"most popular\" language, When handling text literals",
            "operation": " do not change case, spacing, or punctuation - use exact value 'Aruba'."
        },
        "41": {
            "condition": "When answering about \"predominantly spoken language\"",
            "operation": " make sure the output order: T2.Language."
        },
        "42": {
            "condition": "When the question mentions \"Aruba\"",
            "operation": " \"Aruba\" actually means T1.Name = \"Aruba\" in schema."
        },
        "43": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "44": {
            "condition": "When answering about \"predominantly spoken language\", When the question mentions \"Aruba\", When combining T1 and T2 for shared entities, When the question mentions \"predominantly\" or asks for the most spoken language",
            "operation": " rank rows by T2.Percentage in descending direction and keep the first 1 row."
        },
        "45": {
            "condition": "When the question asks about population and life expectancy",
            "operation": " select \"Population\" and \"LifeExpectancy\" columns from the country table."
        },
        "46": {
            "condition": "When filtering for Brazil",
            "operation": " use the condition Name = \"Brazil\" with exact case and double quotes."
        },
        "47": {
            "condition": "When the question asks about population and life expectancy, When filtering for Brazil, When referring to the countries table",
            "operation": " use the exact table name \"country\" instead of \"countries\"."
        },
        "48": {
            "condition": "When answering about \"Brazil's population and life expectancies\"",
            "operation": " make sure the output order: \"Population\", \"LifeExpectancy\"."
        },
        "49": {
            "condition": "When the question mentions \"Brazil\"",
            "operation": " \"Brazil\" actually means \"Name = \\\"Brazil\\\"\" in schema."
        },
        "50": {
            "condition": "When selecting columns",
            "operation": " use exact column tokens \"Population\" and \"LifeExpectancy\" instead of similar names."
        },
        "51": {
            "condition": "When referring to the table",
            "operation": " use table \"country\" instead of similar table names."
        },
        "52": {
            "condition": "When answering about \"Brazil's population and life expectancies\", When the question mentions \"Brazil\", When selecting columns, When referring to the table, When filtering for specific country",
            "operation": " omit the name column from output and only return the requested population and life expectancy data."
        },
        "53": {
            "condition": "When the question asks about a country's region and population",
            "operation": " use table \"country\" with columns \"Name\", \"Population\", and \"Region\""
        },
        "54": {
            "condition": "When filtering for a specific country name",
            "operation": " use double quotes around the literal value exactly as shown (e.g., \"Angola\")"
        },
        "55": {
            "condition": "When the question asks about a country's region and population, When filtering for a specific country name, When selecting output columns",
            "operation": " maintain the order of \"Region\" followed by \"Population\" as specified in the question"
        },
        "56": {
            "condition": "When answering about \"region and population of Angola\"",
            "operation": " make sure the output order: Population, Region instead of Region, Population."
        },
        "57": {
            "condition": "When the question mentions \"Angola\"",
            "operation": " \"Angola\" actually means \"Name = 'Angola'\" in the country table."
        },
        "58": {
            "condition": "When answering about \"region and population of Angola\", When the question mentions \"Angola\", When selecting from the country table",
            "operation": " use the exact table name \"country\" without quotes as shown in the schema."
        },
        "59": {
            "condition": "When the question asks about a country's region and population",
            "operation": " use table \"country\" with columns \"Name\", \"Population\", and \"Region\""
        },
        "60": {
            "condition": "When filtering for a specific country name",
            "operation": " use exact string literal \"Angola\" with double quotes for the WHERE condition"
        },
        "61": {
            "condition": "When the question asks about a country's region and population, When filtering for a specific country name, When selecting output columns",
            "operation": " maintain the order of \"Region\" first then \"Population\" as implied by the question"
        },
        "62": {
            "condition": "When the question asks about a country's region and population",
            "operation": " make sure the output order is Population first, then Region."
        },
        "63": {
            "condition": "When filtering for a specific country name",
            "operation": " use the exact literal \"Angola\" with double quotes and match case exactly."
        },
        "64": {
            "condition": "When the question asks about a country's region and population, When filtering for a specific country name, When selecting columns from the country table",
            "operation": " use the exact column names Region and Population as shown in the schema."
        },
        "65": {
            "condition": "When answering about average life expectancy",
            "operation": " use the exact column name \"LifeExpectancy\" from table \"country\" with the aggregate function avg."
        },
        "66": {
            "condition": "When filtering by region \"Central Africa\"",
            "operation": " use the exact literal value \"Central Africa\" with double quotes."
        },
        "67": {
            "condition": "When answering about average life expectancy, When filtering by region \"Central Africa\", When referring to the table containing life expectancy data",
            "operation": " use the exact table name \"country\" instead of \"countries\"."
        },
        "68": {
            "condition": "When the question asks about \"life expectancy\"",
            "operation": " use the exact column name \"LifeExpectancy\" from the country table."
        },
        "69": {
            "condition": "When the question mentions \"Central Africa\"",
            "operation": " use the exact literal value 'Central Africa' with the exact column name \"Region\" from the country table."
        },
        "70": {
            "condition": "When the question asks for \"average life expectancy\"",
            "operation": " compute the average of the \"LifeExpectancy\" column values."
        },
        "71": {
            "condition": "When the question asks about \"life expectancy\", When the question mentions \"Central Africa\", When the question asks for \"average life expectancy\", When filtering by region",
            "operation": " only include rows where the \"Region\" column equals exactly 'Central Africa'."
        },
        "72": {
            "condition": "When the question asks for a country name",
            "operation": " use the exact column token \"Name\" from table country (not \"name\")."
        },
        "73": {
            "condition": "When filtering for countries in Asia",
            "operation": " use the exact column token \"Continent\" and the exact literal value \"Asia\" with double quotes."
        },
        "74": {
            "condition": "When ordering by life expectancy to find the shortest",
            "operation": " use the exact column token \"LifeExpectancy\" and sort in ascending order (lowest values first)."
        },
        "75": {
            "condition": "When the question asks for a country name, When filtering for countries in Asia, When ordering by life expectancy to find the shortest, When finding the single country with the shortest life expectancy",
            "operation": " take only the first row after ordering by LifeExpectancy in ascending order."
        },
        "76": {
            "condition": "When the question asks for country names",
            "operation": " use the exact column \"Name\" from table \"country\" (not \"name\" from other tables)."
        },
        "77": {
            "condition": "When filtering for countries in Asia",
            "operation": " use the exact column \"Continent\" with the exact string literal \"Asia\" (with double quotes)."
        },
        "78": {
            "condition": "When finding the lowest life expectancy",
            "operation": " order by \"LifeExpectancy\" in ascending order (default) to get the minimum value."
        },
        "79": {
            "condition": "When the question asks for country names, When filtering for countries in Asia, When finding the lowest life expectancy, When retrieving a single result",
            "operation": " take only the first row after ordering to get the country with the lowest life expectancy."
        },
        "80": {
            "condition": "When the question asks about countries",
            "operation": " use the exact table name \"country\" instead of \"countries\"."
        },
        "81": {
            "condition": "When computing aggregates like total population and maximum GNP",
            "operation": " use lowercase function names \"sum\" and \"max\" instead of uppercase versions."
        },
        "82": {
            "condition": "When filtering for the continent Asia",
            "operation": " use double quotes \"Asia\" instead of single quotes for the string literal."
        },
        "83": {
            "condition": "When the question asks about countries, When computing aggregates like total population and maximum GNP, When filtering for the continent Asia, When producing output columns",
            "operation": " do not use column aliases like \"TotalPopulation\" and \"MaxGNP\" - return the raw aggregate expressions directly."
        },
        "84": {
            "condition": "When calculating total population",
            "operation": " use sum(Population) instead of counting rows with COUNT(*)."
        },
        "85": {
            "condition": "When referencing the continent column",
            "operation": " use exact case-sensitive identifier \"Continent\" instead of \"continent\"."
        },
        "86": {
            "condition": "When using string literals for continent values",
            "operation": " use double quotes \"Asia\" instead of single quotes 'Asia'."
        },
        "87": {
            "condition": "When calculating total population, When referencing the continent column, When using string literals for continent values, When producing output columns",
            "operation": " do not include AS aliases like \"AS population\" or \"AS largest_gnp\" in the final result."
        },
        "88": {
            "condition": "When answering about total surface area of continents",
            "operation": " use the \"SurfaceArea\" column from the \"country\" table with the sum aggregate function."
        },
        "89": {
            "condition": "When the question mentions \"continents Asia and Europe\"",
            "operation": " filter on the \"Continent\" column with exact values \"Asia\" and \"Europe\"."
        },
        "90": {
            "condition": "When answering about total surface area of continents, When the question mentions \"continents Asia and Europe\", When combining data from the country table",
            "operation": " ensure you are querying from the \"country\" table, not the \"continents\" table."
        },
        "91": {
            "condition": "When the question asks about surface area",
            "operation": " use the exact column name \"SurfaceArea\" from the country table."
        },
        "92": {
            "condition": "When the question mentions continents",
            "operation": " use the exact column name \"Continent\" from the country table."
        },
        "93": {
            "condition": "When the question refers to countries",
            "operation": " use the exact table name \"country\" instead of \"countries\"."
        },
        "94": {
            "condition": "When filtering for specific continents \"Asia\" or \"Europe\"",
            "operation": " use double quotes around the literal values \"Asia\" and \"Europe\" exactly as shown."
        },
        "95": {
            "condition": "When the question asks about surface area, When the question mentions continents, When the question refers to countries, When filtering for specific continents \"Asia\" or \"Europe\", When calculating total surface area for multiple continents",
            "operation": " sum the \"SurfaceArea\" values where \"Continent\" equals either \"Asia\" or \"Europe\"."
        },
        "96": {
            "condition": "When answering about population count",
            "operation": " use sum(\"Population\") instead of COUNT(*) to aggregate population values."
        },
        "97": {
            "condition": "When the question mentions \"people\"",
            "operation": " the data actually comes from table \"city\" instead of \"people\"."
        },
        "98": {
            "condition": "When answering about population count, When the question mentions \"people\", When filtering for district values",
            "operation": " use double quotes \"Gelderland\" instead of single quotes for the exact literal value."
        },
        "99": {
            "condition": "When answering about \"total population of Gelderland district\"",
            "operation": " query the \"city\" table instead of the \"districts\" table."
        },
        "100": {
            "condition": "When filtering for Gelderland district",
            "operation": " use the \"District\" column filter instead of the \"name\" column filter."
        },
        "101": {
            "condition": "When specifying the literal value for Gelderland",
            "operation": " use the exact string value \"Gelderland\" instead of 'Gelderland'."
        },
        "102": {
            "condition": "When answering about \"total population of Gelderland district\", When filtering for Gelderland district, When specifying the literal value for Gelderland, When performing aggregation",
            "operation": " use lowercase \"sum\" function instead of uppercase \"SUM\"."
        },
        "103": {
            "condition": "When the question mentions \"US territory\"",
            "operation": " \"US territory\" actually means \"GovernmentForm\" in schema with exact literal value \"US Territory\""
        },
        "104": {
            "condition": "When filtering for nations considered US territory",
            "operation": " use condition where \"GovernmentForm\" equals \"US Territory\" exactly as specified"
        },
        "105": {
            "condition": "When the question mentions \"US territory\", When filtering for nations considered US territory, When computing mean GNP and total population",
            "operation": " calculate average of GNP and sum of Population for the filtered nations"
        },
        "106": {
            "condition": "When answering about \"unique languages spoken in the world\"",
            "operation": " count distinct values of the LANGUAGE column."
        },
        "107": {
            "condition": "When the question mentions \"languages\"",
            "operation": " use the \"countrylanguage\" table instead of \"languages\" table."
        },
        "108": {
            "condition": "When answering about \"unique languages spoken in the world\", When the question mentions \"languages\", When counting distinct languages",
            "operation": " use the exact column token \"LANGUAGE\" from the countrylanguage table."
        },
        "109": {
            "condition": "When counting distinct languages",
            "operation": " use the exact column token \"LANGUAGE\" from the countrylanguage table."
        },
        "110": {
            "condition": "When the question asks for \"distinct languages\"",
            "operation": " compute the number of unique values in the \"LANGUAGE\" column."
        },
        "111": {
            "condition": "When counting distinct languages, When the question asks for \"distinct languages\", When querying language data",
            "operation": " use the \"countrylanguage\" table instead of any other table name."
        },
        "112": {
            "condition": "When the question asks for \"type of governments\"",
            "operation": " use \"GovernmentForm\" column to count distinct government forms rather than counting all rows."
        },
        "113": {
            "condition": "When referencing the table containing country data",
            "operation": " use table name \"country\" instead of \"countries\"."
        },
        "114": {
            "condition": "When filtering by continent",
            "operation": " use column \"Continent\" with exact capitalization."
        },
        "115": {
            "condition": "When filtering for African countries",
            "operation": " use literal value \"Africa\" with double quotes exactly as specified."
        },
        "116": {
            "condition": "When the question asks for \"type of governments\", When referencing the table containing country data, When filtering by continent, When filtering for African countries, When counting distinct government forms",
            "operation": " use count(DISTINCT GovernmentForm) to count unique government types rather than total rows."
        },
        "117": {
            "condition": "When answering about \"different forms of governments in Africa\"",
            "operation": " count distinct values of \"GovernmentForm\" instead of counting all rows."
        },
        "118": {
            "condition": "When the question mentions \"Africa\"",
            "operation": " use the exact literal \"Africa\" with double quotes for comparison."
        },
        "119": {
            "condition": "When referring to the table containing country data",
            "operation": " use table name \"country\" instead of \"countries\"."
        },
        "120": {
            "condition": "When accessing the continent column",
            "operation": " use exact column name \"Continent\" with proper capitalization."
        },
        "121": {
            "condition": "When answering about \"different forms of governments in Africa\", When the question mentions \"Africa\", When referring to the table containing country data, When accessing the continent column, When counting distinct government forms",
            "operation": " apply the count to \"GovernmentForm\" column specifically for rows where \"Continent\" equals \"Africa\"."
        },
        "122": {
            "condition": "When answering about \"total number of languages used in Aruba\"",
            "operation": " make sure the output order: COUNT(T2.Language)"
        },
        "123": {
            "condition": "When the question mentions \"Aruba\"",
            "operation": " \"Aruba\" actually means \"T1.Name = 'Aruba'\" in schema"
        },
        "124": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "125": {
            "condition": "When answering about \"total number of languages used in Aruba\", When the question mentions \"Aruba\", When combining T1 and T2 for shared entities, When the question asks for \"count of languages\"",
            "operation": " compute the number of rows using T2.Language as the counting key"
        },
        "126": {
            "condition": "When answering about \"languages spoken in Aruba\"",
            "operation": " make sure the output order: count of languages"
        },
        "127": {
            "condition": "When the question mentions \"Aruba\"",
            "operation": " \"Aruba\" actually means \"T1.Name = 'Aruba'\" in schema"
        },
        "128": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "129": {
            "condition": "When answering about \"languages spoken in Aruba\", When the question mentions \"Aruba\", When combining T1 and T2 for shared entities, When the question asks for \"count of languages\"",
            "operation": " compute the number of unique values of T2.Language using the exact token from the amends"
        },
        "130": {
            "condition": "When answering about \"How many official languages does Afghanistan have?\"",
            "operation": " make sure the output order: count of official languages for Afghanistan."
        },
        "131": {
            "condition": "When the question mentions \"Afghanistan\"",
            "operation": " \"Afghanistan\" actually means \"T1.Name = 'Afghanistan'\" in schema."
        },
        "132": {
            "condition": "When the question mentions \"official languages\"",
            "operation": " \"official languages\" actually means \"T2.IsOfficial = 'T'\" in schema."
        },
        "133": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "134": {
            "condition": "When answering about \"How many official languages does Afghanistan have?\", When the question mentions \"Afghanistan\", When the question mentions \"official languages\", When combining T1 and T2 for shared entities, When the question asks for \"count of official languages\"",
            "operation": " compute the number of rows using the canonical key relationship established by T1.Code = T2.CountryCode where T1.Name = 'Afghanistan' and T2.IsOfficial = 'T'."
        },
        "135": {
            "condition": "When answering about \"official languages in Afghanistan\"",
            "operation": " make sure the output order: count of official languages."
        },
        "136": {
            "condition": "When the question mentions \"Afghanistan\"",
            "operation": " \"Afghanistan\" actually means \"T1.Name\" in schema."
        },
        "137": {
            "condition": "When the question mentions \"official languages\"",
            "operation": " \"official languages\" actually means \"T2.IsOfficial = 'T'\" in schema."
        },
        "138": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "139": {
            "condition": "When answering about \"official languages in Afghanistan\", When the question mentions \"Afghanistan\", When the question mentions \"official languages\", When combining T1 and T2 for shared entities, When the question asks for \"count of official languages\"",
            "operation": " compute the number of rows using the canonical key token for languages (e.g., T2.CountryCode and T2.Language)."
        },
        "140": {
            "condition": "When answering about \"name of the country that speaks the largest number of languages\"",
            "operation": " make sure the output order: T1.Name"
        },
        "141": {
            "condition": "When combining T1 (country) and T2 (countrylanguage) for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode and keep only matching pairs (inner match)"
        },
        "142": {
            "condition": "When the question asks for \"largest number of languages\"",
            "operation": " rank rows by COUNT(*) in descending direction and keep the first 1 row"
        },
        "143": {
            "condition": "When the question says \"by country\"",
            "operation": " organize results by T1.Name and compute requested aggregates per group"
        },
        "144": {
            "condition": "When answering about \"name of the country that speaks the largest number of languages\", When combining T1 (country) and T2 (countrylanguage) for shared entities, When the question asks for \"largest number of languages\", When the question says \"by country\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms"
        },
        "145": {
            "condition": "When answering about \"the nation that uses the greatest amount of languages\"",
            "operation": " make sure the output order: T1.Name"
        },
        "146": {
            "condition": "When the question mentions \"nation\"",
            "operation": " \"nation\" actually means \"country AS T1\" in schema"
        },
        "147": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode exactly as shown; keep only matching pairs (inner match)"
        },
        "148": {
            "condition": "When the question asks for \"count of languages\"",
            "operation": " compute the number of rows using COUNT(*) per country group"
        },
        "149": {
            "condition": "When the question mentions \"greatest amount\" or \"most\"",
            "operation": " rank rows by COUNT(*) in descending order and keep the first 1 row"
        },
        "150": {
            "condition": "When answering about \"the nation that uses the greatest amount of languages\", When the question mentions \"nation\", When combining T1 and T2 for shared entities, When the question asks for \"count of languages\", When the question mentions \"greatest amount\" or \"most\", When grouping by country",
            "operation": " organize results by T1.Name and compute requested aggregates per group"
        },
        "151": {
            "condition": "When answering about \"continent with the most diverse languages\"",
            "operation": " use T1.Continent for continent information and join with countrylanguage as T2 on T1.Code = T2.CountryCode."
        },
        "152": {
            "condition": "When counting languages per continent",
            "operation": " count all rows using COUNT(*) instead of counting specific language column."
        },
        "153": {
            "condition": "When ordering results to find the continent with most languages",
            "operation": " order by the count in descending order and keep only the top result with LIMIT 1."
        },
        "154": {
            "condition": "When combining country and countrylanguage tables",
            "operation": " link rows where T1.Code equals T2.CountryCode and keep only matching pairs (inner match)."
        },
        "155": {
            "condition": "When answering about \"continent with the most diverse languages\", When counting languages per continent, When ordering results to find the continent with most languages, When combining country and countrylanguage tables, When grouping results",
            "operation": " organize by T1.Continent to compute aggregates per continent."
        },
        "156": {
            "condition": "When answering about \"which continent has the most diverse languages\"",
            "operation": " make sure the output order: only return the continent name without the count value."
        },
        "157": {
            "condition": "When the question asks for the continent with the most languages",
            "operation": " rank continents by language count in descending order and keep the first 1 row."
        },
        "158": {
            "condition": "When counting languages per continent",
            "operation": " compute the number of rows using the canonical key for languages (T2.CountryCode + T2.Language) or count distinct language names if specified in schema."
        },
        "159": {
            "condition": "When combining country and countrylanguage tables",
            "operation": " link rows where T1.Code = T2.CountryCode and keep only matching pairs (inner match)."
        },
        "160": {
            "condition": "When answering about \"which continent has the most diverse languages\", When the question asks for the continent with the most languages, When counting languages per continent, When combining country and countrylanguage tables, When grouping by continent",
            "operation": " organize results by T1.Continent and compute language count per group."
        },
        "161": {
            "condition": "When answering about \"which continent speaks the most languages\"",
            "operation": " make sure the output order: T1.Continent."
        },
        "162": {
            "condition": "When combining T1 (country) and T2 (countrylanguage) for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode exactly as shown; keep only matching pairs (inner match)."
        },
        "163": {
            "condition": "When the question asks for \"count of languages per continent\"",
            "operation": " compute the number of rows using COUNT(*) and organize results by T1.Continent."
        },
        "164": {
            "condition": "When the question mentions \"most languages\"",
            "operation": " rank rows by COUNT(*) in descending direction and keep the first 1 row."
        },
        "165": {
            "condition": "When answering about \"which continent speaks the most languages\", When combining T1 (country) and T2 (countrylanguage) for shared entities, When the question asks for \"count of languages per continent\", When the question mentions \"most languages\", When producing output",
            "operation": " do not include explicit column aliases like language_count; only include T1.Continent."
        },
        "166": {
            "condition": "When the question asks for countries speaking both English and Dutch",
            "operation": " use set intersection logic with separate subqueries instead of double joins to find countries that have both languages."
        },
        "167": {
            "condition": "When referencing tables",
            "operation": " use \"country\" as T1 and \"countrylanguage\" as T2 instead of \"countries\" and \"languages\"."
        },
        "168": {
            "condition": "When joining tables",
            "operation": " link rows where T1.\"Code\" equals T2.\"CountryCode\" instead of country_id to country_id."
        },
        "169": {
            "condition": "When filtering for languages",
            "operation": " create separate subqueries for \"English\" and \"Dutch\" language conditions instead of combining both in WHERE clause."
        },
        "170": {
            "condition": "When selecting country identifiers",
            "operation": " use T1.\"Name\" from the subqueries instead of counting all matches."
        },
        "171": {
            "condition": "When the question asks for countries speaking both English and Dutch, When referencing tables, When joining tables, When filtering for languages, When selecting country identifiers, When counting countries that speak both languages",
            "operation": " use INTERSECT operation between the two language-specific subqueries to correctly identify countries with both languages specified."
        },
        "172": {
            "condition": "When the question asks for nations that use both English and Dutch",
            "operation": " use an intersection approach with separate queries for each language instead of a single condition with conflicting language requirements."
        },
        "173": {
            "condition": "When combining country and countrylanguage tables",
            "operation": " link rows where T1.Code = T2.CountryCode to connect countries with their languages."
        },
        "174": {
            "condition": "When filtering for English language",
            "operation": " use the exact literal 'English' in the condition for one branch of the intersection."
        },
        "175": {
            "condition": "When filtering for Dutch language",
            "operation": " use the exact literal 'Dutch' in the condition for the other branch of the intersection."
        },
        "176": {
            "condition": "When selecting country names",
            "operation": " use T1.Name from the country table as the identifier for nations."
        },
        "177": {
            "condition": "When the question asks for nations that use both English and Dutch, When combining country and countrylanguage tables, When filtering for English language, When filtering for Dutch language, When selecting country names, When counting distinct nations",
            "operation": " count the number of unique T1.Name values that appear in both language groups after the intersection operation."
        },
        "178": {
            "condition": "When the question asks for nations that speak both English and French",
            "operation": " use INTERSECT to find countries that appear in both the English-speaking and French-speaking sets instead of using OR conditions."
        },
        "179": {
            "condition": "When joining tables for language information",
            "operation": " use the exact join condition T1.Code = T2.CountryCode as specified in the schema."
        },
        "180": {
            "condition": "When filtering for English speakers",
            "operation": " use the exact literal filter T2.Language = \"English\" with proper double quotes and capitalization."
        },
        "181": {
            "condition": "When filtering for French speakers",
            "operation": " use the exact literal filter T2.Language = \"French\" with proper double quotes and capitalization."
        },
        "182": {
            "condition": "When using table aliases",
            "operation": " use T1 for the nations table and T2 for the languages table consistently throughout the query."
        },
        "183": {
            "condition": "When the question asks for nations that speak both English and French, When joining tables for language information, When filtering for English speakers, When filtering for French speakers, When using table aliases, When structuring the query",
            "operation": " create two separate SELECT statements that find English-speaking countries and French-speaking countries respectively, then intersect them."
        },
        "184": {
            "condition": "When answering about \"nations that speak both English and French\"",
            "operation": " use the INTERSECT operation to find countries that speak both languages instead of using OR which finds countries that speak either language."
        },
        "185": {
            "condition": "When combining country and countrylanguage tables",
            "operation": " join T1 (country) with T2 (countrylanguage) on T1.Code = T2.CountryCode."
        },
        "186": {
            "condition": "When filtering for English language",
            "operation": " use T2.Language = \"English\" exactly as specified."
        },
        "187": {
            "condition": "When filtering for French language",
            "operation": " use T2.Language = \"French\" exactly as specified."
        },
        "188": {
            "condition": "When selecting output",
            "operation": " use T1.Name from the country table instead of n.name from nations."
        },
        "189": {
            "condition": "When answering about \"nations that speak both English and French\", When combining country and countrylanguage tables, When filtering for English language, When filtering for French language, When selecting output, When finding countries that speak both languages",
            "operation": " use intersection logic with two separate queries - one for English speakers and one for French speakers - then intersect the results."
        },
        "190": {
            "condition": "When answering about nations where both English and French are official languages",
            "operation": " use an INTERSECT operation with two separate queries instead of a single WHERE clause with conflicting conditions."
        },
        "191": {
            "condition": "When combining country and countrylanguage tables",
            "operation": " join T1 (country) with T2 (countrylanguage) where T1.Code = T2.CountryCode."
        },
        "192": {
            "condition": "When filtering for English as an official language",
            "operation": " check T2.Language = \"English\" and T2.IsOfficial = \"T\"."
        },
        "193": {
            "condition": "When filtering for French as an official language",
            "operation": " check T2.Language = \"French\" and T2.IsOfficial = \"T\"."
        },
        "194": {
            "condition": "When answering about nations where both English and French are official languages, When combining country and countrylanguage tables, When filtering for English as an official language, When filtering for French as an official language, When selecting the output",
            "operation": " return T1.Name from the joined tables."
        },
        "195": {
            "condition": "When the question asks for countries with both English AND French as official languages",
            "operation": " use an INTERSECT operation to combine results from two separate queries instead of trying to filter for both languages in a single condition."
        },
        "196": {
            "condition": "When filtering for English as an official language",
            "operation": " use the exact conditions T2.Language = \"English\" AND T2.IsOfficial = \"T\"."
        },
        "197": {
            "condition": "When filtering for French as an official language",
            "operation": " use the exact conditions T2.Language = \"French\" AND T2.IsOfficial = \"T\"."
        },
        "198": {
            "condition": "When combining tables country and countrylanguage",
            "operation": " use table aliases T1 for country and T2 for countrylanguage, and link them using T1.code = T2.countrycode."
        },
        "199": {
            "condition": "When the question asks for countries with both English AND French as official languages, When filtering for English as an official language, When filtering for French as an official language, When combining tables country and countrylanguage, When selecting country names",
            "operation": " output T1.name from the country table."
        },
        "200": {
            "condition": "When counting distinct continents where Chinese is spoken",
            "operation": " use COUNT(DISTINCT T1.Continent) instead of COUNT(*) to count unique continent values."
        },
        "201": {
            "condition": "When accessing continent data from countrylanguage records",
            "operation": " join country table as T1 with countrylanguage table as T2 using T1.Code = T2.CountryCode to link language records to their respective countries."
        },
        "202": {
            "condition": "When filtering for Chinese language",
            "operation": " use WHERE T2.Language = 'Chinese' with exact literal 'Chinese' to identify Chinese language records."
        },
        "203": {
            "condition": "When counting distinct continents where Chinese is spoken, When accessing continent data from countrylanguage records, When filtering for Chinese language, When combining country and countrylanguage tables",
            "operation": " perform an inner join where T1.Code equals T2.CountryCode to ensure only matching country-language pairs are considered."
        },
        "204": {
            "condition": "When counting distinct continents",
            "operation": " use COUNT(DISTINCT T1.Continent) instead of COUNT(*) to count unique continents rather than all rows."
        },
        "205": {
            "condition": "When combining country and countrylanguage tables",
            "operation": " link rows where T1.Code = T2.CountryCode and keep only matching pairs (inner match)."
        },
        "206": {
            "condition": "When filtering by Chinese language",
            "operation": " use T2.Language = \"Chinese\" with exact case and double quotes as shown in the schema."
        },
        "207": {
            "condition": "When referring to the country table",
            "operation": " use the exact table name \"country\" with alias T1 instead of \"countries\"."
        },
        "208": {
            "condition": "When counting distinct continents, When combining country and countrylanguage tables, When filtering by Chinese language, When referring to the country table, When answering about continents that speak Chinese",
            "operation": " make sure the output order is a single count of distinct continents."
        },
        "209": {
            "condition": "When answering about \"regions that use English or Dutch\"",
            "operation": " make sure the output order: T1.Region"
        },
        "210": {
            "condition": "When the question mentions \"regions\"",
            "operation": " \"regions\" actually means \"T1.Region in schema\""
        },
        "211": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "212": {
            "condition": "When filtering for languages",
            "operation": " use T2.Language = \"English\" OR T2.Language = \"Dutch\" with exact literals \"English\" and \"Dutch\" as shown in the amends."
        },
        "213": {
            "condition": "When answering about \"regions that use English or Dutch\", When the question mentions \"regions\", When combining T1 and T2 for shared entities, When filtering for languages, When selecting regions",
            "operation": " use DISTINCT T1.Region to ensure each region appears only once in the results."
        },
        "214": {
            "condition": "When answering about \"regions that speak Dutch or English\"",
            "operation": " make sure the output order: T1.Region."
        },
        "215": {
            "condition": "When the question asks for distinct regions",
            "operation": " compute unique values of T1.Region."
        },
        "216": {
            "condition": "When combining country as T1 and countrylanguage as T2",
            "operation": " link rows where T1.Code = T2.CountryCode and keep only matching pairs (inner match)."
        },
        "217": {
            "condition": "When answering about \"regions that speak Dutch or English\", When the question asks for distinct regions, When combining country as T1 and countrylanguage as T2, When filtering for languages",
            "operation": " use exact literals T2.Language = \"English\" OR T2.Language = \"Dutch\" with exact case and punctuation."
        },
        "218": {
            "condition": "When answering about countries where English or Dutch is the official language",
            "operation": " select \"t1\".\"name\" from the \"country\" table instead of \"country\" from \"languages\"."
        },
        "219": {
            "condition": "When combining country and language information",
            "operation": " use JOIN with \"countrylanguage\" table on \"t1\".\"code\" = \"t2\".\"countrycode\" to link countries with their languages."
        },
        "220": {
            "condition": "When filtering for official languages",
            "operation": " check for \"language\" = \"english\" and \"isofficial\" = \"t\" in separate UNION branches instead of trying to find both languages in one row."
        },
        "221": {
            "condition": "When the question asks for countries with either English or Dutch as official language",
            "operation": " use UNION to combine results for both language conditions instead of using AND between different language values."
        },
        "222": {
            "condition": "When answering about countries where English or Dutch is the official language, When combining country and language information, When filtering for official languages, When the question asks for countries with either English or Dutch as official language, When handling text literals",
            "operation": " use exact values \"english\" (lowercase) and \"t\" for the official status indicator as shown in the schema."
        },
        "223": {
            "condition": "When the question mentions \"English\" or \"Dutch\" as languages",
            "operation": " use exact string literals \"english\" and \"dutch\" in lowercase with double quotes."
        },
        "224": {
            "condition": "When checking if a language is official",
            "operation": " reference the column \"isofficial\" directly without table qualification."
        },
        "225": {
            "condition": "When joining tables",
            "operation": " use explicit AS keyword for table aliases as \"country AS t1\" instead of omitting it."
        },
        "226": {
            "condition": "When the question mentions \"English\" or \"Dutch\" as languages, When checking if a language is official, When joining tables, When referencing column names",
            "operation": " use consistent lowercase for columns like \"name\" and \"code\" instead of mixed case."
        },
        "227": {
            "condition": "When answering about countries with official languages",
            "operation": " select all columns from joined tables instead of selecting only country from a single table."
        },
        "228": {
            "condition": "When combining country and countrylanguage tables",
            "operation": " join them on T1.Code = T2.CountryCode instead of querying only one table."
        },
        "229": {
            "condition": "When filtering for English as an official language",
            "operation": " use conditions T2.Language=\"English\" AND T2.IsOfficial=\"T\" instead of contradictory single-row conditions."
        },
        "230": {
            "condition": "When filtering for Dutch as an official language",
            "operation": " use conditions T2.Language=\"Dutch\" AND T2.IsOfficial=\"T\" in a separate UNION branch."
        },
        "231": {
            "condition": "When handling multiple language conditions",
            "operation": " use UNION with separate branches for each language instead of attempting to find both languages in a single row."
        },
        "232": {
            "condition": "When answering about countries with official languages, When combining country and countrylanguage tables, When filtering for English as an official language, When filtering for Dutch as an official language, When handling multiple language conditions, When referring to tables",
            "operation": " use proper aliases T1 for country table and T2 for countrylanguage table."
        },
        "233": {
            "condition": "When answering about \"most popular language on the Asian continent\"",
            "operation": " make sure the output order: T2.Language, COUNT(*)."
        },
        "234": {
            "condition": "When the question mentions \"Asian continent\"",
            "operation": " \"Asia\" actually means T1.Continent = \"Asia\" in schema."
        },
        "235": {
            "condition": "When combining T1 (country) and T2 (countrylanguage) for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode; keep only matching pairs (inner match)."
        },
        "236": {
            "condition": "When the question asks for \"most popular language\"",
            "operation": " rank rows by COUNT(*) in descending direction and keep the first 1 row."
        },
        "237": {
            "condition": "When answering about \"most popular language on the Asian continent\", When the question mentions \"Asian continent\", When combining T1 (country) and T2 (countrylanguage) for shared entities, When the question asks for \"most popular language\", When the question asks for \"count of languages per language group\"",
            "operation": " compute the number of rows using T2.Language as the grouping key and count all matching rows per group."
        },
        "238": {
            "condition": "When answering about \"language used by Asian nations\"",
            "operation": " make sure the output order: T2.Language, COUNT(*) as count"
        },
        "239": {
            "condition": "When the question mentions \"Asian nations\"",
            "operation": " \"Asian nations\" actually means \"T1.Continent = 'Asia' in schema\""
        },
        "240": {
            "condition": "When combining T1 (country) and T2 (countrylanguage) for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "241": {
            "condition": "When the question asks for \"largest number\"",
            "operation": " rank rows by COUNT(*) in descending direction and keep the first 1 row"
        },
        "242": {
            "condition": "When the question says \"by language\"",
            "operation": " organize results by T2.Language and compute COUNT(*) per group"
        },
        "243": {
            "condition": "When counting entities",
            "operation": " compute the number of rows using the join relationship T1.Code = T2.CountryCode"
        },
        "244": {
            "condition": "When answering about \"language used by Asian nations\", When the question mentions \"Asian nations\", When combining T1 (country) and T2 (countrylanguage) for shared entities, When the question asks for \"largest number\", When the question says \"by language\", When counting entities, When handling text literals",
            "operation": " do not change case, spacing, or punctuation - use exact value 'Asia'"
        },
        "245": {
            "condition": "When answering about \"the language that is used by the largest number of Asian nations\"",
            "operation": " make sure the output order: T2.Language only."
        },
        "246": {
            "condition": "When the question mentions \"Asian nations\"",
            "operation": " \"Asia\" actually means \"Asia\" in schema and must be written with double quotes as \"Asia\"."
        },
        "247": {
            "condition": "When the question asks for \"largest number\"",
            "operation": " rank rows by COUNT(*) in descending order and keep the first 1 row."
        },
        "248": {
            "condition": "When counting entities",
            "operation": " use COUNT(*) without any space between COUNT and (*)."
        },
        "249": {
            "condition": "When combining country AS T1 and countrylanguage AS T2",
            "operation": " link rows where T1.Code = T2.CountryCode and keep only matching pairs (inner match)."
        },
        "250": {
            "condition": "When answering about \"the language that is used by the largest number of Asian nations\", When the question mentions \"Asian nations\", When the question asks for \"largest number\", When counting entities, When combining country AS T1 and countrylanguage AS T2, When the question says \"by Asian nations\"",
            "operation": " filter rows where T1.Continent = \"Asia\"."
        },
        "251": {
            "condition": "When answering about languages spoken by only one country in republic governments",
            "operation": " make sure the output order: T2.Language"
        },
        "252": {
            "condition": "When combining country table (T1) and language table (T2)",
            "operation": " link rows where T1.Code = T2.CountryCode and keep only matching pairs (inner match)"
        },
        "253": {
            "condition": "When filtering for republic governments",
            "operation": " use T1.GovernmentForm = 'Republic' exactly as specified"
        },
        "254": {
            "condition": "When grouping by language",
            "operation": " organize results by T2.Language and compute aggregates per language group"
        },
        "255": {
            "condition": "When answering about languages spoken by only one country in republic governments, When combining country table (T1) and language table (T2), When filtering for republic governments, When grouping by language, When counting countries per language",
            "operation": " compute the number of rows using the canonical key and ensure the count equals exactly 1"
        },
        "256": {
            "condition": "When referencing the language column",
            "operation": " use \"T2.Language\" instead of \"language\" for the output column."
        },
        "257": {
            "condition": "When joining country and countrylanguage tables",
            "operation": " link rows where \"T1.Code = T2.CountryCode\" exactly as shown."
        },
        "258": {
            "condition": "When filtering for republic government form",
            "operation": " use \"T1.GovernmentForm = \\\"Republic\\\"\" with exact case and quotes."
        },
        "259": {
            "condition": "When counting countries per language",
            "operation": " use \"COUNT(*) = 1\" to find languages spoken in exactly one republic country."
        },
        "260": {
            "condition": "When referencing the language column, When joining country and countrylanguage tables, When filtering for republic government form, When counting countries per language, When selecting languages",
            "operation": " do not use DISTINCT since GROUP BY already ensures uniqueness per language group."
        },
        "261": {
            "condition": "When answering about \"city with the largest population that uses English\"",
            "operation": " make sure the output order: T1.Name, T1.Population."
        },
        "262": {
            "condition": "When the question mentions \"city\"",
            "operation": " \"city\" actually means \"T1.Name in schema\"."
        },
        "263": {
            "condition": "When the question mentions \"largest population\"",
            "operation": " rank rows by T1.Population in descending direction and keep the first 1 row."
        },
        "264": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.CountryCode = T2.CountryCode; keep only matching pairs (inner match)."
        },
        "265": {
            "condition": "When answering about \"city with the largest population that uses English\", When the question mentions \"city\", When the question mentions \"largest population\", When combining T1 and T2 for shared entities, When filtering for English language",
            "operation": " use T2.Language = \"English\" exactly as specified with double quotes."
        },
        "266": {
            "condition": "When the question asks about \"city\" and \"population\"",
            "operation": " select \"T1\".\"Name\" and \"T1\".\"Population\" as output columns."
        },
        "267": {
            "condition": "When combining city and countrylanguage tables",
            "operation": " join \"city\" AS \"T1\" with \"countrylanguage\" AS \"T2\" on \"T1\".\"CountryCode\" = \"T2\".\"CountryCode\" using inner match."
        },
        "268": {
            "condition": "When filtering for English language",
            "operation": " apply condition \"T2\".\"Language\" = \"English\"."
        },
        "269": {
            "condition": "When the question asks about \"city\" and \"population\", When combining city and countrylanguage tables, When filtering for English language, When the question asks for the \"most populace city\"",
            "operation": " order results by \"T1\".\"Population\" in descending direction and keep only the first row."
        },
        "270": {
            "condition": "When answering about \"asian country with the largest area\"",
            "operation": " make sure the output order: Name, Population, LifeExpectancy"
        },
        "271": {
            "condition": "When the question mentions \"name\"",
            "operation": " \"name\" actually means \"Name in schema\""
        },
        "272": {
            "condition": "When the question mentions \"population\"",
            "operation": " \"population\" actually means \"Population in schema\""
        },
        "273": {
            "condition": "When the question mentions \"expected life length\"",
            "operation": " \"expected life length\" actually means \"LifeExpectancy in schema\""
        },
        "274": {
            "condition": "When the question mentions \"largest area\"",
            "operation": " \"area\" actually means \"SurfaceArea in schema\""
        },
        "275": {
            "condition": "When the question mentions \"asian country\"",
            "operation": " filter rows where Continent = \"Asia\" exactly"
        },
        "276": {
            "condition": "When answering about \"asian country with the largest area\", When the question mentions \"name\", When the question mentions \"population\", When the question mentions \"expected life length\", When the question mentions \"largest area\", When the question mentions \"asian country\", When the question asks for \"largest area\"",
            "operation": " rank rows by SurfaceArea in descending order and keep the first 1 row"
        },
        "277": {
            "condition": "When answering about \"largest Asian country by land\"",
            "operation": " make sure the output order: Name, Population, LifeExpectancy."
        },
        "278": {
            "condition": "When the question mentions \"largest by land\"",
            "operation": " rank rows by SurfaceArea in descending order and keep the first 1 row."
        },
        "279": {
            "condition": "When filtering for Asian countries",
            "operation": " use the exact literal \"Asia\" for the continent filter."
        },
        "280": {
            "condition": "When answering about \"largest Asian country by land\", When the question mentions \"largest by land\", When filtering for Asian countries, When referencing table and columns",
            "operation": " use table \"country\" with columns \"Name\", \"Population\", and \"LifeExpectancy\" exactly as shown in the schema."
        },
        "281": {
            "condition": "When answering about average life expectancy",
            "operation": " use avg(LifeExpectancy) to reference the correct column name."
        },
        "282": {
            "condition": "When referencing the countries table",
            "operation": " use table country instead of countries with the proper table name."
        },
        "283": {
            "condition": "When filtering for countries where English is not the official language",
            "operation": " implement a subquery that checks Name NOT IN a correlated subquery instead of using a direct column comparison."
        },
        "284": {
            "condition": "When combining country and language data",
            "operation": " join country AS T1 with countrylanguage AS T2 on T1.Code = T2.CountryCode instead of assuming language data exists in the main table."
        },
        "285": {
            "condition": "When answering about average life expectancy, When referencing the countries table, When filtering for countries where English is not the official language, When combining country and language data, When identifying countries where English is an official language",
            "operation": " add the condition T2.Language = \"English\" AND T2.IsOfficial = \"T\" to properly filter for official English language status."
        },
        "286": {
            "condition": "When answering about mean life expectancy of countries where English is not the official language",
            "operation": " use lowercase avg(LifeExpectancy) instead of uppercase AVG(LifeExpectancy)."
        },
        "287": {
            "condition": "When the question mentions \"official language\"",
            "operation": " this requires checking both T2.Language = \"English\" AND T2.IsOfficial = \"T\" in the countrylanguage table."
        },
        "288": {
            "condition": "When combining country (T1) and countrylanguage (T2) tables",
            "operation": " link rows where T1.Code = T2.CountryCode and keep only matching pairs (inner match)."
        },
        "289": {
            "condition": "When answering about mean life expectancy of countries where English is not the official language, When the question mentions \"official language\", When combining country (T1) and countrylanguage (T2) tables, When filtering for countries without English as official language",
            "operation": " use a subquery condition WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"English\" AND T2.IsOfficial = \"T\") instead of filtering on a non-existent Language column in the Country table."
        },
        "290": {
            "condition": "When answering about \"total number of people living in nations that do not use English\"",
            "operation": " make sure the output order: sum(Population)"
        },
        "291": {
            "condition": "When the question mentions \"nations\"",
            "operation": " \"nations\" actually means \"country table\" in schema"
        },
        "292": {
            "condition": "When the question mentions \"do not use English\"",
            "operation": " this means countries where \"English\" is not listed as a language in the countrylanguage table"
        },
        "293": {
            "condition": "When combining country (T1) and countrylanguage (T2) for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "294": {
            "condition": "When filtering for countries without English",
            "operation": " use the condition T1.Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code = T2.CountryCode WHERE T2.Language = \"English\") instead of direct column filtering"
        },
        "295": {
            "condition": "When answering about \"total number of people living in nations that do not use English\", When the question mentions \"nations\", When the question mentions \"do not use English\", When combining country (T1) and countrylanguage (T2) for shared entities, When filtering for countries without English, When computing total population",
            "operation": " use sum(Population) with exact case and spelling as shown in the amends"
        },
        "296": {
            "condition": "When calculating population counts",
            "operation": " use sum(\"Population\") instead of counting rows to aggregate population data."
        },
        "297": {
            "condition": "When answering about countries that do not speak English",
            "operation": " use a correlated subquery with WHERE \"Name\" NOT IN instead of direct join conditions with != 'English'."
        },
        "298": {
            "condition": "When combining country and countrylanguage tables",
            "operation": " link rows where T1.\"Code\" = T2.\"CountryCode\" exactly as shown and keep only matching pairs (inner match)."
        },
        "299": {
            "condition": "When filtering for English language",
            "operation": " use the exact literal \"English\" with correct case and quotes in the condition T2.\"Language\" = \"English\"."
        },
        "300": {
            "condition": "When calculating population counts, When answering about countries that do not speak English, When combining country and countrylanguage tables, When filtering for English language, When the question asks for population of countries",
            "operation": " use the \"Population\" column from the country table as the aggregation source."
        },
        "301": {
            "condition": "When answering about \"official language spoken in a country\"",
            "operation": " make sure the output order: T2.Language."
        },
        "302": {
            "condition": "When the question mentions \"head of state is Beatrix\"",
            "operation": " \"head of state\" actually means \"T1.HeadOfState = 'Beatrix'\" in schema."
        },
        "303": {
            "condition": "When combining T1 (country) and T2 (countrylanguage) for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode and keep only matching pairs (inner match)."
        },
        "304": {
            "condition": "When answering about \"official language spoken in a country\", When the question mentions \"head of state is Beatrix\", When combining T1 (country) and T2 (countrylanguage) for shared entities, When the question specifies \"official language\"",
            "operation": " add the filter T2.IsOfficial = \"T\" to ensure only official languages are returned."
        },
        "305": {
            "condition": "When the question asks about \"official language\"",
            "operation": " select \"T2.Language\" from the countrylanguage table instead of \"language\" from the countries table."
        },
        "306": {
            "condition": "When combining country and countrylanguage tables",
            "operation": " join \"country AS T1\" with \"countrylanguage AS T2\" on \"T1.Code = T2.CountryCode\" to link countries with their languages."
        },
        "307": {
            "condition": "When filtering for official languages",
            "operation": " add the condition \"T2.IsOfficial = \\\"T\\\"\" to only include official languages."
        },
        "308": {
            "condition": "When referencing the head of state",
            "operation": " use the exact column name \"HeadOfState\" instead of \"head_of_state\"."
        },
        "309": {
            "condition": "When the question asks about \"official language\", When combining country and countrylanguage tables, When filtering for official languages, When referencing the head of state, When filtering for head of state named Beatrix",
            "operation": " use the exact literal value \"Beatrix\" with the correct case."
        },
        "310": {
            "condition": "When joining tables for countries and languages",
            "operation": " link rows where T1.Code = T2.CountryCode and keep only matching pairs (inner match)."
        },
        "311": {
            "condition": "When filtering for countries founded before 1930",
            "operation": " use T1.IndepYear < 1930 instead of founded_year."
        },
        "312": {
            "condition": "When counting official languages",
            "operation": " only include languages where T2.IsOfficial = \"T\"."
        },
        "313": {
            "condition": "When counting unique languages",
            "operation": " count distinct values of T2.Language."
        },
        "314": {
            "condition": "When joining tables for countries and languages, When filtering for countries founded before 1930, When counting official languages, When counting unique languages, When answering about \"total number of unique official languages\"",
            "operation": " make sure the output is a single count value."
        },
        "315": {
            "condition": "When answering about \"countries founded before 1930\"",
            "operation": " use the condition \"T1.IndepYear < 1930\" instead of \"year_founded < 1930\"."
        },
        "316": {
            "condition": "When counting distinct official languages",
            "operation": " join \"country\" table as T1 and \"countrylanguage\" table as T2 using \"T1.Code = T2.CountryCode\" with inner match."
        },
        "317": {
            "condition": "When filtering for official languages",
            "operation": " add the condition \"T2.IsOfficial = \\\"T\\\"\" to only count languages marked as official."
        },
        "318": {
            "condition": "When answering about \"countries founded before 1930\", When counting distinct official languages, When filtering for official languages, When counting distinct languages",
            "operation": " use \"count(DISTINCT T2.Language)\" from the joined table structure."
        },
        "319": {
            "condition": "When selecting country names",
            "operation": " use \"Name\" instead of \"name\" to match the correct case."
        },
        "320": {
            "condition": "When referencing surface area",
            "operation": " use \"SurfaceArea\" instead of \"surface_area\" for column references."
        },
        "321": {
            "condition": "When filtering by continent",
            "operation": " use \"Continent\" instead of \"continent\" for column references."
        },
        "322": {
            "condition": "When using string literals for continents",
            "operation": " use double quotes \"Europe\" instead of single quotes 'Europe'."
        },
        "323": {
            "condition": "When selecting country names, When referencing surface area, When filtering by continent, When using string literals for continents, When comparing surface areas to European countries",
            "operation": " use MIN(SurfaceArea) instead of MAX(SurfaceArea) to find countries with surface area greater than the minimum surface area of European countries."
        },
        "324": {
            "condition": "When the question asks about countries",
            "operation": " use the table name \"country\" instead of \"countries\" and the column name \"Name\" for country names."
        },
        "325": {
            "condition": "When the question mentions \"area\"",
            "operation": " use the column name \"SurfaceArea\" for surface area measurements."
        },
        "326": {
            "condition": "When the question refers to \"Europe\"",
            "operation": " use the literal value \"Europe\" with double quotes for continent designation."
        },
        "327": {
            "condition": "When finding countries with greater area than any country in Europe",
            "operation": " use the MIN aggregate function on \"SurfaceArea\" to find the smallest European country's surface area rather than the largest."
        },
        "328": {
            "condition": "When the question asks about countries, When the question mentions \"area\", When the question refers to \"Europe\", When finding countries with greater area than any country in Europe, When comparing surface areas",
            "operation": " ensure the comparison is against the minimum surface area of European countries rather than the maximum."
        },
        "329": {
            "condition": "When the question asks for countries with population less than any country in Asia",
            "operation": " compare against the maximum population in Asia rather than the minimum population in Asia."
        },
        "330": {
            "condition": "When referencing the continent column",
            "operation": " use exact literal values 'Africa' and 'Asia' with the exact case and spelling as shown in the schema."
        },
        "331": {
            "condition": "When selecting country names",
            "operation": " use the exact column name \"Name\" with the exact capitalization shown in the schema."
        },
        "332": {
            "condition": "When the question asks for countries with population less than any country in Asia, When referencing the continent column, When selecting country names, When comparing populations",
            "operation": " use the population column from the country table to perform the comparison against the maximum Asian population."
        },
        "333": {
            "condition": "When the question asks for countries with population larger than any country in Africa",
            "operation": " use the minimum population of African countries as the comparison threshold instead of the maximum population."
        },
        "334": {
            "condition": "When referring to the country name column",
            "operation": " use the exact column name \"Name\" with double quotes and proper capitalization instead of lowercase \"name\"."
        },
        "335": {
            "condition": "When referring to the continent column",
            "operation": " use the exact column name \"Continent\" with double quotes and proper capitalization instead of lowercase \"continent\"."
        },
        "336": {
            "condition": "When using continent string literals",
            "operation": " use double quotes around \"Asia\" and \"Africa\" instead of single quotes to match the schema format."
        },
        "337": {
            "condition": "When the question asks for countries with population larger than any country in Africa, When referring to the country name column, When referring to the continent column, When using continent string literals, When comparing Asian countries to African population threshold",
            "operation": " select countries where continent equals \"Asia\" and population is greater than the minimum population of countries where continent equals \"Africa\"."
        },
        "338": {
            "condition": "When answering about countries that do not speak English",
            "operation": " query the \"countrylanguage\" table instead of the \"countries\" table."
        },
        "339": {
            "condition": "When excluding English-speaking countries",
            "operation": " use EXCEPT to exclude countries where \"LANGUAGE\" equals \"English\" instead of a simple inequality filter."
        },
        "340": {
            "condition": "When referencing country codes",
            "operation": " use \"CountryCode\" instead of \"country_code\" as the column name."
        },
        "341": {
            "condition": "When referencing languages",
            "operation": " use \"LANGUAGE\" instead of \"language\" as the column name."
        },
        "342": {
            "condition": "When answering about countries that do not speak English, When excluding English-speaking countries, When referencing country codes, When referencing languages, When using the literal value for English",
            "operation": " use double quotes around \"English\" instead of single quotes."
        },
        "343": {
            "condition": "When answering about countries that do not speak English",
            "operation": " use EXCEPT to exclude countries where English is spoken instead of selecting countries where English is spoken."
        },
        "344": {
            "condition": "When referring to the country code column",
            "operation": " use \"CountryCode\" with proper case instead of lowercase \"countrycode\"."
        },
        "345": {
            "condition": "When handling the English language literal",
            "operation": " use double quotes for \"English\" instead of single quotes."
        },
        "346": {
            "condition": "When answering about countries that do not speak English, When referring to the country code column, When handling the English language literal, When excluding English-speaking countries",
            "operation": " remove the WHERE clause filtering for English language as the logic now excludes rather than includes English-speaking countries."
        },
        "347": {
            "condition": "When answering about countries that do not speak English",
            "operation": " select \"CountryCode\" from \"countrylanguage\" table."
        },
        "348": {
            "condition": "When filtering for countries that don't speak English",
            "operation": " use EXCEPT operation with a subquery that filters for \"Language\" = \"English\" from the same \"countrylanguage\" table."
        },
        "349": {
            "condition": "When comparing country codes",
            "operation": " ensure both parts of the EXCEPT operation use the same \"CountryCode\" column from the \"countrylanguage\" table rather than mixing different tables."
        },
        "350": {
            "condition": "When answering about countries that do not speak English, When filtering for countries that don't speak English, When comparing country codes, When handling text literals",
            "operation": " use exact literal \"English\" with proper case and double quotes for the language comparison."
        },
        "351": {
            "condition": "When answering about country codes where languages other than English are used",
            "operation": " select distinct \"CountryCode\" from the countrylanguage table."
        },
        "352": {
            "condition": "When filtering for languages other than English",
            "operation": " use the condition LANGUAGE != \"English\" with exact case and double quotes."
        },
        "353": {
            "condition": "When answering about country codes where languages other than English are used, When filtering for languages other than English, When the question asks for country codes",
            "operation": " use the exact identifier \"CountryCode\" from the countrylanguage table, not country_code from countries."
        },
        "354": {
            "condition": "When selecting country codes from the countrylanguage table",
            "operation": " use DISTINCT \"CountryCode\" to get unique values."
        },
        "355": {
            "condition": "When filtering for languages that are not English",
            "operation": " use LANGUAGE != \"English\" with double quotes around the literal."
        },
        "356": {
            "condition": "When selecting country codes from the countrylanguage table, When filtering for languages that are not English, When the question asks for countries where people speak languages that are not English",
            "operation": " query from the countrylanguage table instead of the countries table."
        },
        "357": {
            "condition": "When answering about country codes",
            "operation": " select \"Code\" from the \"country\" table instead of \"CountryCode\" from \"countrylanguage\"."
        },
        "358": {
            "condition": "When excluding countries that speak English",
            "operation": " use EXCEPT to remove countries where English is spoken rather than filtering with Language != 'English'."
        },
        "359": {
            "condition": "When filtering for non-republic government forms",
            "operation": " apply GovernmentForm != 'Republic' directly in the first SELECT clause."
        },
        "360": {
            "condition": "When combining country and countrylanguage data",
            "operation": " use proper table separation with EXCEPT instead of incorrect join logic between tables."
        },
        "361": {
            "condition": "When answering about country codes, When excluding countries that speak English, When filtering for non-republic government forms, When combining country and countrylanguage data, When handling text literals",
            "operation": " preserve exact case and spelling for 'English' and 'Republic'."
        },
        "362": {
            "condition": "When answering about country codes",
            "operation": " make sure the output order: \"Code\" from table \"country\"."
        },
        "363": {
            "condition": "When the question mentions \"countries\"",
            "operation": " use table \"country\" instead of \"countries\"."
        },
        "364": {
            "condition": "When the question mentions \"speak English\"",
            "operation": " this means countries that appear in table \"countrylanguage\" where \"Language\" = 'English'."
        },
        "365": {
            "condition": "When excluding English-speaking countries",
            "operation": " use EXCEPT operation to remove countries where \"CountryCode\" in \"countrylanguage\" matches \"Code\" in \"country\" and \"Language\" = 'English'."
        },
        "366": {
            "condition": "When the question mentions \"Republics for governments\"",
            "operation": " this means \"GovernmentForm\" = 'Republic' in table \"country\"."
        },
        "367": {
            "condition": "When answering about country codes, When the question mentions \"countries\", When the question mentions \"speak English\", When excluding English-speaking countries, When the question mentions \"Republics for governments\", When filtering by government form",
            "operation": " include only rows where \"GovernmentForm\" != 'Republic'."
        },
        "368": {
            "condition": "When answering about cities in European countries where English is not the official language",
            "operation": " make sure the output order includes T2.Name as the city name."
        },
        "369": {
            "condition": "When combining country table as T1 and city table as T2",
            "operation": " link rows where T2.CountryCode = T1.Code and keep only matching pairs (inner match)."
        },
        "370": {
            "condition": "When filtering for European countries",
            "operation": " use T1.Continent = 'Europe' exactly as specified."
        },
        "371": {
            "condition": "When checking for English not being an official language",
            "operation": " use T1.Name NOT IN with a correlated subquery through countrylanguage table instead of simple official_language comparison."
        },
        "372": {
            "condition": "When answering about cities in European countries where English is not the official language, When combining country table as T1 and city table as T2, When filtering for European countries, When checking for English not being an official language, When selecting city names",
            "operation": " use DISTINCT on T2.Name to remove duplicate city entries."
        },
        "373": {
            "condition": "When answering about city names in Europe where English is not the official language",
            "operation": " make sure the output order: T2.Name."
        },
        "374": {
            "condition": "When the question mentions \"cities\"",
            "operation": " \"cities\" actually means \"city AS T2\" in schema."
        },
        "375": {
            "condition": "When the question mentions \"Europe\"",
            "operation": " \"Europe\" actually means \"T1.Continent = 'Europe'\" in schema."
        },
        "376": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T2.CountryCode = T1.Code exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "377": {
            "condition": "When filtering for countries where English is not the official language",
            "operation": " use a subquery condition T1.Name NOT IN (select T3.Name from country AS T3 join countrylanguage AS T4 on T3.Code = T4.CountryCode where T4.IsOfficial = 'T' AND T4.Language = 'English')."
        },
        "378": {
            "condition": "When answering about city names in Europe where English is not the official language, When the question mentions \"cities\", When the question mentions \"Europe\", When combining T1 and T2 for shared entities, When filtering for countries where English is not the official language, When selecting city names",
            "operation": " use DISTINCT T2.Name to ensure unique city names are returned."
        },
        "379": {
            "condition": "When answering about \"unique cities in Asian countries where Chinese is the official language\"",
            "operation": " make sure the output order: t3.name."
        },
        "380": {
            "condition": "When the question mentions \"cities\"",
            "operation": " \"cities\" actually means \"t3.name in city table\"."
        },
        "381": {
            "condition": "When combining tables for shared entities",
            "operation": " link rows where t1.code = t2.countrycode and t1.code = t3.countrycode; keep only matching pairs (inner match)."
        },
        "382": {
            "condition": "When filtering for Asian countries",
            "operation": " use t1.continent = \"asia\" exactly as specified."
        },
        "383": {
            "condition": "When filtering for official Chinese language",
            "operation": " use t2.isofficial = 't' and t2.language = 'chinese' exactly as specified."
        },
        "384": {
            "condition": "When answering about \"unique cities in Asian countries where Chinese is the official language\", When the question mentions \"cities\", When combining tables for shared entities, When filtering for Asian countries, When filtering for official Chinese language, When selecting unique cities",
            "operation": " return distinct values of t3.name."
        },
        "385": {
            "condition": "When the question asks for cities in Asian countries where Chinese is the official language",
            "operation": " use \"asia\" (lowercase) as the continent filter value instead of 'Asia' (title case)."
        },
        "386": {
            "condition": "When filtering by continent in the country table",
            "operation": " use the exact identifier \"continent\" (lowercase) instead of \"Continent\" (title case)."
        },
        "387": {
            "condition": "When combining country, countrylanguage, and city tables",
            "operation": " link rows where country.Code equals countrylanguage.CountryCode and country.Code equals city.CountryCode, keeping only matching pairs (inner match)."
        },
        "388": {
            "condition": "When filtering for official languages",
            "operation": " use the exact literal 'T' for the IsOfficial column and 'Chinese' for the Language column."
        },
        "389": {
            "condition": "When the question asks for cities in Asian countries where Chinese is the official language, When filtering by continent in the country table, When combining country, countrylanguage, and city tables, When filtering for official languages, When selecting unique city names",
            "operation": " use DISTINCT on the city.Name column to return only distinct city names."
        },
        "390": {
            "condition": "When filtering by continent in the country table",
            "operation": " use the exact literal value \"asia\" (lowercase) instead of 'Asia' to match case-sensitive data."
        },
        "391": {
            "condition": "When answering about unique cities in Asian countries where Chinese is the official language",
            "operation": " make sure the output order includes only distinct city names from the city table."
        },
        "392": {
            "condition": "When combining country, countrylanguage, and city tables",
            "operation": " link rows where country.Code equals countrylanguage.CountryCode and country.Code equals city.CountryCode, keeping only matching pairs (inner match)."
        },
        "393": {
            "condition": "When filtering for official languages",
            "operation": " use the exact literal value 'T' for the IsOfficial column in countrylanguage table."
        },
        "394": {
            "condition": "When filtering by continent in the country table, When answering about unique cities in Asian countries where Chinese is the official language, When combining country, countrylanguage, and city tables, When filtering for official languages, When filtering for Chinese language",
            "operation": " use the exact literal value 'Chinese' for the Language column in countrylanguage table."
        },
        "395": {
            "condition": "When answering about cities in Asia with Chinese as official language",
            "operation": " join three tables using country as T1, countrylanguage as T2, and city as T3."
        },
        "396": {
            "condition": "When combining T1 and T2",
            "operation": " link rows where T1.Code = T2.CountryCode and T2.IsOfficial = 'T' to identify official languages."
        },
        "397": {
            "condition": "When combining T1 and T3",
            "operation": " link rows where T1.Code = T3.CountryCode to connect cities to countries."
        },
        "398": {
            "condition": "When filtering for Asian countries",
            "operation": " use T1.Continent = 'Asia' to identify Asian countries."
        },
        "399": {
            "condition": "When filtering for Chinese language",
            "operation": " use T2.Language = 'Chinese' to specifically identify Chinese language."
        },
        "400": {
            "condition": "When answering about cities in Asia with Chinese as official language, When combining T1 and T2, When combining T1 and T3, When filtering for Asian countries, When filtering for Chinese language, When returning city names",
            "operation": " select DISTINCT T3.Name to return unique city names instead of city_name."
        },
        "401": {
            "condition": "When selecting country information",
            "operation": " use the exact column names \"Name\", \"SurfaceArea\", and \"IndepYear\" from the country table."
        },
        "402": {
            "condition": "When finding the country with the smallest population",
            "operation": " order by \"Population\" in ascending order to get the minimum value."
        },
        "403": {
            "condition": "When selecting country information, When finding the country with the smallest population, When referencing the source table",
            "operation": " use the exact table name \"country\" instead of any variations like \"countries\"."
        },
        "404": {
            "condition": "When answering about \"the country with the smallest population\"",
            "operation": " rank rows by \"Population\" in ascending order and keep the first 1 row."
        },
        "405": {
            "condition": "When producing output columns",
            "operation": " make sure the output order is \"Name\", \"SurfaceArea\", \"IndepYear\" exactly as specified in the question sequence."
        },
        "406": {
            "condition": "When answering about \"the country with the smallest population\", When producing output columns, When ordering by population",
            "operation": " do not explicitly specify ASC as it is the default sort order."
        },
        "407": {
            "condition": "When choosing column names",
            "operation": " use exact case-sensitive identifiers \"Name\", \"IndepYear\", and \"SurfaceArea\" instead of lowercase versions."
        },
        "408": {
            "condition": "When ordering by population to find the lowest value",
            "operation": " sort by \"Population\" in ascending order instead of descending order."
        },
        "409": {
            "condition": "When choosing column names, When ordering by population to find the lowest value, When retrieving the country with the smallest population",
            "operation": " maintain the limit of 1 row to get only the single result with the minimum population value."
        },
        "410": {
            "condition": "When answering about \"name, year of independence, and surface area\"",
            "operation": " make sure the output order: Name, SurfaceArea, IndepYear."
        },
        "411": {
            "condition": "When the question asks for the country with the lowest population",
            "operation": " rank rows by Population in ascending order and keep the first 1 row."
        },
        "412": {
            "condition": "When answering about \"name, year of independence, and surface area\", When the question asks for the country with the lowest population, When ordering by Population",
            "operation": " do not specify ASC direction explicitly as it is the default ordering."
        },
        "413": {
            "condition": "When answering about \"country with the largest area\"",
            "operation": " use table \"country\" instead of \"countries\"."
        },
        "414": {
            "condition": "When selecting columns for population, name, and leader",
            "operation": " use exact column tokens \"Name\", \"population\", and \"HeadOfState\" respectively."
        },
        "415": {
            "condition": "When ordering by area to find the largest",
            "operation": " use column \"SurfaceArea\" instead of \"area\" and order in descending direction."
        },
        "416": {
            "condition": "When answering about \"country with the largest area\", When selecting columns for population, name, and leader, When ordering by area to find the largest, When retrieving the top result",
            "operation": " keep only the first row after ordering by \"SurfaceArea\" in descending order."
        },
        "417": {
            "condition": "When the question asks for \"name\"",
            "operation": " use the exact column token \"Name\" from table country."
        },
        "418": {
            "condition": "When the question asks for \"head of state\"",
            "operation": " use the exact column token \"HeadOfState\" from table country."
        },
        "419": {
            "condition": "When the question asks for the country with \"largest area\"",
            "operation": " use the exact column token \"SurfaceArea\" for ordering in descending direction and keep only the first row."
        },
        "420": {
            "condition": "When the question asks for \"name\", When the question asks for \"head of state\", When the question asks for the country with \"largest area\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for column names like \"Name\", \"HeadOfState\", and \"SurfaceArea\"."
        },
        "421": {
            "condition": "When answering about \"country name and number of languages spoken\"",
            "operation": " make sure the output order: T1.Name, COUNT(T2.Language)."
        },
        "422": {
            "condition": "When the question mentions \"country\"",
            "operation": " use table T1 (country) with column T1.Name for country names."
        },
        "423": {
            "condition": "When the question mentions \"languages spoken\"",
            "operation": " use table T2 (countrylanguage) with column T2.Language for languages."
        },
        "424": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.code = T2.countrycode and keep only matching pairs (inner match)."
        },
        "425": {
            "condition": "When the question asks for \"count of languages\"",
            "operation": " compute the number of rows using T2.Language."
        },
        "426": {
            "condition": "When the question says \"per country\"",
            "operation": " organize results by T1.Name and compute COUNT(T2.Language) per group."
        },
        "427": {
            "condition": "When the question specifies \"at least 3 languages\"",
            "operation": " filter groups where COUNT(*) > 2."
        },
        "428": {
            "condition": "When answering about \"country name and number of languages spoken\", When the question mentions \"country\", When the question mentions \"languages spoken\", When combining T1 and T2 for shared entities, When the question asks for \"count of languages\", When the question says \"per country\", When the question specifies \"at least 3 languages\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "429": {
            "condition": "When answering about \"country name and numbers of languages spoken for each country that speaks at least 3 languages\"",
            "operation": " make sure the output order: T1.Name, COUNT(T2.Language) AS num_languages."
        },
        "430": {
            "condition": "When combining country T1 and countrylanguage T2 for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "431": {
            "condition": "When the question asks for \"count of languages spoken per country\"",
            "operation": " organize results by T1.Name and compute COUNT(T2.Language) per group."
        },
        "432": {
            "condition": "When the question specifies \"at least 3 languages\"",
            "operation": " apply the condition COUNT(*) > 2 to filter groups."
        },
        "433": {
            "condition": "When answering about \"country name and numbers of languages spoken for each country that speaks at least 3 languages\", When combining country T1 and countrylanguage T2 for shared entities, When the question asks for \"count of languages spoken per country\", When the question specifies \"at least 3 languages\", When using table aliases",
            "operation": " use explicit aliases with AS for both tables (T1 AS country, T2 AS countrylanguage) instead of omitting them."
        },
        "434": {
            "condition": "When answering about \"Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages\"",
            "operation": " make sure the output order: COUNT(T2.Language) before T1.Name."
        },
        "435": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode; keep only matching pairs (inner match)."
        },
        "436": {
            "condition": "When the question says \"per country\"/\"by country\"",
            "operation": " organize results by T1.Name and compute requested aggregates per group."
        },
        "437": {
            "condition": "When the question asks for \"numbers of languages spoken\"",
            "operation": " compute the number of rows using T2.Language."
        },
        "438": {
            "condition": "When answering about \"Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages\", When combining T1 and T2 for shared entities, When the question says \"per country\"/\"by country\", When the question asks for \"numbers of languages spoken\", When the question specifies \"at least 3 languages\"",
            "operation": " filter groups where COUNT(*) > 2."
        },
        "439": {
            "condition": "When answering about \"names of countries that speak more than 2 languages\"",
            "operation": " make sure the output order: T1.Name, COUNT(T2.Language)"
        },
        "440": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Code = T2.CountryCode; keep only matching pairs (inner match)"
        },
        "441": {
            "condition": "When the question asks for \"how many languages they speak\"",
            "operation": " compute the number of rows using COUNT(T2.Language)"
        },
        "442": {
            "condition": "When the question says \"per country\"/\"by country\"",
            "operation": " organize results by T1.Name and compute COUNT(T2.Language) per group"
        },
        "443": {
            "condition": "When answering about \"names of countries that speak more than 2 languages\", When combining T1 and T2 for shared entities, When the question asks for \"how many languages they speak\", When the question says \"per country\"/\"by country\", When filtering for countries that speak more than 2 languages",
            "operation": " apply the condition COUNT(*) > 2 after grouping"
        },
        "444": {
            "condition": "When answering about \"names of countries that speak more than 2 languages, as well as how many languages they speak\"",
            "operation": " make sure the output order: COUNT(T2.Language) first, then T1.Name."
        },
        "445": {
            "condition": "When the question asks for \"how many languages they speak\"",
            "operation": " compute the count of T2.Language without using an alias."
        },
        "446": {
            "condition": "When answering about \"names of countries that speak more than 2 languages, as well as how many languages they speak\", When the question asks for \"how many languages they speak\", When the question asks for results without ordering",
            "operation": " do not include any ORDER BY clause in the output."
        },
        "447": {
            "condition": "When answering about \"names of countries that speak more than 2 languages, as well as how many languages they speak\"",
            "operation": " make sure the output order: COUNT(T2.Language) first, then T1.Name."
        },
        "448": {
            "condition": "When answering about \"names of countries that speak more than 2 languages, as well as how many languages they speak\", When counting languages spoken by countries",
            "operation": " use COUNT(*) in the HAVING clause instead of COUNT(T2.Language) to count all rows rather than non-null language values specifically."
        },
        "449": {
            "condition": "When the question asks for \"number of cities in each district\"",
            "operation": " organize results by the exact token \"District\" and compute the count of cities per group."
        },
        "450": {
            "condition": "When the question mentions \"population is greater than the average population\"",
            "operation": " filter rows where the exact token \"Population\" is greater than the average value of \"Population\" across all cities."
        },
        "451": {
            "condition": "When counting cities",
            "operation": " use count(*) without an alias to count the number of rows."
        },
        "452": {
            "condition": "When the question asks for \"number of cities in each district\", When the question mentions \"population is greater than the average population\", When counting cities, When referring to column identifiers",
            "operation": " capitalize \"District\" in both SELECT and GROUP BY clauses, and capitalize \"Population\" in both WHERE clause and subquery."
        },
        "453": {
            "condition": "When answering about \"number of cities in each district whose population is greater than average\"",
            "operation": " make sure the output order: count(*) first, then District."
        },
        "454": {
            "condition": "When calculating average population",
            "operation": " use lowercase avg(Population) instead of uppercase AVG(Population)."
        },
        "455": {
            "condition": "When filtering cities by population",
            "operation": " use Population > (subquery calculating average population) to find cities with population greater than the average."
        },
        "456": {
            "condition": "When answering about \"number of cities in each district whose population is greater than average\", When calculating average population, When filtering cities by population, When grouping results by district",
            "operation": " use GROUP BY District to organize counts per district."
        },
        "457": {
            "condition": "When the question asks for \"cities in each district\"",
            "operation": " organize results by the exact column token \"District\" from table city and compute counts per group."
        },
        "458": {
            "condition": "When the question mentions \"population\"",
            "operation": " \"population\" actually means column \"Population\" in table country."
        },
        "459": {
            "condition": "When combining city and country tables for population data",
            "operation": " link rows where the canonical keys are equal as shown in the schema (city and country join condition); keep only matching pairs (inner match)."
        },
        "460": {
            "condition": "When counting cities",
            "operation": " compute the number of rows using the canonical key for cities."
        },
        "461": {
            "condition": "When filtering for population above average",
            "operation": " compare \"Population\" values against the average of all \"Population\" values from country table."
        },
        "462": {
            "condition": "When the question asks for \"cities in each district\", When the question mentions \"population\", When combining city and country tables for population data, When counting cities, When filtering for population above average, When producing output",
            "operation": " make sure the output order is \"District\" followed by the count."
        },
        "463": {
            "condition": "When answering about \"How many cities in each district have a population that is above the average population across all cities?\"",
            "operation": " make sure the output order: count(*) before District."
        },
        "464": {
            "condition": "When the question asks for \"count of cities\"",
            "operation": " compute the number of rows using the canonical key for cities."
        },
        "465": {
            "condition": "When the question says \"per district\"/\"by district\"",
            "operation": " organize results by the token for District and compute requested aggregates per group."
        },
        "466": {
            "condition": "When answering about \"How many cities in each district have a population that is above the average population across all cities?\", When the question asks for \"count of cities\", When the question says \"per district\"/\"by district\", When the question asks for cities with population above average",
            "operation": " filter rows where Population > (SELECT AVG(Population) FROM city) instead of altering this condition."
        },
        "467": {
            "condition": "When the question asks for average life expectancy by government form",
            "operation": " use HAVING avg(LifeExpectancy) > 72 instead of WHERE lifeexpectancy > 72 to filter after aggregation rather than before."
        },
        "468": {
            "condition": "When selecting output columns",
            "operation": " place GovernmentForm after the aggregate instead of before it in the output order."
        },
        "469": {
            "condition": "When computing total population",
            "operation": " use SUM(Population) without an alias instead of using total_population."
        },
        "470": {
            "condition": "When the question asks for average life expectancy by government form, When selecting output columns, When computing total population, When referring to column names",
            "operation": " use uppercase Population and GovernmentForm instead of lowercase versions to match the schema exactly."
        },
        "471": {
            "condition": "When the question asks for \"government form name and total population\"",
            "operation": " make sure the output order: total population first, then government form name."
        },
        "472": {
            "condition": "When using aggregate functions",
            "operation": " use lowercase function names like \"sum\" and \"avg\" instead of uppercase \"SUM\" and \"AVG\"."
        },
        "473": {
            "condition": "When the question asks for \"government form name and total population\", When using aggregate functions, When filtering groups by aggregate conditions",
            "operation": " apply the condition \"avg(LifeExpectancy) > 72\" after grouping to only include government forms with average life expectancy longer than 72."
        },
        "474": {
            "condition": "When answering about \"government form name and total population for each government form whose average life expectancy is longer than 72\"",
            "operation": " make sure the output order: sum(Population) first, then GovernmentForm."
        },
        "475": {
            "condition": "When the question asks for \"total population\"",
            "operation": " compute the sum of Population values."
        },
        "476": {
            "condition": "When the question asks for \"average life expectancy is longer than 72\"",
            "operation": " filter groups where the average of LifeExpectancy is greater than 72."
        },
        "477": {
            "condition": "When answering about \"government form name and total population for each government form whose average life expectancy is longer than 72\", When the question asks for \"total population\", When the question asks for \"average life expectancy is longer than 72\", When the question says \"for each government form\"",
            "operation": " organize results by GovernmentForm and compute requested aggregates per group."
        },
        "478": {
            "condition": "When the question asks for government forms with average life expectancy greater than 72",
            "operation": " filter groups using HAVING avg(LifeExpectancy) > 72 instead of filtering individual rows."
        },
        "479": {
            "condition": "When computing total population per government form",
            "operation": " use sum(Population) as the aggregation function."
        },
        "480": {
            "condition": "When ordering output columns",
            "operation": " place sum(Population) before GovernmentForm in the result."
        },
        "481": {
            "condition": "When the question asks for government forms with average life expectancy greater than 72, When computing total population per government form, When ordering output columns, When grouping results by government form",
            "operation": " use GovernmentForm as the grouping key without aliases in the output."
        },
        "482": {
            "condition": "When the question asks for different government forms and their total population",
            "operation": " place \"GovernmentForm\" after the aggregate function in the output order."
        },
        "483": {
            "condition": "When computing total population",
            "operation": " use lowercase \"sum\" function on \"Population\" column."
        },
        "484": {
            "condition": "When filtering by average life expectancy greater than 72",
            "operation": " use lowercase \"avg\" function on \"LifeExpectancy\" column and compare with value 72."
        },
        "485": {
            "condition": "When grouping results by government form",
            "operation": " group by \"GovernmentForm\" column."
        },
        "486": {
            "condition": "When the question asks for different government forms and their total population, When computing total population, When filtering by average life expectancy greater than 72, When grouping results by government form, When handling aggregate functions",
            "operation": " use lowercase function names (sum, avg) instead of uppercase versions."
        },
        "487": {
            "condition": "When the question asks for average life expectancy and total population per continent",
            "operation": " use sum(Population) and avg(LifeExpectancy) as the exact aggregate functions with the correct column names and casing."
        },
        "488": {
            "condition": "When filtering on aggregated results like average life expectancy",
            "operation": " apply the condition avg(LifeExpectancy) < 72 using HAVING clause after GROUP BY instead of WHERE clause."
        },
        "489": {
            "condition": "When selecting columns for output",
            "operation": " order the output columns as sum(Population), avg(LifeExpectancy), Continent instead of any other order."
        },
        "490": {
            "condition": "When referring to the table containing continent data",
            "operation": " use the exact table name country instead of countries."
        },
        "491": {
            "condition": "When the question asks for average life expectancy and total population per continent, When filtering on aggregated results like average life expectancy, When selecting columns for output, When referring to the table containing continent data, When presenting results",
            "operation": " do not use column aliases like as avg_life_expectancy or as total_population in the final output."
        },
        "492": {
            "condition": "When answering about \"average life expectancy and total population for each continent where average life expectancy is shorter than 72\"",
            "operation": " make sure the output order: sum(Population), avg(LifeExpectancy), Continent."
        },
        "493": {
            "condition": "When the question asks for \"average life expectancy\"",
            "operation": " compute the average of LifeExpectancy values."
        },
        "494": {
            "condition": "When the question asks for \"total population\"",
            "operation": " compute the sum of Population values."
        },
        "495": {
            "condition": "When the question says \"for each continent\"",
            "operation": " organize results by grouping on the Continent column."
        },
        "496": {
            "condition": "When answering about \"average life expectancy and total population for each continent where average life expectancy is shorter than 72\", When the question asks for \"average life expectancy\", When the question asks for \"total population\", When the question says \"for each continent\", When the question specifies \"where the average life expectancy is shorter than 72\"",
            "operation": " filter groups where the average LifeExpectancy is less than 72."
        },
        "497": {
            "condition": "When answering about continents with population and life expectancy",
            "operation": " organize results by the exact column token \"Continent\" from table \"country\"."
        },
        "498": {
            "condition": "When computing total population",
            "operation": " use sum(\"Population\") instead of sum(population) with exact column name."
        },
        "499": {
            "condition": "When computing average life expectancy",
            "operation": " use avg(\"LifeExpectancy\") instead of avg(life_expectancy) with exact column name."
        },
        "500": {
            "condition": "When filtering for continents with average life expectancy less than 72",
            "operation": " apply the condition avg(\"LifeExpectancy\") < 72 after grouping using HAVING instead of WHERE."
        },
        "501": {
            "condition": "When referencing the table",
            "operation": " use table name \"country\" instead of \"countries\" exactly as specified in the schema."
        },
        "502": {
            "condition": "When answering about continents with population and life expectancy, When computing total population, When computing average life expectancy, When filtering for continents with average life expectancy less than 72, When referencing the table, When producing output columns",
            "operation": " include \"Continent\", sum(\"Population\"), and avg(\"LifeExpectancy\") without aliases total_population and avg_life_expectancy."
        },
        "503": {
            "condition": "When answering about \"different continents and the total population and average life expectancy\"",
            "operation": " make sure the output order: sum(Population), avg(LifeExpectancy), Continent"
        },
        "504": {
            "condition": "When the question asks for \"continents that have an average life expectancy less than 72\"",
            "operation": " filter groups where avg(LifeExpectancy) < 72"
        },
        "505": {
            "condition": "When answering about \"different continents and the total population and average life expectancy\", When the question asks for \"continents that have an average life expectancy less than 72\", When the question says \"per continent\"/\"by continent\"",
            "operation": " organize results by Continent and compute requested aggregates per group"
        },
        "506": {
            "condition": "When answering about \"names and areas of countries with the top 5 largest area\"",
            "operation": " make sure the output order: Name, SurfaceArea."
        },
        "507": {
            "condition": "When the question mentions \"countries\"",
            "operation": " \"countries\" actually means \"country\" in schema."
        },
        "508": {
            "condition": "When the question mentions \"name\"",
            "operation": " \"name\" actually means \"Name\" in schema."
        },
        "509": {
            "condition": "When the question mentions \"area\"",
            "operation": " \"area\" actually means \"SurfaceArea\" in schema."
        },
        "510": {
            "condition": "When answering about \"names and areas of countries with the top 5 largest area\", When the question mentions \"countries\", When the question mentions \"name\", When the question mentions \"area\", When the question mentions \"top 5 largest area\"",
            "operation": " rank rows by SurfaceArea in descending order and keep the first 5 rows."
        },
        "511": {
            "condition": "When the question asks for \"names and surface areas\"",
            "operation": " use the exact column tokens \"Name\" and \"SurfaceArea\" from the country table."
        },
        "512": {
            "condition": "When the question asks for the \"5 largest countries\"",
            "operation": " order by \"SurfaceArea\" in descending order and keep the first 5 rows."
        },
        "513": {
            "condition": "When the question asks for \"names and surface areas\", When the question asks for the \"5 largest countries\", When querying from the database",
            "operation": " use the exact table name \"country\" instead of any other table name."
        },
        "514": {
            "condition": "When the question asks for country names",
            "operation": " use column \"Name\" from table \"country\" instead of \"name\" from other tables."
        },
        "515": {
            "condition": "When the question asks for \"top 3 largest population\"",
            "operation": " order by column \"Population\" in descending order to get the highest values first."
        },
        "516": {
            "condition": "When the question asks for country names, When the question asks for \"top 3 largest population\", When the question asks for top K results",
            "operation": " limit the output to exactly 3 rows after proper ordering."
        },
        "517": {
            "condition": "When the question asks for \"names of the 3 most populated countries\"",
            "operation": " use column \"Name\" from table \"country\" for output."
        },
        "518": {
            "condition": "When ordering by population to find the most populated",
            "operation": " sort by column \"Population\" in descending order."
        },
        "519": {
            "condition": "When selecting the top 3 results",
            "operation": " keep only the first 3 rows after sorting."
        },
        "520": {
            "condition": "When the question asks for \"names of the 3 most populated countries\", When ordering by population to find the most populated, When selecting the top 3 results, When referring to countries",
            "operation": " use table \"country\" instead of \"countries\" as the correct table name."
        },
        "521": {
            "condition": "When answering about \"nations with lowest populations\"",
            "operation": " use the table \"country\" instead of \"nations\" as the data source."
        },
        "522": {
            "condition": "When the question mentions \"names\"",
            "operation": " the exact column token is \"Name\" (not \"name\") from table \"country\"."
        },
        "523": {
            "condition": "When the question mentions \"populations\"",
            "operation": " the exact column token is \"Population\" (not \"population\") from table \"country\"."
        },
        "524": {
            "condition": "When answering about \"nations with lowest populations\", When the question mentions \"names\", When the question mentions \"populations\", When the question asks for \"3 lowest populations\"",
            "operation": " rank rows by \"Population\" in ascending order and keep the first 3 rows."
        },
        "525": {
            "condition": "When the question asks for country names",
            "operation": " use column \"Name\" from table \"country\" instead of \"name\" from other tables."
        },
        "526": {
            "condition": "When the question asks about population counts",
            "operation": " use column \"Population\" from table \"country\" to get accurate population data."
        },
        "527": {
            "condition": "When the question asks for countries with the fewest people",
            "operation": " sort by \"Population\" in ascending order (ASC) instead of descending order (DESC)."
        },
        "528": {
            "condition": "When the question specifies \"3 countries\"",
            "operation": " limit the results to exactly 3 rows."
        },
        "529": {
            "condition": "When the question asks for country names, When the question asks about population counts, When the question asks for countries with the fewest people, When the question specifies \"3 countries\", When referencing the country table",
            "operation": " use table name \"country\" instead of \"countries\" to access the correct data source."
        },
        "530": {
            "condition": "When answering about \"how many countries are in Asia\"",
            "operation": " make sure the output order: COUNT(*)"
        },
        "531": {
            "condition": "When the question mentions \"countries\"",
            "operation": " \"countries\" actually means \"country in schema\""
        },
        "532": {
            "condition": "When the question mentions \"Asia\"",
            "operation": " filter rows where continent = \"Asia\" exactly as specified"
        },
        "533": {
            "condition": "When answering about \"how many countries are in Asia\", When the question mentions \"countries\", When the question mentions \"Asia\", When the question asks for \"count of countries\"",
            "operation": " compute the number of rows using the canonical key for country entities"
        },
        "534": {
            "condition": "When answering about \"countries in Asia\"",
            "operation": " use table \"country\" instead of \"countries\"."
        },
        "535": {
            "condition": "When answering about \"countries in Asia\", When filtering for countries in Asia",
            "operation": " use condition continent = \"Asia\" instead of continent = 'Europe'."
        },
        "536": {
            "condition": "When the question asks about countries",
            "operation": " use the table \"country\" instead of \"countries\" as the correct table name."
        },
        "537": {
            "condition": "When referring to country names",
            "operation": " use the column \"Name\" (with exact case) instead of \"name\"."
        },
        "538": {
            "condition": "When referring to population values",
            "operation": " use the column \"Population\" (with exact case) instead of \"population\"."
        },
        "539": {
            "condition": "When the question asks about countries, When referring to country names, When referring to population values, When filtering for a specific population value of 80000",
            "operation": " use the string literal \"80000\" with double quotes instead of treating it as a numeric literal."
        },
        "540": {
            "condition": "When referencing the table containing country information",
            "operation": " use the exact table name \"country\" instead of \"countries\"."
        },
        "541": {
            "condition": "When selecting country names",
            "operation": " use the exact column name \"Name\" with proper capitalization."
        },
        "542": {
            "condition": "When filtering by population",
            "operation": " use the exact column name \"Population\" with proper capitalization."
        },
        "543": {
            "condition": "When comparing population values",
            "operation": " treat the value \"80000\" as a string literal with double quotes instead of a numeric value."
        },
        "544": {
            "condition": "When referencing the table containing country information, When selecting country names, When filtering by population, When comparing population values, When filtering by continent",
            "operation": " use the exact string literal \"Europe\" with proper capitalization and double quotes."
        },
        "545": {
            "condition": "When the question mentions \"area\"",
            "operation": " \"area\" actually means \"surfacearea\" in the schema."
        },
        "546": {
            "condition": "When filtering for countries with area bigger than 3000",
            "operation": " use surfacearea > 3000 instead of < 3000."
        },
        "547": {
            "condition": "When answering about total population and average area",
            "operation": " make sure the output order: SUM(population), AVG(surfacearea)."
        },
        "548": {
            "condition": "When the question mentions \"countries\"",
            "operation": " use table name \"country\" instead of \"countries\"."
        },
        "549": {
            "condition": "When filtering for continent \"North America\"",
            "operation": " use exact literal value \"north america\" with lowercase letters."
        },
        "550": {
            "condition": "When the question mentions \"area\", When filtering for countries with area bigger than 3000, When answering about total population and average area, When the question mentions \"countries\", When filtering for continent \"North America\", When producing output columns",
            "operation": " do not use column aliases total_population and average_area."
        },
        "551": {
            "condition": "When the question asks for cities",
            "operation": " select the \"name\" column from the \"city\" table instead of a \"city\" column."
        },
        "552": {
            "condition": "When filtering for population between 160000 and 900000",
            "operation": " use inclusive bounds with BETWEEN 160000 AND 900000 to include both boundary values, not separate greater-than and less-than conditions."
        },
        "553": {
            "condition": "When the question asks for cities, When filtering for population between 160000 and 900000, When answering about cities with population ranges",
            "operation": " make sure the output order shows city names that meet the population criteria."
        },
        "554": {
            "condition": "When the question asks for cities with population between 160000 and 900000",
            "operation": " use the table name \"city\" instead of \"cities\" to match the schema."
        },
        "555": {
            "condition": "When selecting cities within a population range",
            "operation": " use BETWEEN 160000 AND 900000 instead of population < 160000 OR population > 900000 to include the specified range rather than exclude it."
        },
        "556": {
            "condition": "When the question mentions \"cities\"",
            "operation": " the exact identifier in the schema is \"city\" table."
        },
        "557": {
            "condition": "When the question asks for cities with population between 160000 and 900000, When selecting cities within a population range, When the question mentions \"cities\", When the question asks for population between 160000 and 900000",
            "operation": " use inclusive range checking with exact literals 160000 and 900000."
        },
        "558": {
            "condition": "When answering about \"which language is spoken by the largest number of countries\"",
            "operation": " make sure the output order: only return the LANGUAGE column."
        },
        "559": {
            "condition": "When the question mentions \"countries\"",
            "operation": " \"countries\" actually means \"countrylanguage in schema\"."
        },
        "560": {
            "condition": "When the question asks for \"largest number of countries\" for languages",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "561": {
            "condition": "When the question asks for \"count of countries\" per language",
            "operation": " compute the number of rows using the canonical key for countries (not specified in amends, but use count(*) as shown)."
        },
        "562": {
            "condition": "When the question says \"per language\"/\"by language\"",
            "operation": " organize results by the token for LANGUAGE and compute count(*) per group."
        },
        "563": {
            "condition": "When answering about \"which language is spoken by the largest number of countries\", When the question mentions \"countries\", When the question asks for \"largest number of countries\" for languages, When the question asks for \"count of countries\" per language, When the question says \"per language\"/\"by language\", When choosing identifier delimiters",
            "operation": " do not replace the exact case shown in amends - use LANGUAGE (uppercase) not language (lowercase)."
        },
        "564": {
            "condition": "When the question asks for the language spoken in the most countries",
            "operation": " use the exact table name \"countrylanguage\" instead of \"country_languages\"."
        },
        "565": {
            "condition": "When referencing the language column",
            "operation": " use the exact column name \"LANGUAGE\" with the same case sensitivity as shown in the schema."
        },
        "566": {
            "condition": "When counting countries per language",
            "operation": " use COUNT(*) to count all rows in each language group."
        },
        "567": {
            "condition": "When the question asks for the language spoken in the most countries, When referencing the language column, When counting countries per language, When finding the most frequently occurring language",
            "operation": " order the results by the count in descending order and take only the top result with LIMIT 1."
        },
        "568": {
            "condition": "When the question asks about languages spoken by percentage in countries",
            "operation": " use table \"countrylanguage\" with exact column names \"CountryCode\", \"Language\", and \"Percentage\"."
        },
        "569": {
            "condition": "When grouping by country",
            "operation": " group by the exact column \"CountryCode\" from table \"countrylanguage\"."
        },
        "570": {
            "condition": "When finding the largest percentage",
            "operation": " compute the maximum value of \"Percentage\" for each group."
        },
        "571": {
            "condition": "When selecting output columns",
            "operation": " include \"CountryCode\", \"Language\", and the maximum \"Percentage\" value in the results."
        },
        "572": {
            "condition": "When the question asks about languages spoken by percentage in countries, When grouping by country, When finding the largest percentage, When selecting output columns, When handling text literals",
            "operation": " preserve exact case and formatting of column names as shown in the schema (e.g., \"CountryCode\" not country, \"Language\" not language, \"Percentage\" not percentage)."
        },
        "573": {
            "condition": "When the question asks for \"largest percentage of people in each country\"",
            "operation": " rank languages by Percentage in descending order for each CountryCode and keep only the top language per country."
        },
        "574": {
            "condition": "When the question asks for \"language spoken by the largest percentage\"",
            "operation": " include both CountryCode and Language columns in the output without aliasing Language."
        },
        "575": {
            "condition": "When computing the maximum percentage",
            "operation": " use max(Percentage) without an alias instead of MAX(Percentage) AS MaxPercentage."
        },
        "576": {
            "condition": "When the question asks for \"largest percentage of people in each country\", When the question asks for \"language spoken by the largest percentage\", When computing the maximum percentage, When grouping by CountryCode",
            "operation": " organize results by CountryCode and compute the maximum Percentage per group."
        },
        "577": {
            "condition": "When answering about \"language spoken by the largest percentage of people in each country\"",
            "operation": " make sure the output order: CountryCode, Language, MAX(Percentage)."
        },
        "578": {
            "condition": "When the question mentions \"each country\"",
            "operation": " group results by the exact token \"CountryCode\"."
        },
        "579": {
            "condition": "When the question mentions \"largest percentage\"",
            "operation": " calculate the maximum value of the exact token \"Percentage\" for each group."
        },
        "580": {
            "condition": "When answering about \"language spoken by the largest percentage of people in each country\", When the question mentions \"each country\", When the question mentions \"largest percentage\", When producing output",
            "operation": " include both the grouping column \"CountryCode\" and the associated \"Language\" column that corresponds to the maximum percentage value."
        },
        "581": {
            "condition": "When the question asks for \"the language spoken by the largest percentage of people in each country\"",
            "operation": " include both the \"CountryCode\" and \"Language\" columns in the output to show which language has the maximum percentage for each country."
        },
        "582": {
            "condition": "When grouping by \"CountryCode\" to find the maximum percentage per country",
            "operation": " maintain the \"Language\" column in the SELECT list to properly identify which language corresponds to the maximum percentage value."
        },
        "583": {
            "condition": "When organizing results by country",
            "operation": " use consistent column ordering with \"Language, CountryCode\" to match the logical grouping structure and ensure proper semantic alignment."
        },
        "584": {
            "condition": "When the question asks for \"the language spoken by the largest percentage of people in each country\", When grouping by \"CountryCode\" to find the maximum percentage per country, When organizing results by country, When computing maximum percentage per country",
            "operation": " use the MAX(Percentage) function to find the highest percentage value for each country group."
        },
        "585": {
            "condition": "When answering about \"countries where Spanish is spoken by the largest percentage\"",
            "operation": " make sure the output order: count of countries"
        },
        "586": {
            "condition": "When the question mentions \"countries\"",
            "operation": " \"countries\" actually means \"CountryCode in countrylanguage table\""
        },
        "587": {
            "condition": "When the question mentions \"Spanish\"",
            "operation": " use the exact literal \"Spanish\" with double quotes"
        },
        "588": {
            "condition": "When the question asks for \"total number of countries where Spanish is spoken by the largest percentage\"",
            "operation": " group by CountryCode and count the number of groups"
        },
        "589": {
            "condition": "When computing the maximum percentage per country",
            "operation": " use max(Percentage) for each CountryCode group"
        },
        "590": {
            "condition": "When choosing identifier delimiters",
            "operation": " use double quotes around \"Spanish\" and use exact column names LANGUAGE and Percentage as shown in the schema"
        },
        "591": {
            "condition": "When answering about \"countries where Spanish is spoken by the largest percentage\", When the question mentions \"countries\", When the question mentions \"Spanish\", When the question asks for \"total number of countries where Spanish is spoken by the largest percentage\", When computing the maximum percentage per country, When choosing identifier delimiters, When referring to table roles",
            "operation": " use countrylanguage as the base table (T1) for language data"
        },
        "592": {
            "condition": "When answering about \"total number of countries where Spanish is spoken by the largest percentage of people\"",
            "operation": " make sure the output order: count of countries and maximum percentage values."
        },
        "593": {
            "condition": "When the question mentions \"Spanish\"",
            "operation": " \"Spanish\" actually means \"Language = 'Spanish'\" in schema."
        },
        "594": {
            "condition": "When the question asks for \"total number of countries\"",
            "operation": " compute the number of rows using the canonical key token for countries (CountryCode)."
        },
        "595": {
            "condition": "When the question mentions \"largest percentage\"",
            "operation": " include the maximum percentage value for each country in the output."
        },
        "596": {
            "condition": "When answering about \"total number of countries where Spanish is spoken by the largest percentage of people\", When the question mentions \"Spanish\", When the question asks for \"total number of countries\", When the question mentions \"largest percentage\", When the question says \"per country\"/\"by country\"",
            "operation": " organize results by CountryCode and compute requested aggregates per group."
        },
        "597": {
            "condition": "When querying about language data",
            "operation": " use the \"countrylanguage\" table instead of the \"countries\" table."
        },
        "598": {
            "condition": "When filtering for Spanish language",
            "operation": " use the exact literal \"Spanish\" with double quotes instead of single quotes."
        },
        "599": {
            "condition": "When counting countries by language",
            "operation": " group results by \"CountryCode\" to get counts per country."
        },
        "600": {
            "condition": "When querying about language data, When filtering for Spanish language, When counting countries by language, When determining predominant language",
            "operation": " include both count and maximum percentage in the selection to identify the primary language per country."
        },
        "601": {
            "condition": "When answering about \"codes of countries where Spanish is spoken by the largest percentage of people\"",
            "operation": " make sure the output order includes CountryCode and max(Percentage)."
        },
        "602": {
            "condition": "When the question mentions \"Spanish\"",
            "operation": " \"Spanish\" actually means \"Language = 'Spanish'\" in the schema."
        },
        "603": {
            "condition": "When the question asks for \"largest percentage per country\"",
            "operation": " organize results by CountryCode and compute the maximum Percentage value per group."
        },
        "604": {
            "condition": "When answering about \"codes of countries where Spanish is spoken by the largest percentage of people\", When the question mentions \"Spanish\", When the question asks for \"largest percentage per country\", When computing maximum percentage",
            "operation": " use max(Percentage) as the aggregate function for each CountryCode group."
        },
        "605": {
            "condition": "When answering about country codes where Spanish is predominantly spoken",
            "operation": " select \"CountryCode\" and the maximum \"Percentage\" value."
        },
        "606": {
            "condition": "When the question mentions \"countries\"",
            "operation": " the data actually comes from the \"countrylanguage\" table instead of the \"countries\" table."
        },
        "607": {
            "condition": "When the question asks for \"predominantly spoken language\"",
            "operation": " use aggregate function max(\"Percentage\") with GROUP BY \"CountryCode\" instead of selecting individual rows."
        },
        "608": {
            "condition": "When filtering for Spanish language",
            "operation": " use the exact condition \"LANGUAGE\" = \"Spanish\" to match the correct column name and value format."
        },
        "609": {
            "condition": "When answering about country codes where Spanish is predominantly spoken, When the question mentions \"countries\", When the question asks for \"predominantly spoken language\", When filtering for Spanish language, When combining data for language analysis",
            "operation": " group by \"CountryCode\" to get the maximum percentage per country."
        }
    },
    "orchestra": {
        "0": {
            "condition": "When answering about \"how many conductors\"",
            "operation": " query the \"conductor\" table directly instead of filtering another table."
        },
        "1": {
            "condition": "When answering about \"how many conductors\", When counting conductors",
            "operation": " count all records from the \"conductor\" table using the canonical key for conductors."
        },
        "2": {
            "condition": "When counting conductors",
            "operation": " use the \"conductor\" table directly instead of filtering another table by job title."
        },
        "3": {
            "condition": "When counting conductors, When the question asks for \"count of conductors\"",
            "operation": " compute the number of rows using the canonical key from the \"conductor\" table."
        },
        "4": {
            "condition": "When the question asks for conductor names",
            "operation": " use the exact column token \"Name\" from table \"conductor\"."
        },
        "5": {
            "condition": "When ordering by age in ascending order",
            "operation": " use the exact column token \"Age\" from table \"conductor\" and sort from lowest to highest values."
        },
        "6": {
            "condition": "When the question asks for conductor names, When ordering by age in ascending order, When referencing the conductor table",
            "operation": " use the exact table name \"conductor\" (not \"conductors\")."
        },
        "7": {
            "condition": "When the question asks for conductor names",
            "operation": " use the exact column token \"Name\" from table \"conductor\" instead of \"name\"."
        },
        "8": {
            "condition": "When ordering conductors by age",
            "operation": " order by column \"Age ASC\" instead of by name."
        },
        "9": {
            "condition": "When the question asks for conductor names, When ordering conductors by age, When referring to the conductors table",
            "operation": " use table name \"conductor\" instead of \"conductors\"."
        },
        "10": {
            "condition": "When the question asks about conductors",
            "operation": " use table \"conductor\" instead of \"conductors\"."
        },
        "11": {
            "condition": "When the question mentions \"names\"",
            "operation": " use column \"Name\" instead of \"name\"."
        },
        "12": {
            "condition": "When the question mentions \"nationalities\"",
            "operation": " use column \"Nationality\" instead of \"nationality\"."
        },
        "13": {
            "condition": "When the question asks about conductors, When the question mentions \"names\", When the question mentions \"nationalities\", When filtering for conductors whose nationalities are not \"USA\"",
            "operation": " use inequality filter != 'USA' instead of equality filter = 'USA'."
        },
        "14": {
            "condition": "When the question asks about conductors",
            "operation": " use table \"conductor\" instead of \"conductors\" and column \"Name\" instead of \"name\"."
        },
        "15": {
            "condition": "When the question asks for conductors that do not have USA nationality",
            "operation": " use filter condition \"Nationality != 'USA'\" instead of \"nationality = 'USA'\"."
        },
        "16": {
            "condition": "When the question asks about conductors, When the question asks for conductors that do not have USA nationality, When producing output",
            "operation": " return only the \"Name\" column from the \"conductor\" table."
        },
        "17": {
            "condition": "When answering about \"record companies of orchestras\"",
            "operation": " make sure the output order: \"Record_Company\" only."
        },
        "18": {
            "condition": "When the question mentions \"years in which they were founded\"",
            "operation": " \"years\" actually means \"Year_of_Founded in schema\"."
        },
        "19": {
            "condition": "When the question asks for \"descending order\"",
            "operation": " rank rows by \"Year_of_Founded\" in descending direction."
        },
        "20": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for \"Record_Company\" and \"Year_of_Founded\"."
        },
        "21": {
            "condition": "When answering about \"record companies of orchestras\", When the question mentions \"years in which they were founded\", When the question asks for \"descending order\", When choosing identifier delimiters, When referring to table roles",
            "operation": " use table \"orchestra\" as the base table without additional aliases."
        },
        "22": {
            "condition": "When answering about \"record companies of orchestras\"",
            "operation": " make sure the output order: \"Record_Company\" only."
        },
        "23": {
            "condition": "When the question mentions \"record companies\"",
            "operation": " \"record companies\" actually means \"Record_Company\" in schema."
        },
        "24": {
            "condition": "When the question mentions \"years in which they were founded\"",
            "operation": " \"years in which they were founded\" actually means \"Year_of_Founded\" in schema."
        },
        "25": {
            "condition": "When the question says \"sorted descending by the years\"",
            "operation": " rank rows by \"Year_of_Founded\" in descending order."
        },
        "26": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "27": {
            "condition": "When answering about \"record companies of orchestras\", When the question mentions \"record companies\", When the question mentions \"years in which they were founded\", When the question says \"sorted descending by the years\", When choosing identifier delimiters, When handling text literals",
            "operation": " do not change case, spacing, or punctuation for values like 'Mercury Records', 'Columbia Masterworks', 'Philips', 'Kultur', 'Decca Records'."
        },
        "28": {
            "condition": "When answering about \"average attendance of shows\"",
            "operation": " use the exact column name \"Attendance\" from the \"SHOW\" table."
        },
        "29": {
            "condition": "When computing the average",
            "operation": " use the lowercase \"avg\" function for consistency with the target query format."
        },
        "30": {
            "condition": "When answering about \"average attendance of shows\", When computing the average, When referencing the table containing attendance data",
            "operation": " use the exact table name \"SHOW\" instead of any variations like \"shows\"."
        },
        "31": {
            "condition": "When calculating average attendance",
            "operation": " use the avg aggregate function instead of sum to compute the average value."
        },
        "32": {
            "condition": "When referencing the attendance column",
            "operation": " use exact column name \"Attendance\" with proper capitalization instead of lowercase \"attendance\"."
        },
        "33": {
            "condition": "When calculating average attendance, When referencing the attendance column, When querying from the shows table",
            "operation": " use the exact table name \"SHOW\" instead of the plural form \"shows\"."
        },
        "34": {
            "condition": "When the question asks about performances whose type is not \"Live final\"",
            "operation": " filter rows where \"TYPE\" is not equal to \"Live final\" exactly."
        },
        "35": {
            "condition": "When referencing the performances table",
            "operation": " use the exact table name \"performance\" (not \"performances\")."
        },
        "36": {
            "condition": "When the question asks about performances whose type is not \"Live final\", When referencing the performances table, When computing maximum and minimum share values",
            "operation": " calculate MAX(\"share\") and MIN(\"share\") on the filtered dataset."
        },
        "37": {
            "condition": "When the question asks for maximum and minimum shares",
            "operation": " use MAX(\"SHARE\") and MIN(\"SHARE\") as the aggregate functions."
        },
        "38": {
            "condition": "When the question specifies performances that do not have type \"Live final\"",
            "operation": " filter records using WHERE \"TYPE\" != \"Live final\" to exclude rather than include."
        },
        "39": {
            "condition": "When referencing the performance table",
            "operation": " use the exact table name \"performance\" (not \"performances\")."
        },
        "40": {
            "condition": "When the question asks for maximum and minimum shares, When the question specifies performances that do not have type \"Live final\", When referencing the performance table, When handling column names",
            "operation": " use exact case-sensitive identifiers \"SHARE\" and \"TYPE\" with double quotes as shown in the schema."
        },
        "41": {
            "condition": "When counting different nationalities",
            "operation": " use count(DISTINCT Nationality) instead of COUNT(*) to count distinct values rather than all rows."
        },
        "42": {
            "condition": "When referencing the conductor table",
            "operation": " use the exact table name \"conductor\" instead of \"conductors\"."
        },
        "43": {
            "condition": "When counting different nationalities, When referencing the conductor table, When counting distinct values",
            "operation": " add the DISTINCT modifier to count unique values instead of including duplicates."
        },
        "44": {
            "condition": "When counting different nationalities of conductors",
            "operation": " count distinct values of the \"Nationality\" column from the \"conductor\" table."
        },
        "45": {
            "condition": "When the question asks for \"number of different nationalities\"",
            "operation": " use the exact column name \"Nationality\" with the DISTINCT modifier to count unique values."
        },
        "46": {
            "condition": "When counting different nationalities of conductors, When the question asks for \"number of different nationalities\", When referencing the conductor table",
            "operation": " use the exact table name \"conductor\" (not \"conductors\") as specified in the schema."
        },
        "47": {
            "condition": "When answering about \"names of conductors\"",
            "operation": " use the exact column token \"Name\" from table conductor."
        },
        "48": {
            "condition": "When the question mentions \"conductors\"",
            "operation": " it actually means table \"conductor\" in the schema."
        },
        "49": {
            "condition": "When the question asks for \"descending order of years of work\"",
            "operation": " order by column \"Year_of_Work\" in descending direction."
        },
        "50": {
            "condition": "When answering about \"names of conductors\", When the question mentions \"conductors\", When the question asks for \"descending order of years of work\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms."
        },
        "51": {
            "condition": "When answering about \"names of conductors\"",
            "operation": " make sure the output order: \"Name\" from table \"conductor\"."
        },
        "52": {
            "condition": "When the question mentions \"number of years they have worked\"",
            "operation": " \"years worked\" actually means \"Year_of_Work\" in schema."
        },
        "53": {
            "condition": "When the question asks for sorting \"descending by the number of years\"",
            "operation": " rank rows by \"Year_of_Work\" in descending direction."
        },
        "54": {
            "condition": "When answering about \"names of conductors\", When the question mentions \"number of years they have worked\", When the question asks for sorting \"descending by the number of years\", When selecting output columns",
            "operation": " include only \"Name\" and remove \"Year_of_Work\" from the final output."
        },
        "55": {
            "condition": "When answering about \"conductor with the most years of work\"",
            "operation": " make sure the output order: \"Name\" from table \"conductor\"."
        },
        "56": {
            "condition": "When the question mentions \"most years of work\"",
            "operation": " use column \"Year_of_Work\" for ordering in descending direction and keep only the first 1 row."
        },
        "57": {
            "condition": "When answering about \"conductor with the most years of work\", When the question mentions \"most years of work\", When choosing identifier delimiters",
            "operation": " use double quotes for column names exactly as shown in the schema (\"Name\", \"Year_of_Work\") and table name (\"conductor\")."
        },
        "58": {
            "condition": "When the question asks about conductors",
            "operation": " use the table \"conductor\" instead of \"conductors\"."
        },
        "59": {
            "condition": "When selecting the conductor's name",
            "operation": " use the column \"Name\" instead of \"name\"."
        },
        "60": {
            "condition": "When ordering by years worked",
            "operation": " use the column \"Year_of_Work\" instead of \"years_worked\" while maintaining descending order."
        },
        "61": {
            "condition": "When the question asks about conductors, When selecting the conductor's name, When ordering by years worked, When finding the conductor with the greatest number of years worked",
            "operation": " keep only the top result using LIMIT 1."
        },
        "62": {
            "condition": "When answering about \"names of conductors and the orchestras they have conducted\"",
            "operation": " make sure the output order: T1.Name, T2.Orchestra."
        },
        "63": {
            "condition": "When the question mentions \"conductors\"",
            "operation": " use table \"conductor\" with alias T1 and column \"Name\" for conductor names."
        },
        "64": {
            "condition": "When the question mentions \"orchestras\"",
            "operation": " use table \"orchestra\" with alias T2 and column \"Orchestra\" for orchestra names."
        },
        "65": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Conductor_ID = T2.Conductor_ID; keep only matching pairs (inner match)."
        },
        "66": {
            "condition": "When answering about \"names of conductors and the orchestras they have conducted\", When the question mentions \"conductors\", When the question mentions \"orchestras\", When combining T1 and T2 for shared entities, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for column names like \"Name\" and \"Orchestra\"."
        },
        "67": {
            "condition": "When answering about conductor names and their corresponding orchestras",
            "operation": " make sure the output order: T1.\"Name\", T2.\"Orchestra\""
        },
        "68": {
            "condition": "When combining conductor table as T1 and orchestra table as T2",
            "operation": " link rows where T1.\"Conductor_ID\" = T2.\"Conductor_ID\" exactly and keep only matching pairs (inner match)"
        },
        "69": {
            "condition": "When the question mentions \"names of conductors\"",
            "operation": " \"names of conductors\" actually means T1.\"Name\" in schema"
        },
        "70": {
            "condition": "When answering about conductor names and their corresponding orchestras, When combining conductor table as T1 and orchestra table as T2, When the question mentions \"names of conductors\", When the question mentions \"orchestras that they have conducted\"",
            "operation": " \"orchestras that they have conducted\" actually means T2.\"Orchestra\" in schema"
        },
        "71": {
            "condition": "When answering about \"conductors that have conducted more than one orchestras\"",
            "operation": " make sure the output order: T1.Name"
        },
        "72": {
            "condition": "When combining conductor table (T1) and orchestra table (T2) for shared entities",
            "operation": " link rows where T1.Conductor_ID = T2.Conductor_ID; keep only matching pairs (inner match)."
        },
        "73": {
            "condition": "When the question asks for conductors by orchestra count",
            "operation": " organize results by T2.Conductor_ID and compute COUNT(*) per group."
        },
        "74": {
            "condition": "When filtering for conductors with more than one orchestra",
            "operation": " apply the condition COUNT(*) > 1 in the grouping filter instead of using a direct column filter."
        },
        "75": {
            "condition": "When answering about \"conductors that have conducted more than one orchestras\", When combining conductor table (T1) and orchestra table (T2) for shared entities, When the question asks for conductors by orchestra count, When filtering for conductors with more than one orchestra, When selecting conductor names",
            "operation": " use qualified identifier T1.Name instead of unqualified name."
        },
        "76": {
            "condition": "When answering about \"names of conductors who have conducted at more than one orchestra\"",
            "operation": " make sure the output order: T1.Name."
        },
        "77": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Conductor_ID = T2.Conductor_ID exactly as shown; keep only matching pairs (inner match)."
        },
        "78": {
            "condition": "When the question asks for \"count of orchestra associations per conductor\"",
            "operation": " compute the number of orchestras using COUNT(*) grouped by T2.Conductor_ID."
        },
        "79": {
            "condition": "When filtering for conductors with more than one orchestra",
            "operation": " apply the condition COUNT(*) > 1 in the HAVING clause instead of WHERE."
        },
        "80": {
            "condition": "When answering about \"names of conductors who have conducted at more than one orchestra\", When combining T1 and T2 for shared entities, When the question asks for \"count of orchestra associations per conductor\", When filtering for conductors with more than one orchestra, When selecting conductor names",
            "operation": " use T1.Name with table alias qualification instead of unqualified name."
        },
        "81": {
            "condition": "When answering about \"conductor that has conducted the most number of orchestras\"",
            "operation": " make sure the output order: T1.Name only."
        },
        "82": {
            "condition": "When combining conductors table as T1 and orchestra table as T2",
            "operation": " link rows where T1.Conductor_ID = T2.Conductor_ID and keep only matching pairs (inner match)."
        },
        "83": {
            "condition": "When counting orchestras per conductor",
            "operation": " compute the number of rows using T2.Conductor_ID as the grouping key."
        },
        "84": {
            "condition": "When answering about \"conductor that has conducted the most number of orchestras\", When combining conductors table as T1 and orchestra table as T2, When counting orchestras per conductor, When the question asks for \"most number of orchestras\"",
            "operation": " rank rows by COUNT(*) in descending direction and keep the first 1 row."
        },
        "85": {
            "condition": "When answering about \"conductor who has conducted the most orchestras\"",
            "operation": " make sure the output order: T1.Name."
        },
        "86": {
            "condition": "When combining conductor and orchestra tables",
            "operation": " link rows where T1.Conductor_ID = T2.Conductor_ID exactly as shown; keep only matching pairs (inner match)."
        },
        "87": {
            "condition": "When the question asks for \"most orchestras\" per conductor",
            "operation": " organize results by T2.Conductor_ID and compute COUNT(*) per group."
        },
        "88": {
            "condition": "When the question mentions \"most\"",
            "operation": " rank rows by COUNT(*) in descending direction and keep the first 1 row."
        },
        "89": {
            "condition": "When answering about \"conductor who has conducted the most orchestras\", When combining conductor and orchestra tables, When the question asks for \"most orchestras\" per conductor, When the question mentions \"most\", When selecting the conductor name",
            "operation": " use T1.Name from the conductor table instead of name from a single table."
        },
        "90": {
            "condition": "When answering about conductors and orchestras founded after 2008",
            "operation": " make sure to join conductors table (T1) with orchestra table (T2) using T1.Conductor_ID = T2.Conductor_ID to link conductors to their orchestras."
        },
        "91": {
            "condition": "When filtering for orchestras founded after 2008",
            "operation": " use T2.Year_of_Founded > 2008 instead of orchestra_founded since the founding year is in the orchestra table."
        },
        "92": {
            "condition": "When answering about conductors and orchestras founded after 2008, When filtering for orchestras founded after 2008, When selecting conductor names",
            "operation": " use T1.Name with table alias qualification instead of unqualified name."
        },
        "93": {
            "condition": "When answering about \"conductors who have conducted orchestras founded after the year 2008\"",
            "operation": " make sure the output order: T1.Name."
        },
        "94": {
            "condition": "When combining T1 (conductors) and T2 (orchestra) for shared entities",
            "operation": " link rows where T1.Conductor_ID = T2.Conductor_ID exactly as shown; keep only matching pairs (inner match)."
        },
        "95": {
            "condition": "When filtering orchestras by foundation year",
            "operation": " use T2.Year_of_Founded > 2008 instead of orchestra_founded_year > 2008."
        },
        "96": {
            "condition": "When answering about \"conductors who have conducted orchestras founded after the year 2008\", When combining T1 (conductors) and T2 (orchestra) for shared entities, When filtering orchestras by foundation year, When selecting conductor names",
            "operation": " use T1.Name with table alias qualification instead of unqualified name."
        },
        "97": {
            "condition": "When the question asks about \"record companies\" and \"number of orchestras\"",
            "operation": " use the exact column token \"Record_Company\" from the orchestra table."
        },
        "98": {
            "condition": "When counting orchestras per record company",
            "operation": " group by \"Record_Company\" and count using the canonical key for orchestras."
        },
        "99": {
            "condition": "When producing output",
            "operation": " show \"Record_Company\" first followed by the count of orchestras."
        },
        "100": {
            "condition": "When the question asks about \"record companies\" and \"number of orchestras\", When counting orchestras per record company, When producing output, When referring to the table",
            "operation": " use the exact table name \"orchestra\" (not \"orchestras\")."
        },
        "101": {
            "condition": "When the question mentions \"orchestras\"",
            "operation": " use the exact table name \"orchestra\" instead."
        },
        "102": {
            "condition": "When the question mentions \"record company\"",
            "operation": " use the exact column name \"Record_Company\" with proper capitalization."
        },
        "103": {
            "condition": "When the question mentions \"orchestras\", When the question mentions \"record company\", When counting orchestras per record company",
            "operation": " count all rows using COUNT(*) aggregation and group by the exact column \"Record_Company\"."
        },
        "104": {
            "condition": "When answering about \"record formats of orchestras\"",
            "operation": " make sure the output order: \"Major_Record_Format\" first, then the count."
        },
        "105": {
            "condition": "When the question mentions \"record formats\"",
            "operation": " \"record formats\" actually means \"Major_Record_Format\" in schema."
        },
        "106": {
            "condition": "When the question asks for \"count\"",
            "operation": " compute the number of rows using COUNT(*) without an alias."
        },
        "107": {
            "condition": "When the question says \"per record format\"/\"by record format\"",
            "operation": " organize results by \"Major_Record_Format\" and compute the count per group."
        },
        "108": {
            "condition": "When the question asks for \"ascending order of count\"",
            "operation": " order the results by COUNT(*) in ascending direction."
        },
        "109": {
            "condition": "When answering about \"record formats of orchestras\", When the question mentions \"record formats\", When the question asks for \"count\", When the question says \"per record format\"/\"by record format\", When the question asks for \"ascending order of count\", When choosing table names",
            "operation": " use table \"orchestra\" instead of \"orchestras\"."
        },
        "110": {
            "condition": "When answering about \"record formats of orchestras in ascending order of count\"",
            "operation": " make sure the output order: Major_Record_Format only without including the count value in the results."
        },
        "111": {
            "condition": "When ordering by count in ascending order",
            "operation": " explicitly specify ASC direction in the ordering clause."
        },
        "112": {
            "condition": "When answering about \"record formats of orchestras in ascending order of count\", When ordering by count in ascending order, When grouping by Major_Record_Format",
            "operation": " organize results by Major_Record_Format and compute counts per group for ordering purposes only, not for display in the output."
        },
        "113": {
            "condition": "When the question mentions \"major record formats\"",
            "operation": " use the exact column name \"Major_Record_Format\" from the orchestra table."
        },
        "114": {
            "condition": "When counting entities in the orchestra table",
            "operation": " count using the canonical key (implicit count of rows) rather than specifying an explicit count column."
        },
        "115": {
            "condition": "When the question asks for sorting by frequency",
            "operation": " order the results by the count in ascending direction (ASC) rather than descending."
        },
        "116": {
            "condition": "When the question mentions \"major record formats\", When counting entities in the orchestra table, When the question asks for sorting by frequency, When producing output",
            "operation": " include only the Major_Record_Format column in the results, not the count values themselves."
        },
        "117": {
            "condition": "When answering about \"major record formats of orchestras sorted by frequency\"",
            "operation": " make sure the output order: Major_Record_Format only without count values."
        },
        "118": {
            "condition": "When the question asks for sorting by frequency",
            "operation": " order the results by the count of orchestras in descending frequency order."
        },
        "119": {
            "condition": "When grouping by Major_Record_Format",
            "operation": " organize results by Major_Record_Format and compute the count per group."
        },
        "120": {
            "condition": "When answering about \"major record formats of orchestras sorted by frequency\", When the question asks for sorting by frequency, When grouping by Major_Record_Format, When producing output",
            "operation": " do not include the count column in the final results, only show the Major_Record_Format values."
        },
        "121": {
            "condition": "When answering about \"record company shared by the most number of orchestras\"",
            "operation": " make sure the output order: Record_Company only"
        },
        "122": {
            "condition": "When the question mentions \"orchestras\"",
            "operation": " \"orchestras\" actually means \"orchestra in schema\""
        },
        "123": {
            "condition": "When the question asks for \"most number of orchestras\" per record company",
            "operation": " organize results by Record_Company and compute count of orchestras per group, then rank groups by count in descending order and keep the first 1 row"
        },
        "124": {
            "condition": "When counting orchestras",
            "operation": " compute the number of rows using the table orchestra"
        },
        "125": {
            "condition": "When answering about \"record company shared by the most number of orchestras\", When the question mentions \"orchestras\", When the question asks for \"most number of orchestras\" per record company, When counting orchestras, When ordering by count",
            "operation": " order by COUNT(*) DESC directly instead of using an alias"
        },
        "126": {
            "condition": "When the question asks about \"record company used by the greatest number of orchestras\"",
            "operation": " use the exact column token \"Record_Company\" from table \"orchestra\" instead of lowercase \"record_company\"."
        },
        "127": {
            "condition": "When counting orchestras per record company",
            "operation": " compute the count using all rows (COUNT(*)) but do not include the count in the output columns."
        },
        "128": {
            "condition": "When finding the record company with the greatest number of orchestras",
            "operation": " order the results by the orchestra count in descending order and keep only the top result."
        },
        "129": {
            "condition": "When the question asks about \"record company used by the greatest number of orchestras\", When counting orchestras per record company, When finding the record company with the greatest number of orchestras, When referring to the table containing orchestras",
            "operation": " use the exact table name \"orchestra\" instead of \"orchestras\"."
        },
        "130": {
            "condition": "When the question asks for orchestra names",
            "operation": " use the exact column name \"Orchestra\" from the \"orchestra\" table."
        },
        "131": {
            "condition": "When identifying orchestras without performances",
            "operation": " use a NOT IN subquery that checks for Orchestra_ID values that exist in the performance table rather than checking for NULL values."
        },
        "132": {
            "condition": "When referencing the orchestra table",
            "operation": " use the exact table name \"orchestra\" instead of \"orchestras\"."
        },
        "133": {
            "condition": "When the question asks for orchestra names, When identifying orchestras without performances, When referencing the orchestra table, When combining orchestra and performance tables",
            "operation": " use Orchestra_ID as the linking key between the tables."
        },
        "134": {
            "condition": "When answering about orchestras without performances",
            "operation": " select \"Orchestra\" from table \"orchestra\" (T1) instead of \"name\" from \"orchestras\"."
        },
        "135": {
            "condition": "When checking for orchestras without performances",
            "operation": " use a NOT IN subquery that checks for \"Orchestra_ID\" values that exist in the \"performance\" table instead of checking for NULL values."
        },
        "136": {
            "condition": "When answering about orchestras without performances, When checking for orchestras without performances, When implementing exclusion logic",
            "operation": " use a correlated subquery approach to identify orchestras whose \"Orchestra_ID\" values are not present in the \"performance\" table."
        },
        "137": {
            "condition": "When the question asks for record companies shared by orchestras from different founding periods",
            "operation": " use INTERSECT to find common values between the two groups instead of contradictory WHERE conditions."
        },
        "138": {
            "condition": "When referencing the founding year column",
            "operation": " use the exact column name \"Year_of_Founded\" instead of \"year_founded\"."
        },
        "139": {
            "condition": "When selecting record companies",
            "operation": " use the exact column name \"Record_Company\" without table prefix."
        },
        "140": {
            "condition": "When finding orchestras founded before 2003",
            "operation": " select records where \"Year_of_Founded\" < 2003."
        },
        "141": {
            "condition": "When finding orchestras founded after 2003",
            "operation": " select records where \"Year_of_Founded\" > 2003."
        },
        "142": {
            "condition": "When the question asks for record companies shared by orchestras from different founding periods, When referencing the founding year column, When selecting record companies, When finding orchestras founded before 2003, When finding orchestras founded after 2003, When combining results from both time periods",
            "operation": " use INTERSECT to find record companies that appear in both the before-2003 and after-2003 groups."
        },
        "143": {
            "condition": "When the question asks for record companies used by both orchestras founded before 2003 and after 2003",
            "operation": " use INTERSECT to find common values between two sets instead of a self-join with DISTINCT."
        },
        "144": {
            "condition": "When referencing the founding year column",
            "operation": " use the exact column name \"Year_of_Founded\" instead of \"founded_year\"."
        },
        "145": {
            "condition": "When filtering orchestras by founding year",
            "operation": " apply separate conditions in each branch of the INTERSECT operation instead of combining them in a single WHERE clause."
        },
        "146": {
            "condition": "When selecting from the orchestra table",
            "operation": " use the exact table name \"orchestra\" instead of \"orchestras\"."
        },
        "147": {
            "condition": "When the question asks for record companies used by both orchestras founded before 2003 and after 2003, When referencing the founding year column, When filtering orchestras by founding year, When selecting from the orchestra table, When constructing the query",
            "operation": " do not use table aliases o1 and o2, instead select from the same table twice with different filters."
        },
        "148": {
            "condition": "When the question mentions \"orchestras\"",
            "operation": " use the exact table name \"orchestra\" instead."
        },
        "149": {
            "condition": "When the question mentions \"record format\"",
            "operation": " use the exact column name \"Major_Record_Format\" instead."
        },
        "150": {
            "condition": "When the question asks for records where format is \"CD\" or \"DVD\"",
            "operation": " use OR condition between \"Major_Record_Format = \\\"CD\\\"\" and \"Major_Record_Format = \\\"DVD\\\"\" instead of AND."
        },
        "151": {
            "condition": "When using string literals \"CD\" and \"DVD\"",
            "operation": " wrap them in double quotes exactly as shown in the schema."
        },
        "152": {
            "condition": "When the question mentions \"orchestras\", When the question mentions \"record format\", When the question asks for records where format is \"CD\" or \"DVD\", When using string literals \"CD\" and \"DVD\", When counting orchestras",
            "operation": " count the number of rows in table \"orchestra\" where the condition is satisfied."
        },
        "153": {
            "condition": "When the question mentions \"orchestras\"",
            "operation": " use table \"orchestra\" instead of \"orchestras\"."
        },
        "154": {
            "condition": "When the question asks about \"record format\"",
            "operation": " use column \"Major_Record_Format\" instead of \"record_format\"."
        },
        "155": {
            "condition": "When comparing string literals \"CD\" or \"DVD\"",
            "operation": " use double quotes \"CD\" and \"DVD\" instead of single quotes."
        },
        "156": {
            "condition": "When the question mentions \"orchestras\", When the question asks about \"record format\", When comparing string literals \"CD\" or \"DVD\", When counting orchestras with CD or DVD format",
            "operation": " count rows where \"Major_Record_Format\" equals \"CD\" OR \"Major_Record_Format\" equals \"DVD\"."
        },
        "157": {
            "condition": "When the question asks about \"years\" for orchestras",
            "operation": " use the exact column name \"Year_of_Founded\" from the orchestra table."
        },
        "158": {
            "condition": "When counting performances per orchestra",
            "operation": " join table \"orchestra\" (as T1) with table \"performance\" (as T2) using the exact condition T1.Orchestra_ID = T2.Orchestra_ID."
        },
        "159": {
            "condition": "When grouping by orchestra",
            "operation": " use T2.Orchestra_ID as the grouping key."
        },
        "160": {
            "condition": "When filtering for orchestras with more than one performance",
            "operation": " apply the condition COUNT(*) > 1 after grouping (not before)."
        },
        "161": {
            "condition": "When the question asks about \"years\" for orchestras, When counting performances per orchestra, When grouping by orchestra, When filtering for orchestras with more than one performance, When answering about orchestras that have given more than one performance",
            "operation": " ensure the output includes only Year_of_Founded values for orchestras meeting the performance count condition."
        },
        "162": {
            "condition": "When answering about \"years of founding for orchestras that have had more than a single performance\"",
            "operation": " make sure the output order: T1.Year_of_Founded."
        },
        "163": {
            "condition": "When the question mentions \"orchestras that have had more than a single performance\"",
            "operation": " join table \"orchestra AS T1\" with table \"performance AS T2\" using the condition T1.Orchestra_ID = T2.Orchestra_ID and keep only matching pairs (inner match)."
        },
        "164": {
            "condition": "When counting performances per orchestra",
            "operation": " group by T2.Orchestra_ID and count the number of rows using the canonical key."
        },
        "165": {
            "condition": "When filtering for orchestras with more than one performance",
            "operation": " apply the condition COUNT(*) > 1 after grouping."
        },
        "166": {
            "condition": "When answering about \"years of founding for orchestras that have had more than a single performance\", When the question mentions \"orchestras that have had more than a single performance\", When counting performances per orchestra, When filtering for orchestras with more than one performance, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for column names like Year_of_Founded."
        }
    },
    "network_1": {
        "0": {
            "condition": "When answering about \"how many high schoolers\"",
            "operation": " use the \"Highschooler\" table to count all records."
        },
        "1": {
            "condition": "When counting entities from the Highschooler table",
            "operation": " count using all records from that table without filtering by grade level."
        },
        "2": {
            "condition": "When answering about \"how many high schoolers\", When counting entities from the Highschooler table, When the question asks for count of high schoolers",
            "operation": " the correct table structure uses a dedicated \"Highschooler\" table rather than filtering a general \"students\" table by grade level."
        },
        "3": {
            "condition": "When counting entities from the database",
            "operation": " use the exact table name \"Highschooler\" instead of any other table reference like \"students\"."
        },
        "4": {
            "condition": "When performing count aggregation",
            "operation": " use the exact function name \"count(*)\" with lowercase 'c' to match the required function casing."
        },
        "5": {
            "condition": "When counting entities from the database, When performing count aggregation, When filtering by grade level",
            "operation": " use the exact column name \"grade_level\" and the exact literal value 'high school' with the specified case and spacing."
        },
        "6": {
            "condition": "When the question asks for high schooler information",
            "operation": " use the exact table name \"Highschooler\" instead of \"high_schoolers\"."
        },
        "7": {
            "condition": "When selecting columns for high schoolers",
            "operation": " include both \"name\" and \"grade\" columns in the output."
        },
        "8": {
            "condition": "When the question asks for high schooler information, When selecting columns for high schoolers, When filtering high schoolers by grade",
            "operation": " do not apply any grade restrictions since the question asks for all high schoolers regardless of grade level."
        },
        "9": {
            "condition": "When the question asks about high schoolers",
            "operation": " use the exact table name \"Highschooler\" instead of \"high_schoolers\"."
        },
        "10": {
            "condition": "When the question asks about high schoolers, When selecting from the Highschooler table",
            "operation": " include all rows without filtering by grade, as the question asks for each high schooler without grade restrictions."
        },
        "11": {
            "condition": "When the question asks to show grades of high schoolers",
            "operation": " select only the \"grade\" column from the \"Highschooler\" table."
        },
        "12": {
            "condition": "When referring to the table containing high schooler information",
            "operation": " use the exact table name \"Highschooler\" (not \"high_schoolers\")."
        },
        "13": {
            "condition": "When the question asks to show grades of high schoolers, When referring to the table containing high schooler information, When selecting specific columns instead of all columns",
            "operation": " explicitly list the required column \"grade\" rather than using the wildcard *."
        },
        "14": {
            "condition": "When answering about \"grade of each high schooler\"",
            "operation": " make sure the output order: grade."
        },
        "15": {
            "condition": "When the question mentions \"high schooler\"",
            "operation": " \"high schooler\" actually means \"Highschooler\" in schema."
        },
        "16": {
            "condition": "When answering about \"grade of each high schooler\", When the question mentions \"high schooler\", When selecting from the Highschooler table",
            "operation": " do not apply any filtering conditions unless explicitly specified in the question."
        },
        "17": {
            "condition": "When answering about student grades",
            "operation": " use the \"Highschooler\" table instead of any other table."
        },
        "18": {
            "condition": "When filtering for a student named Kyle",
            "operation": " use the exact string literal \"Kyle\" with double quotes in the filter condition."
        },
        "19": {
            "condition": "When answering about student grades, When filtering for a student named Kyle, When selecting grade information",
            "operation": " retrieve the grade column from the Highschooler table for matching students."
        },
        "20": {
            "condition": "When answering about \"high schoolers\"",
            "operation": " use the exact table name \"Highschooler\" as shown in the schema."
        },
        "21": {
            "condition": "When filtering by grade 10",
            "operation": " use the exact literal value 10 (not"
        },
        "22": {
            "condition": "for the grade column.",
            "operation": "for the grade column."
        },
        "23": {
            "condition": "When answering about \"high schoolers\", When filtering by grade 10, for the grade column., When selecting names",
            "operation": " output the \"name\" column from the Highschooler table."
        },
        "24": {
            "condition": "When answering about high schoolers in grade 10",
            "operation": " use the \"Highschooler\" table instead of the \"students\" table."
        },
        "25": {
            "condition": "When filtering for grade 10",
            "operation": " use the condition grade = 10."
        },
        "26": {
            "condition": "When answering about high schoolers in grade 10, When filtering for grade 10, When the question asks for high schoolers",
            "operation": " do not apply any school_type filter, especially not school_type = 'college'."
        },
        "27": {
            "condition": "When answering about \"Kyle's id\"",
            "operation": " make sure the output order: \"ID\" from table \"Highschooler\"."
        },
        "28": {
            "condition": "When the question mentions \"id\"",
            "operation": " \"id\" actually means \"ID\" in schema."
        },
        "29": {
            "condition": "When the question mentions \"Kyle\"",
            "operation": " use the exact string literal \"Kyle\" with double quotes."
        },
        "30": {
            "condition": "When answering about \"Kyle's id\", When the question mentions \"id\", When the question mentions \"Kyle\", When filtering for a specific name",
            "operation": " match rows where the name equals \"Kyle\" exactly."
        },
        "31": {
            "condition": "When the question asks about high schoolers",
            "operation": " use the exact table name \"Highschooler\" instead of \"high_schoolers\"."
        },
        "32": {
            "condition": "When the question asks about high schoolers, When counting high schoolers in grades 9 or 10",
            "operation": " count rows where the grade column equals 9 or equals 10."
        },
        "33": {
            "condition": "When the question asks about \"high schoolers\"",
            "operation": " use the exact table name \"Highschooler\" with the correct case and spelling."
        },
        "34": {
            "condition": "When counting entities from the Highschooler table",
            "operation": " count using the canonical key for high schoolers (typically a primary key column, though not explicitly specified in this schema)."
        },
        "35": {
            "condition": "When the question asks about \"high schoolers\", When counting entities from the Highschooler table, When filtering for grades 9 or 10",
            "operation": " use the exact numeric values 9 and 10 without quotes since grade appears to be a numeric field."
        },
        "36": {
            "condition": "When answering about \"number of high schoolers for each grade\"",
            "operation": " make sure the output order: grade, count of students."
        },
        "37": {
            "condition": "When the question mentions \"high schoolers\"",
            "operation": " \"high schoolers\" actually means \"Highschooler\" in schema."
        },
        "38": {
            "condition": "When the question asks for \"count of high schoolers per grade\"",
            "operation": " compute the number of rows using the canonical key for students from the Highschooler table, grouped by grade."
        },
        "39": {
            "condition": "When grouping by grade",
            "operation": " organize results by the exact token \"grade\" from the Highschooler table."
        },
        "40": {
            "condition": "When answering about \"number of high schoolers for each grade\", When the question mentions \"high schoolers\", When the question asks for \"count of high schoolers per grade\", When grouping by grade, When producing output",
            "operation": " do not include unnecessary ordering clauses since grouping by grade already provides the desired ordering."
        },
        "41": {
            "condition": "When answering about \"high schoolers in each grade\"",
            "operation": " use the \"Highschooler\" table instead of any other student table."
        },
        "42": {
            "condition": "When the table name already implies the context (like \"Highschooler\")",
            "operation": " do not add redundant filtering conditions like WHERE school_level = 'high school'."
        },
        "43": {
            "condition": "When grouping results by grade",
            "operation": " do not add ORDER BY grade as the grouping inherently organizes results."
        },
        "44": {
            "condition": "When answering about \"high schoolers in each grade\", When the table name already implies the context (like \"Highschooler\"), When grouping results by grade, When counting high schoolers per grade",
            "operation": " maintain the structure SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade."
        },
        "45": {
            "condition": "When answering about \"which grade has the most high schoolers\"",
            "operation": " use the table \"Highschooler\" instead of \"students\" since the table name implies the context."
        },
        "46": {
            "condition": "When counting high school students per grade",
            "operation": " use count(*) directly without an explicit column alias in the output."
        },
        "47": {
            "condition": "When ordering results by count",
            "operation": " use count(*) directly in the order by clause instead of referencing an alias."
        },
        "48": {
            "condition": "When answering about \"which grade has the most high schoolers\", When counting high school students per grade, When ordering results by count, When the question asks for \"the most\"",
            "operation": " rank rows by count(*) in descending order and keep only the first row."
        },
        "49": {
            "condition": "When answering about \"which grade has the most high schoolers\"",
            "operation": " make sure the output order: grade only without the count value."
        },
        "50": {
            "condition": "When the question asks for the grade with the highest count",
            "operation": " rank rows by count of high schoolers in descending order and keep the first 1 row."
        },
        "51": {
            "condition": "When the question says \"per grade\"/\"by grade\"",
            "operation": " organize results by grade and compute the count of high schoolers per group."
        },
        "52": {
            "condition": "When answering about \"which grade has the most high schoolers\", When the question asks for the grade with the highest count, When the question says \"per grade\"/\"by grade\", When counting high schoolers",
            "operation": " use the canonical counting method for entities in the database (typically counting rows or a primary key)."
        },
        "53": {
            "condition": "When answering about \"the grade that has the greatest number of high schoolers\"",
            "operation": " organize results by the token for grade and compute the count of students per group."
        },
        "54": {
            "condition": "When counting students",
            "operation": " compute the number of rows using the canonical counting method (COUNT(*))."
        },
        "55": {
            "condition": "When the question mentions \"greatest number\" or \"highest count\"",
            "operation": " rank rows by the count in descending order and keep only the first row (top result)."
        },
        "56": {
            "condition": "When answering about \"the grade that has the greatest number of high schoolers\", When counting students, When the question mentions \"greatest number\" or \"highest count\", When producing output",
            "operation": " make sure the output order includes only the grade column."
        },
        "57": {
            "condition": "When answering about \"grades that have at least 4 students\"",
            "operation": " use the \"Highschooler\" table instead of \"students\" table."
        },
        "58": {
            "condition": "When filtering groups based on aggregate conditions",
            "operation": " use HAVING count(*) >= 4 instead of WHERE student_count >= 4."
        },
        "59": {
            "condition": "When the question asks for \"all grades\" with a condition",
            "operation": " only include the \"grade\" column in the output, not the count column."
        },
        "60": {
            "condition": "When answering about \"grades that have at least 4 students\", When filtering groups based on aggregate conditions, When the question asks for \"all grades\" with a condition, When grouping by \"grade\"",
            "operation": " organize results by the \"grade\" column and compute the count of students per group."
        },
        "61": {
            "condition": "When answering about \"which grades have 4 or more high schoolers\"",
            "operation": " make sure the output order: grade."
        },
        "62": {
            "condition": "When the question mentions \"high schoolers\"",
            "operation": " \"high schoolers\" actually means \"records in the Highschooler table\"."
        },
        "63": {
            "condition": "When counting students",
            "operation": " use count(*) to count all rows in the Highschooler table."
        },
        "64": {
            "condition": "When grouping by grade",
            "operation": " organize results by the grade column from the Highschooler table."
        },
        "65": {
            "condition": "When filtering for grades with 4 or more students",
            "operation": " keep only groups where count(*) >= 4."
        },
        "66": {
            "condition": "When answering about \"which grades have 4 or more high schoolers\", When the question mentions \"high schoolers\", When counting students, When grouping by grade, When filtering for grades with 4 or more students, When handling the grade column",
            "operation": " use the exact column name grade without any WHERE filtering conditions."
        },
        "67": {
            "condition": "When referencing the table containing friend relationships",
            "operation": " use the exact table name \"Friend\" instead of \"friends\" to match the schema definition."
        },
        "68": {
            "condition": "When the question asks about \"friends\"",
            "operation": " use the exact table name \"Friend\" instead of \"friends\" to reference the correct table."
        },
        "69": {
            "condition": "When the question asks about \"friends\", When counting friends per student",
            "operation": " compute the number of rows using the canonical key \"student_id\" and group by \"student_id\" to get counts for each student."
        },
        "70": {
            "condition": "When the question asks for \"high school students\"",
            "operation": " use the \"Highschooler\" table (aliased as T2) to get student information."
        },
        "71": {
            "condition": "When combining Friend and Highschooler tables",
            "operation": " link rows where T1.student_id = T2.id and keep only matching pairs (inner match)."
        },
        "72": {
            "condition": "When counting \"number of friends\"",
            "operation": " count all rows per student using T1.student_id as the grouping key."
        },
        "73": {
            "condition": "When selecting output columns",
            "operation": " include T2.name and the count of friends, maintaining this exact output order."
        },
        "74": {
            "condition": "When the question asks for \"high school students\", When combining Friend and Highschooler tables, When counting \"number of friends\", When selecting output columns, When grouping for aggregation",
            "operation": " group by T1.student_id to ensure proper counting of friends per student."
        },
        "75": {
            "condition": "When answering about \"names of high schoolers and how many friends each has\"",
            "operation": " make sure the output order: T2.name, COUNT(*)"
        },
        "76": {
            "condition": "When the question mentions \"high schoolers\"",
            "operation": " \"high schoolers\" actually means \"T2.name in schema\" from the Highschooler table"
        },
        "77": {
            "condition": "When combining Friend as T1 and Highschooler as T2 for shared entities",
            "operation": " link rows where T1.student_id = T2.id exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "78": {
            "condition": "When the question asks for \"how many friends does each have\"",
            "operation": " compute the number of rows using T1.student_id as the grouping key to ensure proper count aggregation per student"
        },
        "79": {
            "condition": "When answering about \"names of high schoolers and how many friends each has\", When the question mentions \"high schoolers\", When combining Friend as T1 and Highschooler as T2 for shared entities, When the question asks for \"how many friends does each have\", When producing output",
            "operation": " do not reorder columns beyond T2.name followed by the count of friends"
        },
        "80": {
            "condition": "When answering about \"the high schooler who has the greatest number of friends\"",
            "operation": " make sure the output order: T2.name."
        },
        "81": {
            "condition": "When the question mentions \"high schooler\"",
            "operation": " \"high schooler\" actually means \"T2.name in schema\"."
        },
        "82": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.student_id = T2.id exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "83": {
            "condition": "When the question asks for \"count of friends\"",
            "operation": " compute the number of rows using the canonical key token for friends (e.g., T1.student_id)."
        },
        "84": {
            "condition": "When the question says \"per student\"/\"by student\"",
            "operation": " organize results by T1.student_id and compute requested aggregates per group."
        },
        "85": {
            "condition": "When answering about \"the high schooler who has the greatest number of friends\", When the question mentions \"high schooler\", When combining T1 and T2 for shared entities, When the question asks for \"count of friends\", When the question says \"per student\"/\"by student\", When the question mentions \"greatest number\" or \"top\"",
            "operation": " rank rows by count of friends in descending direction and keep the first 1 row."
        },
        "86": {
            "condition": "When answering about \"high school student with the most friends\"",
            "operation": " make sure the output order: T2.name."
        },
        "87": {
            "condition": "When the question mentions \"high school student\"",
            "operation": " \"high school student\" actually means \"T2.name in Highschooler table\"."
        },
        "88": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.student_id = T2.id exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "89": {
            "condition": "When the question asks for \"count of friends\"",
            "operation": " compute the number of rows using the canonical key token T1.student_id."
        },
        "90": {
            "condition": "When answering about \"high school student with the most friends\", When the question mentions \"high school student\", When combining T1 and T2 for shared entities, When the question asks for \"count of friends\", When the question mentions \"most friends\" or \"highest\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row."
        },
        "91": {
            "condition": "When joining tables Friend and Highschooler",
            "operation": " use T1.student_id = T2.id as the join condition to match rows between tables."
        },
        "92": {
            "condition": "When counting friends per student",
            "operation": " group by T1.student_id and count the number of friend relationships where count is at least 3."
        },
        "93": {
            "condition": "When selecting student names",
            "operation": " retrieve T2.name from the Highschooler table after joining with Friend table."
        },
        "94": {
            "condition": "When joining tables Friend and Highschooler, When counting friends per student, When selecting student names, When organizing results",
            "operation": " ensure only students with at least 3 friends are included in the final output."
        },
        "95": {
            "condition": "When the question asks about high schoolers with friends",
            "operation": " combine the Highschooler table (as T2) and Friend table (as T1) by linking rows where T1.student_id equals T2.id, keeping only matching pairs."
        },
        "96": {
            "condition": "When counting friends per student",
            "operation": " group the results by T1.student_id and count the number of friend records for each student."
        },
        "97": {
            "condition": "When filtering for students with 3 or more friends",
            "operation": " only keep groups where the count of friend records is greater than or equal to 3."
        },
        "98": {
            "condition": "When the question asks about high schoolers with friends, When counting friends per student, When filtering for students with 3 or more friends, When selecting student names",
            "operation": " output T2.name from the joined Highschooler table rather than from the original table directly."
        },
        "99": {
            "condition": "When answering about \"friends of the high school student Kyle\"",
            "operation": " make sure the output order: T3.name."
        },
        "100": {
            "condition": "When the question mentions \"Kyle\"",
            "operation": " \"Kyle\" actually means T2.name = 'Kyle' in schema."
        },
        "101": {
            "condition": "When combining tables for shared entities",
            "operation": " link rows where T1.student_id = T2.id and T1.friend_id = T3.id; keep only matching pairs (inner match)."
        },
        "102": {
            "condition": "When answering about \"friends of the high school student Kyle\", When the question mentions \"Kyle\", When combining tables for shared entities, When choosing identifier delimiters",
            "operation": " do not replace explicit table aliases T3.name with ambiguous name."
        },
        "103": {
            "condition": "When answering about \"how many friends does the high school student Kyle have\"",
            "operation": " make sure the output order: COUNT of friends."
        },
        "104": {
            "condition": "When the question mentions \"Kyle\"",
            "operation": " \"Kyle\" actually means \"T2.name = 'Kyle'\" in schema."
        },
        "105": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.student_id = T2.id exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "106": {
            "condition": "When the question asks for \"count of friends\"",
            "operation": " compute the number of rows using the canonical key token for friends relationships."
        },
        "107": {
            "condition": "When answering about \"how many friends does the high school student Kyle have\", When the question mentions \"Kyle\", When combining T1 and T2 for shared entities, When the question asks for \"count of friends\", When the question mentions \"high school student\"",
            "operation": " this context is inherently provided by joining the Highschooler table (T2) and does not require an explicit school_level filter."
        },
        "108": {
            "condition": "When answering about \"number of friends Kyle has\"",
            "operation": " make sure the output order: count of friends."
        },
        "109": {
            "condition": "When the question mentions \"friends\"",
            "operation": " \"friends\" actually means \"rows in the Friend table (T1)\"."
        },
        "110": {
            "condition": "When the question mentions \"Kyle\"",
            "operation": " \"Kyle\" actually means \"T2.name = 'Kyle'\" in the Highschooler table."
        },
        "111": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.student_id = T2.id exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "112": {
            "condition": "When answering about \"number of friends Kyle has\", When the question mentions \"friends\", When the question mentions \"Kyle\", When combining T1 and T2 for shared entities, When the question asks for \"count of friends\"",
            "operation": " compute the number of rows using the canonical key token for friends (T1.student_id)."
        },
        "113": {
            "condition": "When answering about \"students who do not have any friends\"",
            "operation": " use table \"Highschooler\" instead of \"students\" and table \"Friend\" instead of \"friends\"."
        },
        "114": {
            "condition": "When finding IDs that are not present in another table",
            "operation": " use EXCEPT set operation instead of NOT IN with a subquery."
        },
        "115": {
            "condition": "When selecting IDs from Highschooler that are not in Friend",
            "operation": " remove the WHERE clause entirely and use set-based exclusion."
        },
        "116": {
            "condition": "When answering about \"students who do not have any friends\", When finding IDs that are not present in another table, When selecting IDs from Highschooler that are not in Friend, When referencing the student identifier",
            "operation": " use the exact column \"ID\" from table \"Highschooler\" as the canonical key."
        },
        "117": {
            "condition": "When selecting student identifiers",
            "operation": " use exact column name \"id\" instead of \"ID\" to match the correct case-sensitive column name in the Highschooler table."
        },
        "118": {
            "condition": "When finding students without friends",
            "operation": " exclude only students who appear as \"student_id\" in the Friend table, not those who appear as \"friend_id\"."
        },
        "119": {
            "condition": "When selecting student identifiers, When finding students without friends, When the question asks for students who do not have any friends",
            "operation": " identify students who are completely absent from the Friend table's student_id column rather than considering both student_id and friend_id roles."
        },
        "120": {
            "condition": "When answering about \"high school students who do not have friends\"",
            "operation": " use the table \"Highschooler\" instead of \"high_school_students\"."
        },
        "121": {
            "condition": "When identifying students with no friends",
            "operation": " use a set operation to exclude student_id values that appear in the \"Friend\" table rather than checking for zero friend counts."
        },
        "122": {
            "condition": "When combining data from multiple tables",
            "operation": " remove any WHERE clause that filters for zero friendships and instead use the set difference approach."
        },
        "123": {
            "condition": "When answering about \"high school students who do not have friends\", When identifying students with no friends, When combining data from multiple tables, When referring to student identifiers",
            "operation": " use \"student_id\" as the exact column name for identification purposes."
        },
        "124": {
            "condition": "When answering about \"high school students who do not have any friends\"",
            "operation": " use the table \"Highschooler\" as the main data source instead of \"students\"."
        },
        "125": {
            "condition": "When checking for students without friends",
            "operation": " use an EXCEPT set operation to remove students who have friends rather than filtering with friend_count = 0."
        },
        "126": {
            "condition": "When identifying high school students",
            "operation": " do not filter by grade condition since the question asks for all high school students."
        },
        "127": {
            "condition": "When checking friendship relationships",
            "operation": " join the Friend table with Highschooler using the condition T1.student_id = T2.id to identify students who have friends."
        },
        "128": {
            "condition": "When answering about \"high school students who do not have any friends\", When checking for students without friends, When identifying high school students, When checking friendship relationships, When producing output",
            "operation": " return only the name column from Highschooler for students who remain after excluding those with friends."
        },
        "129": {
            "condition": "When the question asks for students with no friends",
            "operation": " use an EXCEPT operation to find students who are not present in the Friend relationship table instead of filtering on a friend_count column."
        },
        "130": {
            "condition": "When combining Highschooler and Friend tables",
            "operation": " link rows where T1.student_id = T2.id to identify friendship relationships."
        },
        "131": {
            "condition": "When referencing student information",
            "operation": " use the Highschooler table instead of a non-existent students table."
        },
        "132": {
            "condition": "When the question asks for students with no friends, When combining Highschooler and Friend tables, When referencing student information, When identifying students without friends",
            "operation": " exclude those who appear in the Friend table rather than relying on a potentially missing or incorrect friend_count column."
        },
        "133": {
            "condition": "When answering about \"students who have no friends\"",
            "operation": " make sure the output order: T2.name"
        },
        "134": {
            "condition": "When combining Friend table as T1 and Highschooler table as T2",
            "operation": " link rows where T1.student_id = T2.id and keep only matching pairs (inner match)"
        },
        "135": {
            "condition": "When identifying students with no friends",
            "operation": " exclude students who appear in either T1.student_id or T1.friend_id from the Friend table using EXCEPT operation"
        },
        "136": {
            "condition": "When answering about \"students who have no friends\", When combining Friend table as T1 and Highschooler table as T2, When identifying students with no friends, When selecting student names",
            "operation": " reference T2.name from the joined Highschooler table instead of directly from the main table"
        },
        "137": {
            "condition": "When answering about high schoolers who have friends and are also liked by someone else",
            "operation": " use INTERSECT to find common IDs between the two conditions instead of complex joins and subqueries."
        },
        "138": {
            "condition": "When selecting students who have friends",
            "operation": " select \"student_id\" from \"Friend\" table instead of using joined tables."
        },
        "139": {
            "condition": "When selecting students who are liked by someone",
            "operation": " select \"liked_id\" from \"Likes\" table instead of filtering with WHERE subqueries."
        },
        "140": {
            "condition": "When using INTERSECT operation",
            "operation": " do not use DISTINCT keyword since INTERSECT inherently returns unique values."
        },
        "141": {
            "condition": "When identifying students",
            "operation": " eliminate unnecessary joins to the \"Highschooler\" table instead of including table relationships not needed for the intersection."
        },
        "142": {
            "condition": "When answering about high schoolers who have friends and are also liked by someone else, When selecting students who have friends, When selecting students who are liked by someone, When using INTERSECT operation, When identifying students, When combining results from \"Friend\" and \"Likes\" tables",
            "operation": " do not use join conditions like \"h1.id = f.id1\" and \"h1.id = l.id2\" since INTERSECT handles the set operation without explicit joins."
        },
        "143": {
            "condition": "When the question asks for student IDs who are both friends and liked",
            "operation": " use the exact table names \"Friend\" and \"Likes\" as specified in the schema."
        },
        "144": {
            "condition": "When combining data from multiple tables for set operations",
            "operation": " use INTERSECT semantics to find the common student IDs efficiently."
        },
        "145": {
            "condition": "When selecting student identifiers",
            "operation": " use the exact column name \"student_id\" from the Friend table to match the schema's column naming."
        },
        "146": {
            "condition": "When referencing the liked students",
            "operation": " use the exact column name \"liked_id\" from the Likes table to match the schema's column naming."
        },
        "147": {
            "condition": "When the question asks for student IDs who are both friends and liked, When combining data from multiple tables for set operations, When selecting student identifiers, When referencing the liked students, When producing output",
            "operation": " maintain the exact column order and naming as specified in the question (student IDs only)."
        },
        "148": {
            "condition": "When the question asks for students who are liked",
            "operation": " use the \"liked_id\" column from the Likes table instead of \"student_id\" to identify students who are liked by others."
        },
        "149": {
            "condition": "When the question asks for students who are liked, When combining results from Friend and Likes tables using INTERSECT",
            "operation": " ensure both SELECT clauses reference the correct student identifier columns - \"student_id\" from Friend for students who have friends, and \"liked_id\" from Likes for students who are liked."
        },
        "150": {
            "condition": "When the question asks for students who have friends and are liked by someone",
            "operation": " use INTERSECT to find common students between those who have friends and those who are liked, instead of using IN and NOT IN subqueries."
        },
        "151": {
            "condition": "When joining the Friend table with Highschooler",
            "operation": " link rows where Friend.student_id equals Highschooler.id."
        },
        "152": {
            "condition": "When joining the Likes table with Highschooler",
            "operation": " link rows where Likes.liked_id equals Highschooler.id."
        },
        "153": {
            "condition": "When selecting from multiple tables",
            "operation": " use explicit table aliases T1 and T2 instead of assuming a single students table."
        },
        "154": {
            "condition": "When referring to table names",
            "operation": " use exact table names \"Friend\" and \"Likes\" instead of generic \"friends\" and \"likes\"."
        },
        "155": {
            "condition": "When the question asks for students who have friends and are liked by someone, When joining the Friend table with Highschooler, When joining the Likes table with Highschooler, When selecting from multiple tables, When referring to table names, When producing output",
            "operation": " select the name column from the intersected result set."
        },
        "156": {
            "condition": "When combining tables for shared entities",
            "operation": " link Highschooler rows with Friend rows where T1.ID = T2.student_id and keep only matching pairs (inner match)."
        },
        "157": {
            "condition": "When combining tables for shared entities",
            "operation": " link Highschooler rows with Likes rows where T1.ID = T3.liked_id and keep only matching pairs (inner match)."
        },
        "158": {
            "condition": "When finding students who satisfy multiple conditions",
            "operation": " use set intersection to find students who appear in both Friend and Likes relationships."
        },
        "159": {
            "condition": "When answering about \"names of high schoolers who both have friends and are liked\"",
            "operation": " make sure the output order: name from Highschooler table."
        },
        "160": {
            "condition": "When the question mentions \"have friends\"",
            "operation": " this means students who appear in the Friend.student_id column."
        },
        "161": {
            "condition": "When combining tables for shared entities, When combining tables for shared entities, When finding students who satisfy multiple conditions, When answering about \"names of high schoolers who both have friends and are liked\", When the question mentions \"have friends\", When the question mentions \"are liked\"",
            "operation": " this means students who appear in the Likes.liked_id column."
        },
        "162": {
            "condition": "When joining tables for high schoolers who have likes",
            "operation": " link rows where T1.student_id = T2.id to match student IDs from Likes to IDs in Highschooler, keeping only matching pairs (inner match)."
        },
        "163": {
            "condition": "When counting likes per student",
            "operation": " group by T1.student_id to ensure accurate count aggregation per individual student rather than by potentially duplicate names."
        },
        "164": {
            "condition": "When selecting student names",
            "operation": " use T2.name to explicitly reference the name column from the Highschooler table."
        },
        "165": {
            "condition": "When joining tables for high schoolers who have likes, When counting likes per student, When selecting student names, When the question asks for numbers of likes for each high schooler",
            "operation": " count the number of likes using the student_id from the Likes table as the counting key."
        },
        "166": {
            "condition": "When answering about \"names of high schoolers who have likes\"",
            "operation": " select \"T2\".\"name\" and count(*) without an alias."
        },
        "167": {
            "condition": "When combining Likes and Highschooler tables",
            "operation": " link rows where \"T1\".\"student_id\" = \"T2\".\"id\" and keep only matching pairs (inner match)."
        },
        "168": {
            "condition": "When counting likes per student",
            "operation": " group by \"T1\".\"student_id\" instead of grouping by name."
        },
        "169": {
            "condition": "When all groups will have at least one count",
            "operation": " do not include a HAVING condition to filter out zero counts."
        },
        "170": {
            "condition": "When answering about \"names of high schoolers who have likes\", When combining Likes and Highschooler tables, When counting likes per student, When all groups will have at least one count, When the question does not specify ordering",
            "operation": " do not include an ORDER BY clause."
        },
        "171": {
            "condition": "When answering about \"the high schooler who has the greatest number of likes\"",
            "operation": " make sure the output order: T2.name."
        },
        "172": {
            "condition": "When the question mentions \"number of likes\"",
            "operation": " this actually means \"count of relationships in the Likes table per student\"."
        },
        "173": {
            "condition": "When combining T1 (Likes) and T2 (Highschooler) for shared entities",
            "operation": " link rows where T1.student_id = T2.id and keep only matching pairs (inner match)."
        },
        "174": {
            "condition": "When the question asks for \"count of likes per student\"",
            "operation": " compute the number of rows using T1.student_id as the grouping key and count each occurrence."
        },
        "175": {
            "condition": "When the question asks for \"greatest number\" or \"top 1\"",
            "operation": " rank rows by count(*) in descending order and keep the first 1 row."
        },
        "176": {
            "condition": "When answering about \"the high schooler who has the greatest number of likes\", When the question mentions \"number of likes\", When combining T1 (Likes) and T2 (Highschooler) for shared entities, When the question asks for \"count of likes per student\", When the question asks for \"greatest number\" or \"top 1\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for any identifiers."
        },
        "177": {
            "condition": "When answering about \"student with the most likes\"",
            "operation": " make sure the output order: T2.name"
        },
        "178": {
            "condition": "When the question mentions \"student\"",
            "operation": " \"student\" actually means \"Highschooler\" in schema"
        },
        "179": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.student_id = T2.id exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "180": {
            "condition": "When the question asks for \"count of likes per student\"",
            "operation": " organize results by T1.student_id and compute count(*) per group"
        },
        "181": {
            "condition": "When answering about \"student with the most likes\", When the question mentions \"student\", When combining T1 and T2 for shared entities, When the question asks for \"count of likes per student\", When the question mentions \"most likes\" or \"highest\"",
            "operation": " rank rows by count(*) in descending direction and keep the first 1 row"
        },
        "182": {
            "condition": "When answering about \"students who have at least 2 likes\"",
            "operation": " make sure the output order: T2.name"
        },
        "183": {
            "condition": "When the question mentions \"students\"",
            "operation": " \"students\" actually means \"Highschooler AS T2\" in schema"
        },
        "184": {
            "condition": "When the question mentions \"likes\"",
            "operation": " \"likes\" actually means \"Likes AS T1\" in schema"
        },
        "185": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.student_id = T2.id exactly as shown in the amends; keep only matching pairs (inner match)"
        },
        "186": {
            "condition": "When the question asks for \"count of likes per student\"",
            "operation": " compute the number of rows using T1.student_id as the grouping key and count occurrences per student"
        },
        "187": {
            "condition": "When answering about \"students who have at least 2 likes\", When the question mentions \"students\", When the question mentions \"likes\", When combining T1 and T2 for shared entities, When the question asks for \"count of likes per student\", When filtering for \"at least 2 likes\"",
            "operation": " apply the condition count(*) >= 2 after grouping instead of on individual rows"
        },
        "188": {
            "condition": "When answering about \"names of students who have 2 or more likes\"",
            "operation": " make sure the output order: T2.name."
        },
        "189": {
            "condition": "When the question mentions \"students\"",
            "operation": " \"students\" actually means \"Highschooler AS T2\" in schema."
        },
        "190": {
            "condition": "When the question mentions \"likes\"",
            "operation": " \"likes\" actually means \"relationships in Likes AS T1\" in schema."
        },
        "191": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.student_id = T2.id exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "192": {
            "condition": "When the question asks for \"count of likes per student\"",
            "operation": " compute the number of rows using the canonical key T1.student_id with GROUP BY T1.student_id."
        },
        "193": {
            "condition": "When answering about \"names of students who have 2 or more likes\", When the question mentions \"students\", When the question mentions \"likes\", When combining T1 and T2 for shared entities, When the question asks for \"count of likes per student\", When filtering for \"2 or more likes\"",
            "operation": " use HAVING count(*) >= 2 instead of a simple WHERE condition."
        },
        "194": {
            "condition": "When answering about student names",
            "operation": " select \"T2\".\"name\" from the \"Highschooler\" table instead of \"name\" from a \"students\" table."
        },
        "195": {
            "condition": "When combining Friend and Highschooler tables",
            "operation": " link rows where \"T1\".\"student_id\" = \"T2\".\"id\" and keep only matching pairs (inner match)."
        },
        "196": {
            "condition": "When filtering by grade higher than 5",
            "operation": " apply the condition \"T2\".\"grade\" > 5 in the WHERE clause."
        },
        "197": {
            "condition": "When counting friends per student",
            "operation": " group by \"T1\".\"student_id\" and count the number of friend relationships."
        },
        "198": {
            "condition": "When answering about student names, When combining Friend and Highschooler tables, When filtering by grade higher than 5, When counting friends per student, When requiring at least 2 friends",
            "operation": " filter groups using HAVING count(*) >= 2 instead of using a direct column comparison."
        },
        "199": {
            "condition": "When combining Friend and Highschooler tables",
            "operation": " link rows where T1.student_id equals T2.id using an inner join."
        },
        "200": {
            "condition": "When filtering by grade",
            "operation": " apply condition T2.grade > 5 to select high schoolers with grades over 5."
        },
        "201": {
            "condition": "When counting friends per student",
            "operation": " group results by T1.student_id and count the number of friend records for each student."
        },
        "202": {
            "condition": "When requiring minimum friend count",
            "operation": " include only groups having count(*) >= 2."
        },
        "203": {
            "condition": "When combining Friend and Highschooler tables, When filtering by grade, When counting friends per student, When requiring minimum friend count, When selecting output columns",
            "operation": " return T2.name as the result column."
        },
        "204": {
            "condition": "When the question asks about \"likes\" for a student",
            "operation": " use the \"Likes\" table as T1 and \"Highschooler\" table as T2 instead of a \"users\" table."
        },
        "205": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.student_id equals T2.id exactly and keep only matching pairs (inner match)."
        },
        "206": {
            "condition": "When filtering for a student named \"Kyle\"",
            "operation": " use the exact literal \"Kyle\" with double quotes in the condition T2.name = \"Kyle\"."
        },
        "207": {
            "condition": "When counting likes",
            "operation": " use count(*) with lowercase instead of uppercase COUNT(*)."
        },
        "208": {
            "condition": "When the question asks about \"likes\" for a student, When combining T1 and T2 for shared entities, When filtering for a student named \"Kyle\", When counting likes, When answering about \"how many likes does Kyle have\"",
            "operation": " make sure to count all likes associated with the student named Kyle through the join relationship."
        },
        "209": {
            "condition": "When answering about \"average grade of all students who have some friends\"",
            "operation": " make sure the output order: avg(grade)."
        },
        "210": {
            "condition": "When the question mentions \"students who have some friends\"",
            "operation": " use a subquery with id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id) instead of a simple friend_count filter."
        },
        "211": {
            "condition": "When combining Friend and Highschooler tables",
            "operation": " link rows where T1.student_id = T2.id and keep only matching pairs (inner match)."
        },
        "212": {
            "condition": "When answering about \"average grade of all students who have some friends\", When the question mentions \"students who have some friends\", When combining Friend and Highschooler tables, When computing average grade",
            "operation": " use avg(grade) from Highschooler table instead of students table."
        },
        "213": {
            "condition": "When answering about \"average grade of students who have friends\"",
            "operation": " make sure the output order: avg(grade)."
        },
        "214": {
            "condition": "When the question mentions \"students who have friends\"",
            "operation": " use a subquery with id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id = T2.id) instead of filtering with friend_count > 0."
        },
        "215": {
            "condition": "When combining Friend and Highschooler tables",
            "operation": " link rows where T1.student_id = T2.id and keep only matching pairs (inner match)."
        },
        "216": {
            "condition": "When answering about \"average grade of students who have friends\", When the question mentions \"students who have friends\", When combining Friend and Highschooler tables, When computing average grade",
            "operation": " use avg(grade) from Highschooler table instead of AVG(grade) from students table."
        },
        "217": {
            "condition": "When answering about \"minimum grade of students who have no friends\"",
            "operation": " query the \"Highschooler\" table instead of a \"students\" table."
        },
        "218": {
            "condition": "When computing the minimum grade",
            "operation": " use lowercase function name \"min(grade)\" instead of uppercase \"MIN(grade)\"."
        },
        "219": {
            "condition": "When identifying students without friends",
            "operation": " use a subquery that joins \"Friend AS T1\" with \"Highschooler AS T2\" where \"T1.student_id = T2.id\" instead of a simple \"SELECT friend_id FROM friends\"."
        },
        "220": {
            "condition": "When answering about \"minimum grade of students who have no friends\", When computing the minimum grade, When identifying students without friends, When referencing the friend relationship in the subquery",
            "operation": " use \"T1.student_id\" instead of \"friend_id\" to properly identify students who have friends."
        },
        "221": {
            "condition": "When answering about \"lowest grade of students who do not have any friends\"",
            "operation": " make sure the output order: MIN(grade)."
        },
        "222": {
            "condition": "When the question mentions \"students\"",
            "operation": " \"students\" actually means \"Highschooler\" in schema."
        },
        "223": {
            "condition": "When the question mentions \"friends\"",
            "operation": " \"friends\" actually means \"Friend\" in schema."
        },
        "224": {
            "condition": "When combining Highschooler and Friend for shared entities",
            "operation": " link rows where the canonical keys are equal exactly as shown in the amends (T1.student_id = T2.id); keep only matching pairs (inner match)."
        },
        "225": {
            "condition": "When answering about \"lowest grade of students who do not have any friends\", When the question mentions \"students\", When the question mentions \"friends\", When combining Highschooler and Friend for shared entities, When identifying students without friends",
            "operation": " find Highschooler rows where id values are not present in the Friend relationship table through the join condition T1.student_id = T2.id."
        }
    },
    "dog_kennels": {
        "0": {
            "condition": "When answering about \"average age of dogs who have gone through treatments\"",
            "operation": " make sure the output order: avg(age)."
        },
        "1": {
            "condition": "When the question mentions \"dogs who have gone through any treatments\"",
            "operation": " use a subquery to select dog_id from the Treatments table instead of checking treatment_id IS NOT NULL."
        },
        "2": {
            "condition": "When computing the average age",
            "operation": " use lowercase avg(age) function instead of uppercase AVG(age)."
        },
        "3": {
            "condition": "When answering about \"average age of dogs who have gone through treatments\", When the question mentions \"dogs who have gone through any treatments\", When computing the average age, When referencing the Dogs table",
            "operation": " use proper capitalization \"Dogs\" instead of lowercase \"dogs\"."
        },
        "4": {
            "condition": "When answering about \"average age of dogs who went through treatments\"",
            "operation": " make sure the output order: avg(age)."
        },
        "5": {
            "condition": "When the question mentions \"dogs who went through treatments\"",
            "operation": " use a subquery to select dog_id from Treatments table instead of checking for non-null treatment_id values."
        },
        "6": {
            "condition": "When computing average age",
            "operation": " use lowercase avg(age) function instead of uppercase AVG(age)."
        },
        "7": {
            "condition": "When referencing the dogs table",
            "operation": " use exact identifier \"Dogs\" with proper casing instead of lowercase \"dogs\"."
        },
        "8": {
            "condition": "When answering about \"average age of dogs who went through treatments\", When the question mentions \"dogs who went through treatments\", When computing average age, When referencing the dogs table, When filtering dogs with treatments",
            "operation": " use dog_id IN (SELECT dog_id FROM Treatments) to properly identify dogs that have corresponding treatment records."
        },
        "9": {
            "condition": "When selecting professional identifiers",
            "operation": " use \"professional_id\" instead of \"id\" in the output columns."
        },
        "10": {
            "condition": "When selecting phone numbers",
            "operation": " use \"cell_number\" instead of \"cell_phone\" as the column name."
        },
        "11": {
            "condition": "When querying the professionals table",
            "operation": " use exact table name \"Professionals\" with proper casing instead of lowercase \"professionals\"."
        },
        "12": {
            "condition": "When finding professionals who have done more than 2 treatments",
            "operation": " join \"Professionals\" (as T1) with \"Treatments\" (as T2) on T1.professional_id = T2.professional_id instead of using a single table."
        },
        "13": {
            "condition": "When counting treatments per professional",
            "operation": " group by T1.professional_id and use HAVING count(*) > 2 instead of checking treatment_count > 2 in WHERE clause."
        },
        "14": {
            "condition": "When combining results for Indiana professionals and those with many treatments",
            "operation": " use UNION operation instead of OR logic in a single query."
        },
        "15": {
            "condition": "When selecting professional identifiers, When selecting phone numbers, When querying the professionals table, When finding professionals who have done more than 2 treatments, When counting treatments per professional, When combining results for Indiana professionals and those with many treatments, When outputting results",
            "operation": " maintain the column order as professional_id, last_name, cell_number."
        },
        "16": {
            "condition": "When selecting professional information",
            "operation": " use \"professional_id\" instead of \"id\" and \"cell_number\" instead of \"cell_phone\" in the output columns."
        },
        "17": {
            "condition": "When referring to the professionals table",
            "operation": " use the exact table name \"Professionals\" with proper capitalization."
        },
        "18": {
            "condition": "When finding professionals who live in Indiana or have performed more than two treatments",
            "operation": " use a UNION operation instead of OR logic to combine two separate result sets."
        },
        "19": {
            "condition": "When counting treatments per professional",
            "operation": " join \"Professionals AS T1\" with \"Treatments AS T2\" on \"T1.professional_id = T2.professional_id\" using an inner match."
        },
        "20": {
            "condition": "When filtering professionals by treatment count",
            "operation": " group by \"T1.professional_id\" and use \"HAVING count(*) > 2\" instead of a WHERE clause condition."
        },
        "21": {
            "condition": "When selecting professional information, When referring to the professionals table, When finding professionals who live in Indiana or have performed more than two treatments, When counting treatments per professional, When filtering professionals by treatment count, When the question mentions \"state of Indiana\"",
            "operation": " use the exact literal value 'Indiana' with proper capitalization for state comparison."
        },
        "22": {
            "condition": "When the question asks about dogs that have not cost more than a specific amount for treatment",
            "operation": " use a subquery with NOT IN instead of a simple WHERE filter to identify dogs whose total treatment costs exceed the threshold."
        },
        "23": {
            "condition": "When calculating total treatment costs per dog",
            "operation": " use GROUP BY dog_id and HAVING sum(cost_of_treatment) > 1000 in the subquery instead of filtering directly on individual treatment costs."
        },
        "24": {
            "condition": "When referencing the treatments table",
            "operation": " select dog_id from the treatments table in the correlated subquery to properly aggregate costs by dog."
        },
        "25": {
            "condition": "When producing the final result",
            "operation": " remove direct column references to treatment_cost from the main query since cost calculation now happens in the subquery."
        },
        "26": {
            "condition": "When the question asks about dogs that have not cost more than a specific amount for treatment, When calculating total treatment costs per dog, When referencing the treatments table, When producing the final result, When identifying dogs by their canonical key",
            "operation": " use dog_id as the counting and grouping key for aggregating treatment costs."
        },
        "27": {
            "condition": "When the question asks for dogs whose owners have not spent more than 1000 for treatment",
            "operation": " use a subquery with NOT IN instead of multiple joins to filter dogs."
        },
        "28": {
            "condition": "When filtering by treatment costs",
            "operation": " aggregate using SUM(\"cost_of_treatment\") instead of filtering individual cost values."
        },
        "29": {
            "condition": "When referencing treatment costs",
            "operation": " use the exact column name \"cost_of_treatment\" instead of \"cost\"."
        },
        "30": {
            "condition": "When identifying dogs in the subquery",
            "operation": " filter by \"dog_id\" instead of \"id\"."
        },
        "31": {
            "condition": "When the question asks for dogs whose owners have not spent more than 1000 for treatment, When filtering by treatment costs, When referencing treatment costs, When identifying dogs in the subquery, When combining treatment data",
            "operation": " remove joins with \"owners\" and \"treatments\" tables and instead use a subquery approach."
        },
        "32": {
            "condition": "When answering about professionals who did not operate any treatment on dogs",
            "operation": " use EXCEPT set operation instead of LEFT JOIN with IS NULL filter."
        },
        "33": {
            "condition": "When selecting professional information",
            "operation": " select \"professional_id\", \"role_code\", and \"email_address\" instead of \"id\", \"role\", and \"email\"."
        },
        "34": {
            "condition": "When referencing the Professionals table",
            "operation": " use proper casing \"Professionals\" instead of lowercase."
        },
        "35": {
            "condition": "When combining Professionals and Treatments tables",
            "operation": " use INNER JOIN on \"professional_id\" instead of filtered LEFT JOIN."
        },
        "36": {
            "condition": "When filtering for treatments on dogs",
            "operation": " remove the \"animal_type = 'Dog'\" filter condition instead of including it."
        },
        "37": {
            "condition": "When answering about professionals who did not operate any treatment on dogs, When selecting professional information, When referencing the Professionals table, When combining Professionals and Treatments tables, When filtering for treatments on dogs, When using table aliases",
            "operation": " use \"T1\" for Professionals and \"T2\" for Treatments instead of single letters."
        },
        "38": {
            "condition": "When selecting professional information",
            "operation": " use \"professional_id\", \"role_code\", and \"email_address\" as output columns instead of \"id\", \"role\", and \"email\"."
        },
        "39": {
            "condition": "When referencing the professionals table",
            "operation": " use \"Professionals\" (with exact case) instead of \"professionals\"."
        },
        "40": {
            "condition": "When finding professionals without any treatments",
            "operation": " use EXCEPT set operation instead of NOT IN subquery."
        },
        "41": {
            "condition": "When combining Professionals and Treatments tables",
            "operation": " join \"Professionals AS T1\" with \"Treatments AS T2\" on \"T1.professional_id = T2.professional_id\" for inner matching."
        },
        "42": {
            "condition": "When selecting professional information, When referencing the professionals table, When finding professionals without any treatments, When combining Professionals and Treatments tables, When excluding professionals with treatments",
            "operation": " remove any animal_type filter condition since the question asks about professionals who did not perform any treatment, not just dog treatments."
        },
        "43": {
            "condition": "When answering about \"which owner owns the most dogs\"",
            "operation": " make sure the output order: owner_id, first_name, last_name."
        },
        "44": {
            "condition": "When combining Dogs and Owners tables",
            "operation": " link rows where T1.owner_id = T2.owner_id and keep only matching pairs (inner match)."
        },
        "45": {
            "condition": "When counting dogs per owner",
            "operation": " compute the number of rows using the canonical key T1.owner_id for grouping."
        },
        "46": {
            "condition": "When the question asks for \"most dogs\"",
            "operation": " rank owners by dog count in descending order and keep the first 1 row."
        },
        "47": {
            "condition": "When answering about \"which owner owns the most dogs\", When combining Dogs and Owners tables, When counting dogs per owner, When the question asks for \"most dogs\", When selecting owner information",
            "operation": " use T1.owner_id from Dogs table and T2.first_name, T2.last_name from Owners table."
        },
        "48": {
            "condition": "When answering about \"owner who has the most dogs\"",
            "operation": " make sure the output order: T1.owner_id, T2.first_name, T2.last_name."
        },
        "49": {
            "condition": "When the question mentions \"owner\"",
            "operation": " \"owner\" actually means \"T1.owner_id in schema\" and owner details come from T2.first_name and T2.last_name."
        },
        "50": {
            "condition": "When combining Dogs and Owners tables",
            "operation": " link rows where T1.owner_id = T2.owner_id and keep only matching pairs (inner match)."
        },
        "51": {
            "condition": "When the question asks for \"count of dogs per owner\"",
            "operation": " compute the number of rows using T1.owner_id as the grouping key and count(*) as the aggregate."
        },
        "52": {
            "condition": "When answering about \"owner who has the most dogs\", When the question mentions \"owner\", When combining Dogs and Owners tables, When the question asks for \"count of dogs per owner\", When the question asks for \"most dogs\"",
            "operation": " rank owners by count(*) in descending order and keep the first 1 row."
        },
        "53": {
            "condition": "When answering about professionals who have done treatments",
            "operation": " combine Professionals table (as T1) and Treatments table (as T2) using T1.professional_id = T2.professional_id instead of querying only one table."
        },
        "54": {
            "condition": "When the question mentions \"role\"",
            "operation": " \"role\" actually means \"role_code\" in schema."
        },
        "55": {
            "condition": "When the question asks for professionals with at least two treatments",
            "operation": " group results by T1.professional_id and filter groups having count(*) >= 2 instead of using aggregate conditions in WHERE clause."
        },
        "56": {
            "condition": "When using table aliases",
            "operation": " use T1 for Professionals table and T2 for Treatments table consistently."
        },
        "57": {
            "condition": "When answering about professionals who have done treatments, When the question mentions \"role\", When the question asks for professionals with at least two treatments, When using table aliases, When counting treatments per professional",
            "operation": " count all rows in the Treatments table (T2) that match each professional using count(*) instead of counting a specific column."
        },
        "58": {
            "condition": "When selecting columns from the Professionals table",
            "operation": " use \"T1.professional_id\", \"T1.role_code\", and \"T1.first_name\" instead of unqualified column names."
        },
        "59": {
            "condition": "When counting treatments performed by professionals",
            "operation": " join the Treatments table as T2 on \"T1.professional_id = T2.professional_id\" to access treatment records."
        },
        "60": {
            "condition": "When determining professionals with two or more treatments",
            "operation": " group by \"T1.professional_id\" and use having count(*) >= 2 instead of filtering on a non-existent treatment_count column."
        },
        "61": {
            "condition": "When selecting columns from the Professionals table, When counting treatments performed by professionals, When determining professionals with two or more treatments, When combining Professionals and Treatments tables",
            "operation": " perform an inner match where \"T1.professional_id = T2.professional_id\" to link professionals with their treatments."
        },
        "62": {
            "condition": "When answering about \"breed with the most dogs\"",
            "operation": " make sure to join Breeds as T1 and Dogs as T2 using the exact join condition T1.breed_code = T2.breed_code to establish the relationship between breeds and dogs."
        },
        "63": {
            "condition": "When counting dogs per breed",
            "operation": " count using the canonical key from the Dogs table (T2.breed_code) to determine the number of dogs for each breed."
        },
        "64": {
            "condition": "When selecting the breed name",
            "operation": " use the exact identifier T1.breed_name from the Breeds table instead of just breed_name."
        },
        "65": {
            "condition": "When answering about \"breed with the most dogs\", When counting dogs per breed, When selecting the breed name, When finding the breed with the highest count",
            "operation": " rank rows by the count of dogs in descending order and keep only the first row (top result)."
        },
        "66": {
            "condition": "When answering about \"which breed do the most dogs have\"",
            "operation": " make sure the output order: T1.breed_name."
        },
        "67": {
            "condition": "When the question mentions \"breed\"",
            "operation": " \"breed\" actually means \"T1.breed_name in schema\"."
        },
        "68": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.breed_code = T2.breed_code exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "69": {
            "condition": "When the question asks for \"count of dogs\"",
            "operation": " compute the number of rows using the canonical key token for dogs (e.g., T2.breed_code)."
        },
        "70": {
            "condition": "When answering about \"which breed do the most dogs have\", When the question mentions \"breed\", When combining T1 and T2 for shared entities, When the question asks for \"count of dogs\", When the question mentions \"most\" or \"highest\"",
            "operation": " rank rows by count of dogs in descending direction and keep the first 1 row."
        },
        "71": {
            "condition": "When counting treatments per owner",
            "operation": " use count(*) to count all treatment records for each owner group."
        },
        "72": {
            "condition": "When grouping by owner",
            "operation": " group only by T1.owner_id since it uniquely identifies each owner and T1.last_name is not needed for grouping."
        },
        "73": {
            "condition": "When ordering results by treatment count",
            "operation": " use count(*) directly in the ORDER BY clause instead of referencing an alias that is not available at that level."
        },
        "74": {
            "condition": "When counting treatments per owner, When grouping by owner, When ordering results by treatment count, When combining tables T1 (owners), T2 (dogs), and T3 (treatments)",
            "operation": " link T1 to T2 using T1.owner_id = T2.owner_id and T2 to T3 using T2.dog_id = T3.dog_id to find treatments for each owner's dogs."
        },
        "75": {
            "condition": "When answering about \"owner who spent the most on treatments\"",
            "operation": " use explicit table aliases T1 for Owners, T2 for Dogs, and T3 for Treatments instead of unaliased table names."
        },
        "76": {
            "condition": "When combining tables for shared entities",
            "operation": " link rows where T1.owner_id = T2.owner_id and T2.dog_id = T3.dog_id; keep only matching pairs (inner match)."
        },
        "77": {
            "condition": "When the question asks for \"the most\" by treatment spending",
            "operation": " group results by T1.owner_id and compute the count of treatments using T3 records."
        },
        "78": {
            "condition": "When ranking for \"the most\"",
            "operation": " order rows by count(*) in descending direction and keep only the first row."
        },
        "79": {
            "condition": "When answering about \"owner who spent the most on treatments\", When combining tables for shared entities, When the question asks for \"the most\" by treatment spending, When ranking for \"the most\", When producing output",
            "operation": " include T1.owner_id and T1.last_name in the result columns."
        },
        "80": {
            "condition": "When answering about \"treatment type that costs the least money in total\"",
            "operation": " make sure the output order: T1.treatment_type_description."
        },
        "81": {
            "condition": "When combining T1 (treatment_types) and T2 (Treatments) for shared entities",
            "operation": " link rows where T1.treatment_type_code = T2.treatment_type_code; keep only matching pairs (inner match)."
        },
        "82": {
            "condition": "When the question asks for total cost by treatment type",
            "operation": " organize results by T1.treatment_type_code and compute sum(cost_of_treatment) per group."
        },
        "83": {
            "condition": "When answering about \"treatment type that costs the least money in total\", When combining T1 (treatment_types) and T2 (Treatments) for shared entities, When the question asks for total cost by treatment type, When finding the treatment type with lowest total cost",
            "operation": " rank rows by sum(cost_of_treatment) in ascending order and keep the first 1 row."
        },
        "84": {
            "condition": "When answering about \"treatment type whose total cost is the lowest\"",
            "operation": " make sure the output order: T1.treatment_type_description."
        },
        "85": {
            "condition": "When the question mentions \"description\"",
            "operation": " \"description\" actually means \"T1.treatment_type_description\" in schema."
        },
        "86": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.treatment_type_code = T2.treatment_type_code; keep only matching pairs (inner match)."
        },
        "87": {
            "condition": "When the question says \"per treatment type\"/\"by treatment type\"",
            "operation": " organize results by T1.treatment_type_code and compute requested aggregates per group."
        },
        "88": {
            "condition": "When the question asks for \"total cost\"",
            "operation": " compute sum(cost_of_treatment) instead of total_cost."
        },
        "89": {
            "condition": "When answering about \"treatment type whose total cost is the lowest\", When the question mentions \"description\", When combining T1 and T2 for shared entities, When the question says \"per treatment type\"/\"by treatment type\", When the question asks for \"total cost\", When the question asks for \"lowest\" total cost",
            "operation": " rank rows by sum(cost_of_treatment) in ascending order and keep the first 1 row."
        },
        "90": {
            "condition": "When answering about \"owner has paid the largest amount of money in total for their dogs\"",
            "operation": " make sure the output order: T1.owner_id, T1.zip_code"
        },
        "91": {
            "condition": "When combining Owners as T1 and Dogs as T2 for shared entities",
            "operation": " link rows where T1.owner_id = T2.owner_id and keep only matching pairs (inner match)"
        },
        "92": {
            "condition": "When combining Dogs as T2 and Treatments as T3 for shared entities",
            "operation": " link rows where T2.dog_id = T3.dog_id and keep only matching pairs (inner match)"
        },
        "93": {
            "condition": "When the question asks for \"total amount paid for dogs\"",
            "operation": " compute the sum of T3.cost_of_treatment per owner"
        },
        "94": {
            "condition": "When the question mentions \"largest amount\"",
            "operation": " rank owners by sum(T3.cost_of_treatment) in descending order and keep the first 1 row"
        },
        "95": {
            "condition": "When grouping by owner",
            "operation": " organize results by T1.owner_id only, not by zip_code"
        },
        "96": {
            "condition": "When answering about \"owner has paid the largest amount of money in total for their dogs\", When combining Owners as T1 and Dogs as T2 for shared entities, When combining Dogs as T2 and Treatments as T3 for shared entities, When the question asks for \"total amount paid for dogs\", When the question mentions \"largest amount\", When grouping by owner, When producing output",
            "operation": " include T1.owner_id and T1.zip_code in the results"
        },
        "97": {
            "condition": "When answering about \"owner who spent the most money in total for his or her dogs\"",
            "operation": " make sure the output order: owner_id, zip_code."
        },
        "98": {
            "condition": "When the question mentions \"spent the most money\"",
            "operation": " this actually means sum of \"cost_of_treatment\" in the Treatments table."
        },
        "99": {
            "condition": "When combining Owners (T1), Dogs (T2), and Treatments (T3) tables",
            "operation": " link rows where T1.owner_id = T2.owner_id and T2.dog_id = T3.dog_id using exact key equality; keep only matching pairs (inner match)."
        },
        "100": {
            "condition": "When grouping by owner",
            "operation": " organize results by owner_id only, not by both owner_id and zip_code."
        },
        "101": {
            "condition": "When ranking for \"the most money\"",
            "operation": " rank rows by sum(T3.cost_of_treatment) in descending order and keep only the first 1 row."
        },
        "102": {
            "condition": "When answering about \"owner who spent the most money in total for his or her dogs\", When the question mentions \"spent the most money\", When combining Owners (T1), Dogs (T2), and Treatments (T3) tables, When grouping by owner, When ranking for \"the most money\", When producing output",
            "operation": " select only owner_id and zip_code columns, do not include the sum amount in the final output."
        },
        "103": {
            "condition": "When answering about professionals and their treatments",
            "operation": " combine data from the professionals table (as T1) and Treatments table (as T2) using the join condition T1.professional_id = T2.professional_id to link professionals to their treatments."
        },
        "104": {
            "condition": "When counting treatments per professional",
            "operation": " group results by T1.professional_id and count all treatment rows using count(*) instead of counting distinct treatment types."
        },
        "105": {
            "condition": "When filtering for professionals with multiple treatments",
            "operation": " use HAVING count(*) >= 2 instead of WHERE with aggregate functions."
        },
        "106": {
            "condition": "When selecting professional contact information",
            "operation": " use T1.cell_number instead of cell_phone for the phone number field."
        },
        "107": {
            "condition": "When answering about professionals and their treatments, When counting treatments per professional, When filtering for professionals with multiple treatments, When selecting professional contact information, When qualifying columns",
            "operation": " always use table aliases (T1 or T2) to specify which table each column comes from."
        },
        "108": {
            "condition": "When selecting professional identifiers and contact information",
            "operation": " use \"T1.professional_id\" and \"T1.cell_number\" instead of \"id\" and \"cell_phone\"."
        },
        "109": {
            "condition": "When finding professionals who operate multiple treatment types",
            "operation": " join \"Treatments AS T2\" with \"T1\" where \"T1.professional_id = T2.professional_id\" to access treatment records."
        },
        "110": {
            "condition": "When counting treatment types per professional",
            "operation": " group by \"T1.professional_id\" and use \"count(*) >= 2\" to filter for professionals with at least two treatments."
        },
        "111": {
            "condition": "When selecting professional identifiers and contact information, When finding professionals who operate multiple treatment types, When counting treatment types per professional, When the question asks about \"two or more types of treatments\"",
            "operation": " this means counting the number of treatment records (not distinct treatment types) per professional and requiring at least two records."
        },
        "112": {
            "condition": "When answering about professionals who have done treatment with cost below average",
            "operation": " make sure the output order: first_name, last_name."
        },
        "113": {
            "condition": "When the question mentions \"professionals\"",
            "operation": " \"professionals\" actually means \"Professionals AS T1\" in schema."
        },
        "114": {
            "condition": "When the question mentions \"treatment with cost\"",
            "operation": " \"treatment cost\" actually means \"T2.cost_of_treatment\" in schema."
        },
        "115": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where the canonical keys are equal as shown in the amends; keep only matching pairs (inner match)."
        },
        "116": {
            "condition": "When filtering for cost below average",
            "operation": " compare T2.cost_of_treatment against the average of T2.cost_of_treatment from all treatments."
        },
        "117": {
            "condition": "When answering about professionals who have done treatment with cost below average, When the question mentions \"professionals\", When the question mentions \"treatment with cost\", When combining T1 and T2 for shared entities, When filtering for cost below average, When selecting professional information",
            "operation": " use T1.first_name and T1.last_name with DISTINCT to remove duplicate professional records."
        },
        "118": {
            "condition": "When joining Professionals and Treatments tables",
            "operation": " do not include any join condition between T1.professional_id and T2.professional_id, instead perform a cartesian product between the tables."
        },
        "119": {
            "condition": "When filtering by cost_of_treatment below average",
            "operation": " use the unqualified column name \"cost_of_treatment\" in the WHERE clause instead of the aliased form T2.cost_of_treatment."
        },
        "120": {
            "condition": "When joining Professionals and Treatments tables, When filtering by cost_of_treatment below average, When calculating the average cost of treatment",
            "operation": " compute the average of the \"cost_of_treatment\" column from the Treatments table without any table alias qualification."
        },
        "121": {
            "condition": "When joining Professionals (T1) and Treatments tables",
            "operation": " do not use any explicit join condition between T1.professional_id and T2.professional_id, instead perform a cross join without specified conditions."
        },
        "122": {
            "condition": "When referencing the cost_of_treatment column in the WHERE clause",
            "operation": " use the column name directly without table alias prefix (use cost_of_treatment instead of T2.cost_of_treatment)."
        },
        "123": {
            "condition": "When joining Professionals (T1) and Treatments tables, When referencing the cost_of_treatment column in the WHERE clause, When filtering for treatments with cost below average",
            "operation": " compare cost_of_treatment against the average cost calculated from all treatments using (SELECT AVG(cost_of_treatment) FROM Treatments)."
        },
        "124": {
            "condition": "When answering about professionals operating treatments",
            "operation": " join Professionals AS T1 with Treatments AS T2 instead of querying only the Professionals table."
        },
        "125": {
            "condition": "When filtering by treatment cost",
            "operation": " use column name \"cost_of_treatment\" instead of \"treatment_cost\" in both the main filter and subquery."
        },
        "126": {
            "condition": "When computing average treatment cost",
            "operation": " reference the correct table \"Treatments\" in the subquery instead of \"treatments\"."
        },
        "127": {
            "condition": "When selecting professional names",
            "operation": " use table aliases T1.first_name and T1.last_name instead of unqualified column names."
        },
        "128": {
            "condition": "When answering about professionals operating treatments, When filtering by treatment cost, When computing average treatment cost, When selecting professional names, When returning professional records",
            "operation": " use DISTINCT instead of omitting it to remove duplicate professional records."
        },
        "129": {
            "condition": "When joining Professionals and Treatments tables",
            "operation": " do not use any join condition between T1.professional_id and T2.professional_id, instead perform a cartesian product of all rows from both tables."
        },
        "130": {
            "condition": "When comparing treatment cost to average cost",
            "operation": " reference cost_of_treatment without any table alias prefix in the WHERE clause instead of using T2.cost_of_treatment."
        },
        "131": {
            "condition": "When joining Professionals and Treatments tables, When comparing treatment cost to average cost, When answering about professionals operating treatments costing less than average",
            "operation": " output first_name and last_name columns from the Professionals table (T1)."
        },
        "132": {
            "condition": "When combining Professionals and Treatments tables",
            "operation": " do not use any join condition and create a Cartesian product between all rows of both tables."
        },
        "133": {
            "condition": "When filtering by cost of treatment",
            "operation": " keep only rows where T2.cost_of_treatment is less than the average cost_of_treatment from all Treatments."
        },
        "134": {
            "condition": "When selecting distinct professionals",
            "operation": " return unique combinations of T1.first_name and T1.last_name from the filtered results."
        },
        "135": {
            "condition": "When combining Professionals and Treatments tables, When filtering by cost of treatment, When selecting distinct professionals, When handling output columns",
            "operation": " maintain the exact order of T1.first_name followed by T1.last_name in the results."
        },
        "136": {
            "condition": "When the question asks for \"date of each treatment\"",
            "operation": " select \"date_of_treatment\" from table \"Treatments\" (aliased as T1) instead of \"treatment_date\"."
        },
        "137": {
            "condition": "When the question asks for \"first name of the professional\"",
            "operation": " select \"first_name\" from table \"Professionals\" (aliased as T2) instead of \"last_name\"."
        },
        "138": {
            "condition": "When combining tables Treatments and Professionals",
            "operation": " use table aliases T1 for Treatments and T2 for Professionals."
        },
        "139": {
            "condition": "When the question asks for \"date of each treatment\", When the question asks for \"first name of the professional\", When combining tables Treatments and Professionals, When referencing columns from joined tables",
            "operation": " qualify column names with their table aliases as T1.date_of_treatment and T2.first_name."
        },
        "140": {
            "condition": "When answering about \"date and the operating professional's first name of each treatment\"",
            "operation": " make sure the output order: T1.date_of_treatment, T2.first_name."
        },
        "141": {
            "condition": "When the question mentions \"date\"",
            "operation": " \"date\" actually means \"T1.date_of_treatment\" in schema."
        },
        "142": {
            "condition": "When the question mentions \"first name\"",
            "operation": " \"first name\" actually means \"T2.first_name\" in schema."
        },
        "143": {
            "condition": "When answering about \"date and the operating professional's first name of each treatment\", When the question mentions \"date\", When the question mentions \"first name\", When combining T1 (Treatments) and T2 (Professionals) for shared entities",
            "operation": " link rows where T1.professional_id = T2.professional_id; keep only matching pairs (inner match)."
        },
        "144": {
            "condition": "When answering about \"cost of each treatment and corresponding treatment type description\"",
            "operation": " make sure the output order: T1.cost_of_treatment, T2.treatment_type_description."
        },
        "145": {
            "condition": "When the question mentions \"cost\"",
            "operation": " \"cost\" actually means \"T1.cost_of_treatment\" in schema."
        },
        "146": {
            "condition": "When the question mentions \"treatment type description\"",
            "operation": " \"treatment type description\" actually means \"T2.treatment_type_description\" in schema."
        },
        "147": {
            "condition": "When answering about \"cost of each treatment and corresponding treatment type description\", When the question mentions \"cost\", When the question mentions \"treatment type description\", When combining T1 (treatments) and T2 (treatment_types) for shared entities",
            "operation": " link rows where T1.treatment_type_code = T2.treatment_type_code; keep only matching pairs (inner match)."
        },
        "148": {
            "condition": "When answering about \"cost and treatment type description of each treatment\"",
            "operation": " make sure the output order: T1.cost_of_treatment, T2.treatment_type_description."
        },
        "149": {
            "condition": "When the question mentions \"cost\"",
            "operation": " \"cost\" actually means \"T1.cost_of_treatment\" in schema."
        },
        "150": {
            "condition": "When the question mentions \"treatment type description\"",
            "operation": " \"treatment type description\" actually means \"T2.treatment_type_description\" in schema."
        },
        "151": {
            "condition": "When answering about \"cost and treatment type description of each treatment\", When the question mentions \"cost\", When the question mentions \"treatment type description\", When combining T1 (treatments) and T2 (treatment_types) for shared entities",
            "operation": " link rows where T1.treatment_type_code = T2.treatment_type_code exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "152": {
            "condition": "When using table aliases",
            "operation": " use T1 for the Owners table and T2 for the Dogs table instead of full table names."
        },
        "153": {
            "condition": "When selecting dog size information",
            "operation": " reference column \"size_code\" instead of \"size\" in the output."
        },
        "154": {
            "condition": "When referring to table names",
            "operation": " use \"Owners\" instead of \"owner\" and \"Dogs\" instead of \"dog\"."
        },
        "155": {
            "condition": "When using table aliases, When selecting dog size information, When referring to table names, When joining Owners and Dogs tables",
            "operation": " link rows where T1.owner_id = T2.owner_id to correctly match owners with their dogs."
        },
        "156": {
            "condition": "When answering about \"each owner's first name, last name, and the size of their dog\"",
            "operation": " make sure the output order: T1.first_name, T1.last_name, T2.size_code."
        },
        "157": {
            "condition": "When the question mentions \"owner\"",
            "operation": " use table \"Professionals\" as T1 with columns first_name and last_name."
        },
        "158": {
            "condition": "When the question mentions \"dog size\"",
            "operation": " use column T2.size_code from the Dogs table instead of dog_size."
        },
        "159": {
            "condition": "When combining T1 (Professionals) and T2 (Dogs) for shared entities",
            "operation": " link rows where T1.owner_id = T2.owner_id and keep only matching pairs (inner match)."
        },
        "160": {
            "condition": "When answering about \"each owner's first name, last name, and the size of their dog\", When the question mentions \"owner\", When the question mentions \"dog size\", When combining T1 (Professionals) and T2 (Dogs) for shared entities, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for table and column names."
        },
        "161": {
            "condition": "When answering about \"List pairs of the owner's first name and the dog's name\"",
            "operation": " make sure the output order: T1.first_name, T2.name."
        },
        "162": {
            "condition": "When combining Owners (T1) and Dogs (T2) for shared entities",
            "operation": " link rows where T1.owner_id = T2.owner_id exactly as shown; keep only matching pairs (inner match)."
        },
        "163": {
            "condition": "When answering about \"List pairs of the owner's first name and the dog's name\", When combining Owners (T1) and Dogs (T2) for shared entities, When choosing identifier delimiters",
            "operation": " do not replace table names Owners and Dogs with lowercase owner and dog."
        },
        "164": {
            "condition": "When selecting owner information from the Owners table",
            "operation": " use T1.first_name as the exact column token for owner's first name."
        },
        "165": {
            "condition": "When selecting dog information from the Dogs table",
            "operation": " use T2.name as the exact column token for dog's name."
        },
        "166": {
            "condition": "When combining Owners and Dogs tables",
            "operation": " link rows where T1.owner_id = T2.owner_id to correctly match owner records with their dogs."
        },
        "167": {
            "condition": "When selecting owner information from the Owners table, When selecting dog information from the Dogs table, When combining Owners and Dogs tables, When assigning table aliases",
            "operation": " use AS T1 for Owners table and AS T2 for Dogs table as specified in the schema."
        },
        "168": {
            "condition": "When answering about \"names of dogs and treatment dates\"",
            "operation": " make sure the output order: T1.name, T2.date_of_treatment"
        },
        "169": {
            "condition": "When the question mentions \"breed\"",
            "operation": " \"breed\" actually means \"breed_code in schema\""
        },
        "170": {
            "condition": "When the question asks for \"rarest breed\"",
            "operation": " find the breed_code with the smallest count of dogs and use that value for filtering"
        },
        "171": {
            "condition": "When combining T1 (Dogs) and T2 (Treatments) for shared entities",
            "operation": " link rows where T1.dog_id = T2.dog_id; keep only matching pairs (inner match)"
        },
        "172": {
            "condition": "When answering about \"names of dogs and treatment dates\", When the question mentions \"breed\", When the question asks for \"rarest breed\", When combining T1 (Dogs) and T2 (Treatments) for shared entities, When filtering for the rarest breed",
            "operation": " use the exact breed_code value that has the minimum count from the Dogs table"
        },
        "173": {
            "condition": "When answering about \"rarest breed\"",
            "operation": " find the breed_code with the lowest count of dogs in T1 (Dogs table) and use that breed_code for filtering."
        },
        "174": {
            "condition": "When the question mentions \"breed\"",
            "operation": " use T1.breed_code instead of breed as the column reference."
        },
        "175": {
            "condition": "When showing dog names and treatment dates",
            "operation": " output T1.name and T2.date_of_treatment as the result columns."
        },
        "176": {
            "condition": "When combining Dogs and Treatments tables",
            "operation": " link rows where T1.dog_id = T2.dog_id using an inner join."
        },
        "177": {
            "condition": "When answering about \"rarest breed\", When the question mentions \"breed\", When showing dog names and treatment dates, When combining Dogs and Treatments tables, When ordering results",
            "operation": " sort by T2.date_of_treatment in descending order."
        },
        "178": {
            "condition": "When joining tables dogs and owners",
            "operation": " use table aliases T1 for dogs and T2 for owners."
        },
        "179": {
            "condition": "When combining dogs and owners tables",
            "operation": " link rows where T1.owner_id = T2.owner_id and keep only matching pairs (inner match)."
        },
        "180": {
            "condition": "When filtering for owners in Virginia",
            "operation": " use T2.state = 'Virginia' with exact case and spacing."
        },
        "181": {
            "condition": "When joining tables dogs and owners, When combining dogs and owners tables, When filtering for owners in Virginia, When answering about dogs owned by Virginia residents",
            "operation": " make sure the output order: owner's first name (T2.first_name) and dog's name (T1.name)."
        },
        "182": {
            "condition": "When answering about \"arriving date and departing date of dogs who have gone through treatment\"",
            "operation": " make sure the output order: T1.date_arrived, T1.date_departed."
        },
        "183": {
            "condition": "When the question mentions \"dogs who have gone through a treatment\"",
            "operation": " this requires joining the Dogs table (T1) with the Treatments table (T2) using T1.dog_id = T2.dog_id to find matching pairs."
        },
        "184": {
            "condition": "When retrieving dates for dogs with treatments",
            "operation": " use T1.date_arrived and T1.date_departed instead of arriving_date and departing_date."
        },
        "185": {
            "condition": "When ensuring each dog appears only once in results",
            "operation": " use DISTINCT to remove duplicate rows."
        },
        "186": {
            "condition": "When answering about \"arriving date and departing date of dogs who have gone through treatment\", When the question mentions \"dogs who have gone through a treatment\", When retrieving dates for dogs with treatments, When ensuring each dog appears only once in results, When filtering for dogs with treatments",
            "operation": " do not use a WHERE condition on treatment status, as the join itself properly filters to only dogs that have treatments."
        },
        "187": {
            "condition": "When answering about \"arriving date and departing date of dogs that received a treatment\"",
            "operation": " use \"date_arrived\" and \"date_departed\" columns from table \"Dogs\" instead of \"arrival_date\" and \"departure_date\"."
        },
        "188": {
            "condition": "When identifying dogs that received treatments",
            "operation": " join \"Treatments\" table with \"Dogs AS T1\" using \"dog_id\" column instead of filtering by \"treatment_received = 'yes'\"."
        },
        "189": {
            "condition": "When returning results for dogs with treatments",
            "operation": " ensure distinct arrival and departure dates by removing duplicate combinations of date_arrived and date_departed."
        },
        "190": {
            "condition": "When answering about \"arriving date and departing date of dogs that received a treatment\", When identifying dogs that received treatments, When returning results for dogs with treatments, When combining Dogs and Treatments tables",
            "operation": " link rows where T1.dog_id equals Treatments.dog_id and keep only matching pairs (inner match)."
        },
        "191": {
            "condition": "When answering about \"last name of the owner\"",
            "operation": " make sure the output column is T1.last_name with table alias qualification."
        },
        "192": {
            "condition": "When combining Owners and Dogs tables",
            "operation": " link rows where T1.owner_id = T2.owner_id and keep only matching pairs (inner match)."
        },
        "193": {
            "condition": "When the question asks for owners with the youngest dog",
            "operation": " use WHERE T2.age = (SELECT max(age) FROM Dogs) to filter for dogs with maximum age instead of sorting."
        },
        "194": {
            "condition": "When the question mentions \"youngest dog\"",
            "operation": " \"youngest\" actually means \"maximum age\" in the Dogs table."
        },
        "195": {
            "condition": "When answering about \"last name of the owner\", When combining Owners and Dogs tables, When the question asks for owners with the youngest dog, When the question mentions \"youngest dog\", When the question asks for a single result from a subquery filter",
            "operation": " do not use LIMIT 1 as the subquery precisely identifies the maximum age."
        },
        "196": {
            "condition": "When answering about \"Who owns the youngest dog? Give me his or her last name\"",
            "operation": " make sure the output order: T1.last_name."
        },
        "197": {
            "condition": "When the question mentions \"youngest dog\"",
            "operation": " \"youngest dog\" actually means \"dogs with maximum age in schema\" using T2.age = (SELECT max(age) FROM Dogs)."
        },
        "198": {
            "condition": "When combining T1 (Owners) and T2 (Dogs) for shared entities",
            "operation": " link rows where T1.owner_id = T2.owner_id exactly as shown in the amends; keep only matching pairs (inner match)."
        },
        "199": {
            "condition": "When answering about \"Who owns the youngest dog? Give me his or her last name\", When the question mentions \"youngest dog\", When combining T1 (Owners) and T2 (Dogs) for shared entities, When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for table and column names like T1.last_name."
        },
        "200": {
            "condition": "When the question asks for emails of professionals",
            "operation": " use the exact column name \"email_address\" from the Professionals table instead of \"email\"."
        },
        "201": {
            "condition": "When the question asks for professionals in Hawaii OR Wisconsin",
            "operation": " use OR between state conditions instead of AND to select professionals from either state, not both simultaneously."
        },
        "202": {
            "condition": "When the question asks for emails of professionals, When the question asks for professionals in Hawaii OR Wisconsin, When specifying state values",
            "operation": " use the exact literals 'Hawaii' and 'Wisconsin' with proper capitalization and spelling."
        },
        "203": {
            "condition": "When the question asks for \"emails\"",
            "operation": " use the exact column token \"email_address\" from the Professionals table instead of \"email\"."
        },
        "204": {
            "condition": "When the question mentions professionals living in \"either the state of Hawaii or the state of Wisconsin\"",
            "operation": " use OR logic between state conditions instead of AND to find professionals in either state."
        },
        "205": {
            "condition": "When the question asks for \"emails\", When the question mentions professionals living in \"either the state of Hawaii or the state of Wisconsin\", When referencing the professionals table",
            "operation": " use the exact table name \"Professionals\" with proper capitalization as shown in the schema."
        },
        "206": {
            "condition": "When the question asks about \"arriving date\" and \"departing date\" of dogs",
            "operation": " use columns \"date_arrived\" and \"date_departed\" from table \"Dogs\"."
        },
        "207": {
            "condition": "When querying about dogs",
            "operation": " use table \"Dogs\" instead of any other table like \"cats\"."
        },
        "208": {
            "condition": "When the question asks about \"arriving date\" and \"departing date\" of dogs, When querying about dogs, When selecting date columns for dogs",
            "operation": " ensure the output order is \"date_arrived\" followed by \"date_departed\"."
        },
        "209": {
            "condition": "When answering about \"arrival date and departure date for all the dogs\"",
            "operation": " make sure the output order: date_arrived, date_departed."
        },
        "210": {
            "condition": "When the question mentions \"dogs\"",
            "operation": " \"dogs\" actually means table \"Dogs\" in schema."
        },
        "211": {
            "condition": "When the question mentions \"arrival date\"",
            "operation": " \"arrival date\" actually means column \"date_arrived\" in table \"Dogs\"."
        },
        "212": {
            "condition": "When answering about \"arrival date and departure date for all the dogs\", When the question mentions \"dogs\", When the question mentions \"arrival date\", When the question mentions \"departure date\"",
            "operation": " \"departure date\" actually means column \"date_departed\" in table \"Dogs\"."
        },
        "213": {
            "condition": "When counting dogs that went through treatments",
            "operation": " count distinct \"dog_id\" values instead of all records."
        },
        "214": {
            "condition": "When accessing treatment-specific data",
            "operation": " use the \"Treatments\" table instead of the \"dogs\" table."
        },
        "215": {
            "condition": "When counting dogs that went through treatments, When accessing treatment-specific data, When counting distinct dog_ids",
            "operation": " do not apply a \"treatment_id IS NOT NULL\" filter since counting distinct values inherently excludes null values."
        },
        "216": {
            "condition": "When counting the number of dogs that went through treatment",
            "operation": " count distinct \"dog_id\" values from the \"Treatments\" table instead of counting all rows."
        },
        "217": {
            "condition": "When accessing treatment data",
            "operation": " use the \"Treatments\" table as the source instead of the \"dogs\" table."
        },
        "218": {
            "condition": "When counting the number of dogs that went through treatment, When accessing treatment data, When filtering treatment records",
            "operation": " do not apply any status filter (remove WHERE treatment = 'yes') to include all treatments regardless of status."
        },
        "219": {
            "condition": "When counting professionals",
            "operation": " count distinct \"professional_id\" values instead of counting all rows."
        },
        "220": {
            "condition": "When accessing treatment data",
            "operation": " use the \"Treatments\" table instead of the \"professionals\" table."
        },
        "221": {
            "condition": "When counting professionals, When accessing treatment data, When counting professionals who performed treatments",
            "operation": " include all treatments without filtering by treatment type."
        },
        "222": {
            "condition": "When counting professionals who have provided treatments",
            "operation": " count distinct \"professional_id\" values instead of counting all rows to get unique professionals."
        },
        "223": {
            "condition": "When accessing treatment-related information",
            "operation": " use the \"Treatments\" table as the data source instead of the \"professionals\" table."
        },
        "224": {
            "condition": "When counting professionals who have provided treatments, When accessing treatment-related information, When the question asks about professionals who have \"ever treated dogs\"",
            "operation": " do not apply any filtering conditions since we want to count all professionals who have provided any treatments."
        },
        "225": {
            "condition": "When the question asks for \"role\" from the Professionals table",
            "operation": " use the exact column name \"role_code\" instead of \"role\" in the output."
        },
        "226": {
            "condition": "When filtering for cities containing the substring 'West'",
            "operation": " use the exact literal 'West' with case sensitivity and the LIKE operator pattern '%West%' to match any city containing this substring."
        },
        "227": {
            "condition": "When the question asks for \"role\" from the Professionals table, When filtering for cities containing the substring 'West', When selecting output columns for professionals",
            "operation": " maintain the order role_code, street, city, state as specified in the question."
        },
        "228": {
            "condition": "When the question asks for \"role\"",
            "operation": " use the exact column name \"role_code\" from the Professionals table instead of \"role\"."
        },
        "229": {
            "condition": "When the question asks for \"role\", When filtering for cities containing the substring 'West'",
            "operation": " use the exact literal 'West' with case sensitivity and apply pattern matching to find cities containing this substring anywhere in their name."
        },
        "230": {
            "condition": "When the question asks for email information",
            "operation": " use the exact column name \"email_address\" instead of \"email\" from the Professionals table."
        },
        "231": {
            "condition": "When referencing the owners table",
            "operation": " use the exact table name \"Owners\" with proper case instead of \"owners\"."
        },
        "232": {
            "condition": "When the question asks for email information, When referencing the owners table, When the question mentions \"state whose name contains the substring 'North'\"",
            "operation": " use the exact literal '%North%' with proper case and percentage wildcards for pattern matching."
        },
        "233": {
            "condition": "When the question asks for \"email\"",
            "operation": " use the exact column name \"email_address\" from the Professionals table instead."
        },
        "234": {
            "condition": "When referencing the owners table",
            "operation": " use the exact table name \"Owners\" with proper case sensitivity."
        },
        "235": {
            "condition": "When the question asks for \"email\", When referencing the owners table, When the question mentions \"owners living in a state whose name contains the substring 'North'\"",
            "operation": " filter rows where the state column contains the literal substring 'North' exactly as specified."
        },
        "236": {
            "condition": "When counting dogs with age below average",
            "operation": " use the comparison operator `<` instead of `>` in the filter condition."
        },
        "237": {
            "condition": "When computing the average age",
            "operation": " maintain the aggregate function `AVG(age)` in the subquery without changing it."
        },
        "238": {
            "condition": "When referring to the table",
            "operation": " preserve the table name `Dogs` with consistent casing throughout the query."
        },
        "239": {
            "condition": "When counting dogs with age below average, When computing the average age, When referring to the table, When structuring the query",
            "operation": " keep the same structure with a correlated subquery filtering the main table instead of altering the approach."
        },
        "240": {
            "condition": "When the question asks for the cost of the most recent treatment",
            "operation": " select \"cost_of_treatment\" from table \"Treatments\" instead of using MAX(cost) aggregation."
        },
        "241": {
            "condition": "When ordering by treatment date to find the most recent",
            "operation": " order by \"date_of_treatment\" in descending order instead of \"date\"."
        },
        "242": {
            "condition": "When the question asks for the cost of the most recent treatment, When ordering by treatment date to find the most recent, When retrieving the single most recent treatment",
            "operation": " limit the result to 1 row after ordering by \"date_of_treatment\" descending."
        },
        "243": {
            "condition": "When the question asks for \"cost of treatment\"",
            "operation": " use the exact column name \"cost_of_treatment\" from the Treatments table."
        },
        "244": {
            "condition": "When ordering by treatment date to find the most recent treatment",
            "operation": " use the exact column name \"date_of_treatment\" from the Treatments table and sort in descending order."
        },
        "245": {
            "condition": "When the question asks for \"cost of treatment\", When ordering by treatment date to find the most recent treatment, When retrieving the single most recent treatment",
            "operation": " take only the first row after ordering by date_of_treatment in descending order."
        },
        "246": {
            "condition": "When counting entities",
            "operation": " use count(*) instead of COUNT(*) for consistency."
        },
        "247": {
            "condition": "When referencing the Dogs table",
            "operation": " use exact case \"Dogs\" instead of \"dogs\"."
        },
        "248": {
            "condition": "When identifying dogs without treatments",
            "operation": " use dog_id NOT IN (subquery) instead of treatment_id IS NULL."
        },
        "249": {
            "condition": "When creating the subquery for treatments",
            "operation": " select dog_id FROM Treatments to identify dogs that have received treatments."
        },
        "250": {
            "condition": "When counting entities, When referencing the Dogs table, When identifying dogs without treatments, When creating the subquery for treatments, When counting dogs without any treatment",
            "operation": " ensure the query accurately counts dogs that have never received any treatment by excluding those found in the Treatments subquery."
        },
        "251": {
            "condition": "When counting dogs that have not received any treatment",
            "operation": " use a subquery to check for dog_id values that are not present in the treatments table instead of checking for NULL values in the dogs table."
        },
        "252": {
            "condition": "When combining information about dogs and treatments",
            "operation": " reference both the dogs table and treatments table, filtering based on absence of records in the treatments table."
        },
        "253": {
            "condition": "When counting dogs that have not received any treatment, When combining information about dogs and treatments, When identifying dogs without treatments",
            "operation": " use the exact identifier \"dog_id\" to match between the dogs table and treatments table subquery."
        },
        "254": {
            "condition": "When the question asks about owners without dogs",
            "operation": " use the \"Owners\" table (capitalized) instead of \"owners\"."
        },
        "255": {
            "condition": "When identifying owners who temporarily do not have any dogs",
            "operation": " find owner_id values from Owners that are not present in the Dogs table's owner_id column."
        },
        "256": {
            "condition": "When the question asks about owners without dogs, When identifying owners who temporarily do not have any dogs, When counting owners without dogs",
            "operation": " count all rows from the filtered result set where owner_id is not in the Dogs table's owner_id values."
        },
        "257": {
            "condition": "When counting owners who do not own any dogs",
            "operation": " use a subquery to find owner_ids that are not present in the Dogs table instead of checking for NULL values."
        },
        "258": {
            "condition": "When referencing owners",
            "operation": " use the exact identifier \"owner_id\" from the Owners table as the counting key."
        },
        "259": {
            "condition": "When checking for owners without dogs",
            "operation": " compare \"owner_id\" from Owners against \"owner_id\" in the Dogs table using a NOT IN condition."
        },
        "260": {
            "condition": "When counting owners who do not own any dogs, When referencing owners, When checking for owners without dogs, When selecting from the Dogs table in the subquery",
            "operation": " use the exact column \"owner_id\" to identify which owners currently have dogs."
        },
        "261": {
            "condition": "When the question asks about professionals who did not operate any treatment",
            "operation": " check for professionals not in any treatments regardless of animal type, not just treatments for dogs."
        },
        "262": {
            "condition": "When referring to the Professionals table",
            "operation": " use the exact identifier \"Professionals\" with proper casing as shown in the schema."
        },
        "263": {
            "condition": "When the question asks about professionals who did not operate any treatment, When referring to the Professionals table, When counting professionals who provided no treatments",
            "operation": " use the professional_id as the counting key to identify unique professionals."
        },
        "264": {
            "condition": "When the question mentions \"dogs\"",
            "operation": " use the exact table name \"Dogs\" with capital D as shown in the schema."
        },
        "265": {
            "condition": "When identifying abandoned dogs",
            "operation": " use the column \"abandoned_yn\" with value 1 (not"
        },
        "266": {
            "condition": "to properly identify abandoned status.",
            "operation": "to properly identify abandoned status."
        },
        "267": {
            "condition": "When the question mentions \"dogs\", When identifying abandoned dogs, to properly identify abandoned status., When selecting dog attributes",
            "operation": " output the columns \"name\", \"age\", and \"weight\" in that exact order as specified in the question."
        },
        "268": {
            "condition": "When the question mentions \"dogs\"",
            "operation": " use the exact table name \"Dogs\" with proper case."
        },
        "269": {
            "condition": "When identifying abandoned dogs",
            "operation": " use the column \"abandoned_yn\" and the value 1 (not"
        },
        "270": {
            "condition": "to match the schema's representation where 1 means yes/abandoned.",
            "operation": "to match the schema's representation where 1 means yes/abandoned."
        },
        "271": {
            "condition": "When the question mentions \"dogs\", When identifying abandoned dogs, to match the schema's representation where 1 means yes/abandoned., When selecting dog attributes",
            "operation": " output the columns \"name\", \"age\", and \"weight\" in that order."
        },
        "272": {
            "condition": "When the question asks for \"average age of all the dogs\"",
            "operation": " calculate the average of the \"age\" column instead of \"height\"."
        },
        "273": {
            "condition": "When the question asks for \"average age of all the dogs\", When referencing the table containing dog information",
            "operation": " use the exact table name \"Dogs\" with proper case sensitivity as shown in the schema."
        },
        "274": {
            "condition": "When answering about \"average age of all the dogs\"",
            "operation": " use table \"Dogs\" as the data source instead of \"cats\"."
        },
        "275": {
            "condition": "When answering about \"average age of all the dogs\", When computing the average age",
            "operation": " use the lowercase \"avg\" function for consistent naming convention."
        },
        "276": {
            "condition": "When the question asks for the \"oldest\" dog",
            "operation": " use max(age) instead of min(age) to find the maximum age."
        },
        "277": {
            "condition": "When the question asks for the \"oldest\" dog, When referring to the table containing dog information",
            "operation": " use the exact table name \"Dogs\" with capital D, not \"dogs\"."
        },
        "278": {
            "condition": "When the question asks for the \"oldest\" dog",
            "operation": " use max(age) instead of min(age) to find the maximum age."
        },
        "279": {
            "condition": "When the question asks for the \"oldest\" dog, When referring to the table containing dog information",
            "operation": " use the exact table name \"Dogs\" with proper capitalization as shown in the schema."
        },
        "280": {
            "condition": "When the question asks for charge type costs and lists both charge type and amount",
            "operation": " select individual charge records with exact column names \"charge_type\" and \"charge_amount\" instead of using aggregate functions."
        },
        "281": {
            "condition": "When retrieving individual charge records",
            "operation": " do not use GROUP BY clauses or aggregation functions like SUM()."
        },
        "282": {
            "condition": "When the question asks for charge type costs and lists both charge type and amount, When retrieving individual charge records, When selecting charge amounts",
            "operation": " use the exact column name \"charge_amount\" as specified in the schema, not generic names like \"amount\"."
        },
        "283": {
            "condition": "When the question asks to list charge types and amounts",
            "operation": " select the exact column \"charge_amount\" from table \"Charges\" without any aggregation."
        },
        "284": {
            "condition": "When referencing the table name",
            "operation": " use exact case-sensitive identifier \"Charges\" instead of lowercase \"charges\"."
        },
        "285": {
            "condition": "When no aggregation is requested",
            "operation": " do not use GROUP BY clauses or aggregate functions like SUM()."
        },
        "286": {
            "condition": "When the question asks to list charge types and amounts, When referencing the table name, When no aggregation is requested, When retrieving individual records",
            "operation": " return each charge record with its type and amount values directly from the table."
        },
        "287": {
            "condition": "When the question asks for the \"most expensive charge type\"",
            "operation": " use the maximum aggregation function on the charge_amount column."
        },
        "288": {
            "condition": "When referencing the charge amount data",
            "operation": " query from the \"Charges\" table instead of \"charge_types\"."
        },
        "289": {
            "condition": "When the question asks for the \"most expensive charge type\", When referencing the charge amount data, When computing the maximum charge amount",
            "operation": " use max(charge_amount) instead of MIN(cost) to correctly find the highest value."
        },
        "290": {
            "condition": "When the question asks for \"email\"",
            "operation": " use the exact column name \"email_address\" from the Professionals table."
        },
        "291": {
            "condition": "When the question asks for \"cell phone\"",
            "operation": " use the exact column name \"cell_number\" from the Professionals table."
        },
        "292": {
            "condition": "When the question asks for \"home phone\"",
            "operation": " use the exact column name \"home_phone\" from the Professionals table."
        },
        "293": {
            "condition": "When the question asks for \"email\", When the question asks for \"cell phone\", When the question asks for \"home phone\", When answering about \"List the email, cell phone and home phone of all the professionals\"",
            "operation": " make sure the output order: email_address, cell_number, home_phone."
        },
        "294": {
            "condition": "When the question asks for \"email\"",
            "operation": " use the exact column name \"email_address\" from the Professionals table."
        },
        "295": {
            "condition": "When the question asks for \"cell phone\"",
            "operation": " use the exact column name \"cell_number\" from the Professionals table."
        },
        "296": {
            "condition": "When the question asks for \"home phone\"",
            "operation": " use the exact column name \"home_phone\" from the Professionals table."
        },
        "297": {
            "condition": "When the question asks for \"email\", When the question asks for \"cell phone\", When the question asks for \"home phone\", When answering about \"email, cell phone and home phone of each professional\"",
            "operation": " make sure the output order: email_address, cell_number, home_phone."
        },
        "298": {
            "condition": "When the question asks for breed type and size type combinations",
            "operation": " use \"breed_code\" and \"size_code\" columns from the Dogs table instead of \"breed_type\" and \"size_type\"."
        },
        "299": {
            "condition": "When retrieving all possible combinations of two columns",
            "operation": " use DISTINCT to get unique pairs of values from \"breed_code\" and \"size_code\"."
        },
        "300": {
            "condition": "When the question asks for breed type and size type combinations, When retrieving all possible combinations of two columns, When the question asks for combinations without aggregation",
            "operation": " do not use GROUP BY, use DISTINCT on the column pair instead."
        },
        "301": {
            "condition": "When the question asks for distinct breed type and size type combinations",
            "operation": " use DISTINCT instead of GROUP BY to get unique combinations."
        },
        "302": {
            "condition": "When selecting breed type information",
            "operation": " use the exact column token \"breed_code\" instead of \"breed\"."
        },
        "303": {
            "condition": "When selecting size type information",
            "operation": " use the exact column token \"size_code\" instead of \"size\"."
        },
        "304": {
            "condition": "When the question asks for distinct breed type and size type combinations, When selecting breed type information, When selecting size type information, When outputting the results",
            "operation": " maintain the column order as breed_code followed by size_code."
        },
        "305": {
            "condition": "When answering about professionals and their treatment descriptions",
            "operation": " make sure the output order: first_name, treatment_type_description"
        },
        "306": {
            "condition": "When the question mentions \"professionals\" and \"treatment they have done\"",
            "operation": " \"professionals\" actually means \"T1\" in schema and \"treatment they have done\" actually means \"T3.treatment_type_description\" in schema"
        },
        "307": {
            "condition": "When combining multiple tables for this question",
            "operation": " link T1 and T2 where T1.professional_id = T2.professional_id, then link T2 and T3 where T2.treatment_type_code = T3.treatment_type_code, keeping only matching pairs (inner match)"
        },
        "308": {
            "condition": "When selecting professional names and treatment descriptions",
            "operation": " use DISTINCT to remove duplicate rows"
        },
        "309": {
            "condition": "When answering about professionals and their treatment descriptions, When the question mentions \"professionals\" and \"treatment they have done\", When combining multiple tables for this question, When selecting professional names and treatment descriptions, When referring to table roles",
            "operation": " use T1 for professionals table, T2 for treatments table, and T3 for Treatment_types table"
        },
        "310": {
            "condition": "When the question asks for \"each professional's first name\"",
            "operation": " select \"T1\".\"first_name\" exactly as shown in the schema."
        },
        "311": {
            "condition": "When the question asks for \"description of the treatment they have performed\"",
            "operation": " select \"T3\".\"treatment_type_description\" instead of \"treatment_description\"."
        },
        "312": {
            "condition": "When retrieving information about professionals and their treatments",
            "operation": " join \"Professionals\" as T1 to \"treatments\" as T2 using \"T1\".\"professional_id\" = \"T2\".\"professional_id\"."
        },
        "313": {
            "condition": "When needing treatment type descriptions",
            "operation": " join \"Treatment_types\" as T3 to T2 using \"T2\".\"treatment_type_code\" = \"T3\".\"treatment_type_code\"."
        },
        "314": {
            "condition": "When the question asks for \"each professional's first name\", When the question asks for \"description of the treatment they have performed\", When retrieving information about professionals and their treatments, When needing treatment type descriptions, When the question asks for \"each professional\"",
            "operation": " use DISTINCT to ensure each professional appears only once in the results."
        }
    },
    "singer": {
        "0": {
            "condition": "When answering about \"how many singers\"",
            "operation": " make sure to count records from the \"singer\" table instead of the \"songs\" table."
        },
        "1": {
            "condition": "When answering about \"how many singers\", When counting entities",
            "operation": " use the canonical key for counting (typically the primary key of the table being counted)."
        },
        "2": {
            "condition": "When answering about \"count of singers\"",
            "operation": " use the exact table name \"singer\" instead of \"singers\"."
        },
        "3": {
            "condition": "When answering about \"count of singers\", When counting all records in a table",
            "operation": " do not apply any WHERE filter conditions unless explicitly specified in the question."
        },
        "4": {
            "condition": "When the question asks for \"name of singers\"",
            "operation": " use the exact column token \"Name\" from table \"singer\" (not \"name\" from \"singers\")."
        },
        "5": {
            "condition": "When ordering by \"net worth\"",
            "operation": " use the exact column token \"Net_Worth_Millions\" from table \"singer\"."
        },
        "6": {
            "condition": "When the question asks for \"name of singers\", When ordering by \"net worth\", When the question specifies \"ascending order\"",
            "operation": " order the results in ascending (ASC) direction, not descending (DESC)."
        },
        "7": {
            "condition": "When the question asks for singer names",
            "operation": " use the exact column \"Name\" from table \"singer\" (not \"name\" or \"singers\")."
        },
        "8": {
            "condition": "When ordering singers by net worth",
            "operation": " use the exact column \"Net_Worth_Millions\" for ordering in ascending direction."
        },
        "9": {
            "condition": "When the question asks for singer names, When ordering singers by net worth, When selecting from the singer table",
            "operation": " use the exact table name \"singer\" (not \"singers\")."
        },
        "10": {
            "condition": "When the question mentions \"singers\"",
            "operation": " use the exact table name \"singer\" instead of \"singers\"."
        },
        "11": {
            "condition": "When selecting columns \"birth year\" and \"citizenship\"",
            "operation": " use the exact column names \"Birth_Year\" and \"Citizenship\" with proper capitalization."
        },
        "12": {
            "condition": "When the question mentions \"singers\", When selecting columns \"birth year\" and \"citizenship\", When filtering by birth year greater than 2000",
            "operation": " keep the condition \"birth_year > 2000\" unchanged as the filter logic is correct."
        },
        "13": {
            "condition": "When answering about \"birth year and citizenship of singers\"",
            "operation": " make sure the output order: Birth_Year, Citizenship."
        },
        "14": {
            "condition": "When the question asks for all singers",
            "operation": " include all records without any filter condition on birth_year or other columns."
        },
        "15": {
            "condition": "When answering about \"birth year and citizenship of singers\", When the question asks for all singers, When handling the singer table",
            "operation": " use the exact column identifiers Birth_Year and Citizenship as shown in the schema."
        },
        "16": {
            "condition": "When the question mentions \"singers\"",
            "operation": " use the exact table name \"singer\" instead of \"singers\"."
        },
        "17": {
            "condition": "When selecting birth year and citizenship columns",
            "operation": " use the exact column names \"Birth_Year\" and \"Citizenship\" with proper capitalization."
        },
        "18": {
            "condition": "When the question mentions \"singers\", When selecting birth year and citizenship columns, When filtering for birth years after 2000",
            "operation": " apply the condition Birth_Year > 2000 to select records born after the year 2000."
        },
        "19": {
            "condition": "When answering about \"birth years and citizenships of the singers\"",
            "operation": " make sure the output order: Birth_Year, Citizenship"
        },
        "20": {
            "condition": "When the question asks for all singers' information",
            "operation": " do not apply any filtering conditions on Birth_Year or other columns"
        },
        "21": {
            "condition": "When answering about \"birth years and citizenships of the singers\", When the question asks for all singers' information, When selecting from the singer table",
            "operation": " include all records without any WHERE clause restrictions"
        },
        "22": {
            "condition": "When the question asks about singers",
            "operation": " use the table name \"singer\" exactly as shown in the schema."
        },
        "23": {
            "condition": "When the question mentions \"name\"",
            "operation": " use the column \"Name\" from the \"singer\" table."
        },
        "24": {
            "condition": "When the question mentions \"citizenship\"",
            "operation": " use the column \"Citizenship\" from the \"singer\" table."
        },
        "25": {
            "condition": "When the question asks about singers, When the question mentions \"name\", When the question mentions \"citizenship\", When filtering for singers whose citizenship is not \"France\"",
            "operation": " use the inequality condition != \"France\" (exact case and quotes) instead of equality."
        },
        "26": {
            "condition": "When answering about \"names of singers who are not French citizens\"",
            "operation": " make sure the output order: Name from table singer."
        },
        "27": {
            "condition": "When the question mentions \"singers\"",
            "operation": " \"singers\" actually means \"singer\" in schema."
        },
        "28": {
            "condition": "When the question mentions \"not French citizens\"",
            "operation": " \"French citizens\" actually means \"Citizenship = 'France'\" in schema, so filter for Citizenship != \"France\"."
        },
        "29": {
            "condition": "When answering about \"names of singers who are not French citizens\", When the question mentions \"singers\", When the question mentions \"not French citizens\", When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms for column names like \"Citizenship\"."
        },
        "30": {
            "condition": "When the question asks for singer names",
            "operation": " use the exact column token \"Name\" from the singer table."
        },
        "31": {
            "condition": "When the question mentions birth year",
            "operation": " use the exact column token \"Birth_Year\" from the singer table."
        },
        "32": {
            "condition": "When the question specifies birth years 1948 or 1949",
            "operation": " filter for rows where \"Birth_Year\" equals exactly 1948 or exactly 1949."
        },
        "33": {
            "condition": "When the question asks for singer names, When the question mentions birth year, When the question specifies birth years 1948 or 1949, When selecting from the singer table",
            "operation": " use the exact table name \"singer\" (not \"singers\")."
        },
        "34": {
            "condition": "When the question asks for singer names",
            "operation": " use the exact column token \"Name\" from the singer table."
        },
        "35": {
            "condition": "When the question mentions birth years",
            "operation": " use the exact column token \"Birth_Year\" from the singer table."
        },
        "36": {
            "condition": "When filtering for specific birth years 1948 or 1949",
            "operation": " use exact numeric values 1948 and 1949 without quotes."
        },
        "37": {
            "condition": "When the question asks for singer names, When the question mentions birth years, When filtering for specific birth years 1948 or 1949, When referencing the table containing singer information",
            "operation": " use the exact table name \"singer\" (singular) not \"singers\" (plural)."
        },
        "38": {
            "condition": "When the question asks about \"singer\"",
            "operation": " use the exact table name \"singer\" instead of \"singers\"."
        },
        "39": {
            "condition": "When the question asks for \"name\"",
            "operation": " use the exact column name \"Name\" instead of \"name\"."
        },
        "40": {
            "condition": "When the question asks for the \"largest net worth\"",
            "operation": " use the exact column name \"Net_Worth_Millions\" and sort in descending order instead of ascending order."
        },
        "41": {
            "condition": "When the question asks about \"singer\", When the question asks for \"name\", When the question asks for the \"largest net worth\", When answering about \"the singer with the largest net worth\"",
            "operation": " make sure the output order: \"Name\"."
        },
        "42": {
            "condition": "When the question asks about singers",
            "operation": " use the exact table name \"singer\" instead of \"singers\"."
        },
        "43": {
            "condition": "When selecting the name of a singer",
            "operation": " use the exact column name \"Name\" from the singer table."
        },
        "44": {
            "condition": "When ordering by net worth to find the highest value",
            "operation": " use the exact column name \"Net_Worth_Millions\" for sorting in descending order."
        },
        "45": {
            "condition": "When the question asks about singers, When selecting the name of a singer, When ordering by net worth to find the highest value, When finding the singer with the highest net worth",
            "operation": " take only the first row after ordering by \"Net_Worth_Millions\" in descending order."
        },
        "46": {
            "condition": "When the question asks about \"citizenship\"",
            "operation": " use the exact column name \"Citizenship\" from the singer table."
        },
        "47": {
            "condition": "When counting singers per citizenship",
            "operation": " group by \"Citizenship\" and count using the canonical key for singers."
        },
        "48": {
            "condition": "When the question asks for \"number of singers\"",
            "operation": " compute the count of singers grouped by their citizenship values."
        },
        "49": {
            "condition": "When the question asks about \"citizenship\", When counting singers per citizenship, When the question asks for \"number of singers\", When referencing the table containing singer information",
            "operation": " use the exact table name \"singer\" (not \"singers\")."
        },
        "50": {
            "condition": "When answering about \"citizenship and count of singers\"",
            "operation": " make sure the output order: Citizenship, COUNT(*)"
        },
        "51": {
            "condition": "When the question mentions \"citizenship\"",
            "operation": " \"citizenship\" actually means \"Citizenship in schema\""
        },
        "52": {
            "condition": "When the question asks for \"count of singers\"",
            "operation": " compute the number of rows using the table singer"
        },
        "53": {
            "condition": "When the question says \"per citizenship\"/\"by citizenship\"",
            "operation": " organize results by Citizenship and compute requested aggregates per group"
        },
        "54": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms"
        },
        "55": {
            "condition": "When answering about \"citizenship and count of singers\", When the question mentions \"citizenship\", When the question asks for \"count of singers\", When the question says \"per citizenship\"/\"by citizenship\", When choosing identifier delimiters, When handling text literals",
            "operation": " do not change case, spacing, or punctuation"
        },
        "56": {
            "condition": "When the question asks about \"citizenship\"",
            "operation": " use the exact column name \"Citizenship\" from the singer table."
        },
        "57": {
            "condition": "When the question asks for \"most common\"",
            "operation": " order by the count in descending direction to find the highest frequency."
        },
        "58": {
            "condition": "When grouping by citizenship",
            "operation": " use \"GROUP BY Citizenship\" to organize results by citizenship values."
        },
        "59": {
            "condition": "When limiting to the single most common result",
            "operation": " use \"LIMIT 1\" to return only the top result."
        },
        "60": {
            "condition": "When counting occurrences",
            "operation": " use COUNT(*) to count all rows per citizenship group."
        },
        "61": {
            "condition": "When the question asks about \"citizenship\", When the question asks for \"most common\", When grouping by citizenship, When limiting to the single most common result, When counting occurrences, When producing output",
            "operation": " return only the citizenship value without any count alias in the final output."
        },
        "62": {
            "condition": "When the question asks for \"most common\" or \"highest frequency\"",
            "operation": " order the results by count in descending order to find the maximum value."
        },
        "63": {
            "condition": "When the question asks for a single most common value",
            "operation": " use LIMIT 1 to return only the top result."
        },
        "64": {
            "condition": "When the output should show only the categorical value (not the count)",
            "operation": " exclude the count column from the final SELECT list."
        },
        "65": {
            "condition": "When the question asks for \"most common\" or \"highest frequency\", When the question asks for a single most common value, When the output should show only the categorical value (not the count), When grouping by a categorical column like citizenship",
            "operation": " maintain the GROUP BY clause to organize results by that column."
        },
        "66": {
            "condition": "When the question asks about \"citizenships\"",
            "operation": " use the exact column name \"Citizenship\" from the singer table."
        },
        "67": {
            "condition": "When the question asks about \"net worth\"",
            "operation": " use the exact column name \"Net_Worth_Millions\" from the singer table."
        },
        "68": {
            "condition": "When the question asks for \"maximum net worth\" grouped by citizenship",
            "operation": " compute the maximum value of \"Net_Worth_Millions\" for each distinct value of \"Citizenship\"."
        },
        "69": {
            "condition": "When referencing the table containing singer information",
            "operation": " use the exact table name \"singer\" (not \"singers\")."
        },
        "70": {
            "condition": "When the question asks about \"citizenships\", When the question asks about \"net worth\", When the question asks for \"maximum net worth\" grouped by citizenship, When referencing the table containing singer information, When organizing results by citizenship",
            "operation": " group by the \"Citizenship\" column to compute aggregates per citizenship group."
        },
        "71": {
            "condition": "When answering about maximum net worth per citizenship",
            "operation": " use max(Net_Worth_Millions) to calculate the maximum value."
        },
        "72": {
            "condition": "When the question mentions \"citizenship\"",
            "operation": " \"citizenship\" actually means \"Citizenship\" in schema."
        },
        "73": {
            "condition": "When the question asks for maximum values",
            "operation": " do not use aliases in the output."
        },
        "74": {
            "condition": "When answering about maximum net worth per citizenship, When the question mentions \"citizenship\", When the question asks for maximum values, When querying data about singers",
            "operation": " use table singer instead of people to access the correct data source."
        },
        "75": {
            "condition": "When answering about \"titles of songs and names of singers\"",
            "operation": " make sure the output order: T2.Title, T1.Name"
        },
        "76": {
            "condition": "When combining singer table as T1 and song table as T2",
            "operation": " link rows where T1.Singer_ID = T2.Singer_ID and keep only matching pairs (inner match)"
        },
        "77": {
            "condition": "When referencing columns from joined tables",
            "operation": " always qualify column names with table aliases as T2.Title and T1.Name instead of unqualified column names"
        },
        "78": {
            "condition": "When answering about \"titles of songs and names of singers\", When combining singer table as T1 and song table as T2, When referencing columns from joined tables, When querying multiple tables",
            "operation": " always specify explicit table aliases T1 for singer table and T2 for song table instead of omitting them"
        },
        "79": {
            "condition": "When answering about \"song titles and singer names\"",
            "operation": " make sure the output order: T2.Title, T1.Name"
        },
        "80": {
            "condition": "When combining singer and song tables",
            "operation": " link rows where T1.Singer_ID = T2.Singer_ID exactly as shown; keep only matching pairs (inner match)"
        },
        "81": {
            "condition": "When referring to table roles",
            "operation": " use T1 for singer table and T2 for song table as established by the amends"
        },
        "82": {
            "condition": "When choosing identifier delimiters",
            "operation": " do not replace double quotes with backticks or unquoted forms"
        },
        "83": {
            "condition": "When answering about \"song titles and singer names\", When combining singer and song tables, When referring to table roles, When choosing identifier delimiters, When handling text literals",
            "operation": " do not change case, spacing, or punctuation"
        },
        "84": {
            "condition": "When the question asks for \"distinct names of singers\"",
            "operation": " use DISTINCT T1.Name to eliminate duplicate singer names."
        },
        "85": {
            "condition": "When combining singers and songs tables",
            "operation": " link rows where T1.Singer_ID = T2.Singer_ID and keep only matching pairs (inner match)."
        },
        "86": {
            "condition": "When filtering for songs with sales more than 300000",
            "operation": " apply the condition T2.Sales > 300000 to reference song sales rather than singer sales."
        },
        "87": {
            "condition": "When the question asks for \"distinct names of singers\", When combining singers and songs tables, When filtering for songs with sales more than 300000, When answering about singers with songs meeting criteria",
            "operation": " make sure the output order: T1.Name"
        },
        "88": {
            "condition": "When answering about \"different names of singers\"",
            "operation": " make sure to use DISTINCT T1.Name to eliminate duplicate singer names."
        },
        "89": {
            "condition": "When combining singers table (T1) and song table (T2)",
            "operation": " link rows where T1.Singer_ID = T2.Singer_ID and keep only matching pairs (inner match)."
        },
        "90": {
            "condition": "When filtering for songs with sales more than 300000",
            "operation": " use T2.Sales > 300000 to reference the song sales column."
        },
        "91": {
            "condition": "When answering about \"different names of singers\", When combining singers table (T1) and song table (T2), When filtering for songs with sales more than 300000, When the question asks for \"different names\"",
            "operation": " ensure the output shows only unique singer names from T1.Name."
        },
        "92": {
            "condition": "When answering about \"singers that have more than one song\"",
            "operation": " make sure the output order: T1.Name"
        },
        "93": {
            "condition": "When the question mentions \"singers\"",
            "operation": " \"singers\" actually means \"singer AS T1\" in schema"
        },
        "94": {
            "condition": "When the question mentions \"more than one song\"",
            "operation": " count songs using COUNT(*) per singer and filter for COUNT(*) > 1"
        },
        "95": {
            "condition": "When combining T1 and song for shared entities",
            "operation": " link rows where T1.Singer_ID = song.Singer_ID; keep only matching pairs (inner match)"
        },
        "96": {
            "condition": "When the question asks for \"names of singers\"",
            "operation": " select T1.Name with proper table qualification instead of just name"
        },
        "97": {
            "condition": "When answering about \"singers that have more than one song\", When the question mentions \"singers\", When the question mentions \"more than one song\", When combining T1 and song for shared entities, When the question asks for \"names of singers\", When the question says \"per singer\"/\"by singer\"",
            "operation": " organize results by T1.Name and compute requested aggregates per group"
        },
        "98": {
            "condition": "When answering about \"names of singers that have more than one songs\"",
            "operation": " make sure the output order: T1.Name"
        },
        "99": {
            "condition": "When the question mentions \"singers that have more than one songs\"",
            "operation": " join table \"singer\" as T1 and table \"song\" as T2 where T1.Singer_ID = T2.Singer_ID and keep only matching pairs (inner match)"
        },
        "100": {
            "condition": "When counting songs per singer",
            "operation": " organize results by T1.Name and compute COUNT(*) per group"
        },
        "101": {
            "condition": "When filtering for singers with more than one song",
            "operation": " use HAVING COUNT(*) > 1 instead of WHERE clause for aggregate conditions"
        },
        "102": {
            "condition": "When answering about \"names of singers that have more than one songs\", When the question mentions \"singers that have more than one songs\", When counting songs per singer, When filtering for singers with more than one song, When referencing singer names",
            "operation": " use T1.Name with exact alias T1 from the joined singer table"
        },
        "103": {
            "condition": "When answering about \"names of singers and the total sales of their songs\"",
            "operation": " make sure the output order: T1.Name, sum(T2.Sales)."
        },
        "104": {
            "condition": "When the question mentions \"singers\"",
            "operation": " \"singers\" actually means \"T1.Name in schema\"."
        },
        "105": {
            "condition": "When the question mentions \"total sales\"",
            "operation": " \"total sales\" actually means \"sum(T2.Sales) in schema\"."
        },
        "106": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Singer_ID = T2.Singer_ID; keep only matching pairs (inner match)."
        },
        "107": {
            "condition": "When answering about \"names of singers and the total sales of their songs\", When the question mentions \"singers\", When the question mentions \"total sales\", When combining T1 and T2 for shared entities, When the question says \"per singer\"/\"by singer\"",
            "operation": " organize results by T1.Name and compute sum(T2.Sales) per group."
        },
        "108": {
            "condition": "When answering about \"total sales for each singer name\"",
            "operation": " make sure the output order: T1.Name, sum(T2.Sales)."
        },
        "109": {
            "condition": "When the question mentions \"singer name\"",
            "operation": " \"singer name\" actually means \"T1.Name in schema\"."
        },
        "110": {
            "condition": "When the question mentions \"total sales\"",
            "operation": " \"total sales\" actually means \"sum(T2.Sales) in schema\"."
        },
        "111": {
            "condition": "When combining T1 and T2 for shared entities",
            "operation": " link rows where T1.Singer_ID = T2.Singer_ID; keep only matching pairs (inner match)."
        },
        "112": {
            "condition": "When answering about \"total sales for each singer name\", When the question mentions \"singer name\", When the question mentions \"total sales\", When combining T1 and T2 for shared entities, When the question says \"per singer name\"",
            "operation": " organize results by T1.Name and compute sum(T2.Sales) per group."
        },
        "113": {
            "condition": "When the question asks for \"name of singers\"",
            "operation": " select \"Name\" from table \"singer\" instead of \"name\" from \"singers\"."
        },
        "114": {
            "condition": "When identifying singers without songs",
            "operation": " use a NOT IN subquery checking for \"Singer_ID\" values that exist in the \"song\" table instead of filtering with \"song_id IS NULL\"."
        },
        "115": {
            "condition": "When referencing the singer table",
            "operation": " use the correct table name \"singer\" instead of \"singers\"."
        },
        "116": {
            "condition": "When the question asks for \"name of singers\", When identifying singers without songs, When referencing the singer table, When correlating between singer and song tables",
            "operation": " use the proper column \"Singer_ID\" for the correlation instead of the incorrect \"song_id\" field."
        },
        "117": {
            "condition": "When answering about \"sname of every sing that does not have any song\"",
            "operation": " select \"Name\" from the \"singer\" table instead of \"sname\" from \"sing\"."
        },
        "118": {
            "condition": "When identifying singers without songs",
            "operation": " use a WHERE clause with \"Singer_ID NOT IN\" subquery instead of checking for null values."
        },
        "119": {
            "condition": "When referencing the singer table",
            "operation": " use the correct table name \"singer\" instead of \"sing\"."
        },
        "120": {
            "condition": "When using the singer identifier",
            "operation": " use the proper column name \"Singer_ID\" in both the main query and subquery instead of \"song_id\"."
        },
        "121": {
            "condition": "When answering about \"sname of every sing that does not have any song\", When identifying singers without songs, When referencing the singer table, When using the singer identifier, When checking for singers without songs",
            "operation": " include a correlated subquery that checks for singers without songs in the \"song\" table instead of simply checking for null values."
        },
        "122": {
            "condition": "When the question asks for a citizenship shared by singers meeting two different conditions",
            "operation": " use INTERSECT to find citizenships that appear in both groups rather than OR which would return citizenships from either group independently."
        },
        "123": {
            "condition": "When referencing the singer table",
            "operation": " use the exact table name \"singer\" instead of \"singers\"."
        },
        "124": {
            "condition": "When selecting citizenship information",
            "operation": " use the exact column name \"Citizenship\" with proper capitalization instead of lowercase \"citizenship\"."
        },
        "125": {
            "condition": "When filtering by birth year",
            "operation": " use the exact column name \"Birth_Year\" with proper capitalization instead of lowercase \"birth_year\"."
        },
        "126": {
            "condition": "When finding singers born before 1945",
            "operation": " create one query selecting \"Citizenship\" from \"singer\" where \"Birth_Year\" < 1945."
        },
        "127": {
            "condition": "When finding singers born after 1955",
            "operation": " create another query selecting \"Citizenship\" from \"singer\" where \"Birth_Year\" > 1955."
        },
        "128": {
            "condition": "When the question asks for a citizenship shared by singers meeting two different conditions, When referencing the singer table, When selecting citizenship information, When filtering by birth year, When finding singers born before 1945, When finding singers born after 1955, When combining the two groups",
            "operation": " use INTERSECT between the two queries to find only citizenships that appear in both the pre-1945 and post-1955 birth year groups."
        },
        "129": {
            "condition": "When the question asks for citizenships shared by two groups",
            "operation": " use INTERSECT between separate queries for each group instead of OR in a single query."
        },
        "130": {
            "condition": "When referencing the citizenship column",
            "operation": " use exact token \"Citizenship\" with proper capitalization instead of lowercase \"citizenship\"."
        },
        "131": {
            "condition": "When referencing the table",
            "operation": " use exact table name \"singer\" instead of plural \"singers\"."
        },
        "132": {
            "condition": "When using INTERSECT",
            "operation": " remove DISTINCT since INTERSECT inherently returns distinct values."
        },
        "133": {
            "condition": "When the question asks for citizenships shared by two groups, When referencing the citizenship column, When referencing the table, When using INTERSECT, When splitting birth year conditions",
            "operation": " create separate queries with \"Birth_Year < 1945\" and \"Birth_Year > 1955\" instead of combining them with OR."
        }
    },
    "real_estate_properties": {
        "0": {
            "condition": "When answering about \"available features\"",
            "operation": " use the table \"Other_Available_Features\" instead of \"features\"."
        },
        "1": {
            "condition": "When filtering for available status",
            "operation": " use the condition status = 'available' instead of status = 'unavailable'."
        },
        "2": {
            "condition": "When answering about \"available features\", When filtering for available status, When counting available features",
            "operation": " count all rows from \"Other_Available_Features\" where status equals 'available'."
        },
        "3": {
            "condition": "When counting all available features",
            "operation": " count all rows in the \"Other_Available_Features\" table without any filtering conditions."
        },
        "4": {
            "condition": "When the question asks for \"how many available features are there in total\"",
            "operation": " do not apply any status filter and include all rows from the \"Other_Available_Features\" table."
        },
        "5": {
            "condition": "When counting all available features, When the question asks for \"how many available features are there in total\", When producing output for count results",
            "operation": " do not use column aliases like \"total_available_features\" and return the count directly."
        },
        "6": {
            "condition": "When the question asks for \"feature type name of feature AirCon\"",
            "operation": " select T2.feature_type_name instead of feature_name."
        },
        "7": {
            "condition": "When combining Other_Available_Features and Ref_Feature_Types",
            "operation": " link rows where T1.feature_type_code = T2.feature_type_code and keep only matching pairs (inner match)."
        },
        "8": {
            "condition": "When filtering for feature \"AirCon\"",
            "operation": " use T1.feature_name = \"AirCon\" exactly as specified with double quotes."
        },
        "9": {
            "condition": "When the question asks for \"feature type name of feature AirCon\", When combining Other_Available_Features and Ref_Feature_Types, When filtering for feature \"AirCon\", When answering about feature type name",
            "operation": " make sure the output order: T2.feature_type_name."
        },
        "10": {
            "condition": "When answering about \"property type descriptions of properties\"",
            "operation": " make sure the output order: T2.property_type_description"
        },
        "11": {
            "condition": "When combining T1 (properties) and T2 (Ref_Property_Types) for shared entities",
            "operation": " link rows where T1.property_type_code = T2.property_type_code and keep only matching pairs (inner match)"
        },
        "12": {
            "condition": "When the question says \"per property type code\"",
            "operation": " organize results by T1.property_type_code and compute requested descriptions per group"
        },
        "13": {
            "condition": "When answering about \"property type descriptions of properties\", When combining T1 (properties) and T2 (Ref_Property_Types) for shared entities, When the question says \"per property type code\", When the question mentions \"that code\"",
            "operation": " do not filter by property_code = 'that code' as this is incorrect for grouping by property type"
        },
        "14": {
            "condition": "When selecting property names",
            "operation": " use \"property_name\" instead of \"name\" as the output column."
        },
        "15": {
            "condition": "When the question mentions \"houses\" or \"apartments\"",
            "operation": " these correspond to exact string values \"House\" and \"Apartment\" in column \"property_type_code\"."
        },
        "16": {
            "condition": "When combining results for different property types",
            "operation": " use UNION to separate house selection (without room count restriction) from apartment selection (with room count requirement)."
        },
        "17": {
            "condition": "When filtering apartments",
            "operation": " apply room_count > 1 condition only to apartments, not to houses."
        },
        "18": {
            "condition": "When referring to the table",
            "operation": " use \"Properties\" (exact case) instead of \"properties\"."
        },
        "19": {
            "condition": "When selecting property names, When the question mentions \"houses\" or \"apartments\", When combining results for different property types, When filtering apartments, When referring to the table, When counting rooms",
            "operation": " use column \"room_count\" instead of \"rooms\"."
        }
    }
}